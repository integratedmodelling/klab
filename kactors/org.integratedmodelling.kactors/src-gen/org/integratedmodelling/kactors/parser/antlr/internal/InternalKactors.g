/*
 * generated by Xtext 2.33.0
 */
grammar InternalKactors;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.kactors.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.integratedmodelling.kactors.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kactors.services.KactorsGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private KactorsGrammarAccess grammarAccess;

    public InternalKactorsParser(TokenStream input, KactorsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected KactorsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0());
				}
				lv_preamble_1_0=rulePreamble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"preamble",
						lv_preamble_1_0,
						"org.integratedmodelling.kactors.Kactors.Preamble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0());
				}
				lv_definitions_2_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"definitions",
						lv_definitions_2_0,
						"org.integratedmodelling.kactors.Kactors.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getPreambleAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	iv_rulePreamble=rulePreamble
	{ $current=$iv_rulePreamble.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule Preamble
rulePreamble returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getPreambleAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPreambleAccess().getPreambleAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						(
							lv_public_1_0='public'
							{
								newLeafNode(lv_public_1_0, grammarAccess.getPreambleAccess().getPublicPublicKeyword_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "public", lv_public_1_0 != null, "public");
							}
						)
					)?
					(
						(
							(
								lv_mobile_2_0='mobile'
								{
									newLeafNode(lv_mobile_2_0, grammarAccess.getPreambleAccess().getMobileMobileKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPreambleRule());
									}
									setWithLastConsumed($current, "mobile", lv_mobile_2_0 != null, "mobile");
								}
							)
						)
						    |
						(
							(
								lv_desktop_3_0='desktop'
								{
									newLeafNode(lv_desktop_3_0, grammarAccess.getPreambleAccess().getDesktopDesktopKeyword_1_0_0_1_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPreambleRule());
									}
									setWithLastConsumed($current, "desktop", lv_desktop_3_0 != null, "desktop");
								}
							)
						)
						    |
						(
							(
								lv_web_4_0='web'
								{
									newLeafNode(lv_web_4_0, grammarAccess.getPreambleAccess().getWebWebKeyword_1_0_0_1_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPreambleRule());
									}
									setWithLastConsumed($current, "web", lv_web_4_0 != null, "web");
								}
							)
						)
					)?
					(
						(
							lv_app_5_0='app'
							{
								newLeafNode(lv_app_5_0, grammarAccess.getPreambleAccess().getAppAppKeyword_1_0_0_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "app", lv_app_5_0 != null, "app");
							}
						)
					)
				)
				    |
				(
					(
						lv_test_6_0='testcase'
						{
							newLeafNode(lv_test_6_0, grammarAccess.getPreambleAccess().getTestTestcaseKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPreambleRule());
							}
							setWithLastConsumed($current, "test", lv_test_6_0 != null, "testcase");
						}
					)
				)
				    |
				(
					(
						lv_script_7_0='script'
						{
							newLeafNode(lv_script_7_0, grammarAccess.getPreambleAccess().getScriptScriptKeyword_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPreambleRule());
							}
							setWithLastConsumed($current, "script", lv_script_7_0 != null, "script");
						}
					)
				)
				    |
				(
					(
						lv_task_8_0='task'
						{
							newLeafNode(lv_task_8_0, grammarAccess.getPreambleAccess().getTaskTaskKeyword_1_0_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPreambleRule());
							}
							setWithLastConsumed($current, "task", lv_task_8_0 != null, "task");
						}
					)
				)
				    |
				(
					(
						lv_component_9_0='component'
						{
							newLeafNode(lv_component_9_0, grammarAccess.getPreambleAccess().getComponentComponentKeyword_1_0_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPreambleRule());
							}
							setWithLastConsumed($current, "component", lv_component_9_0 != null, "component");
						}
					)
				)
				    |
				(
					(
						lv_user_10_0='user'
						{
							newLeafNode(lv_user_10_0, grammarAccess.getPreambleAccess().getUserUserKeyword_1_0_5_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPreambleRule());
							}
							setWithLastConsumed($current, "user", lv_user_10_0 != null, "user");
						}
					)
				)
				    |
				(
					(
						(
							lv_library_11_1='trait'
							{
								newLeafNode(lv_library_11_1, grammarAccess.getPreambleAccess().getLibraryTraitKeyword_1_0_6_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "library", lv_library_11_1 != null, null);
							}
							    |
							lv_library_11_2='library'
							{
								newLeafNode(lv_library_11_2, grammarAccess.getPreambleAccess().getLibraryLibraryKeyword_1_0_6_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "library", lv_library_11_2 != null, null);
							}
						)
					)
				)
				    |
				(
					(
						(
							lv_behavior_12_1='behavior'
							{
								newLeafNode(lv_behavior_12_1, grammarAccess.getPreambleAccess().getBehaviorBehaviorKeyword_1_0_7_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "behavior", lv_behavior_12_1 != null, null);
							}
							    |
							lv_behavior_12_2='behaviour'
							{
								newLeafNode(lv_behavior_12_2, grammarAccess.getPreambleAccess().getBehaviorBehaviourKeyword_1_0_7_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPreambleRule());
								}
								setWithLastConsumed($current, "behavior", lv_behavior_12_2 != null, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPreambleAccess().getNamePathNameParserRuleCall_1_1_0());
					}
					lv_name_13_0=rulePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreambleRule());
						}
						set(
							$current,
							"name",
							lv_name_13_0,
							"org.integratedmodelling.kactors.Kactors.PathName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_label_14_1=RULE_STRING
					{
						newLeafNode(lv_label_14_1, grammarAccess.getPreambleAccess().getLabelSTRINGTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPreambleRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_14_1,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
					    |
					lv_label_14_2=RULE_LOCALIZED_STRING_REFERENCE
					{
						newLeafNode(lv_label_14_2, grammarAccess.getPreambleAccess().getLabelLOCALIZED_STRING_REFERENCETerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPreambleRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_14_2,
							"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
					}
				)
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_16='import'
								{
									newLeafNode(otherlv_16, grammarAccess.getPreambleAccess().getImportKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_3_0_1_0());
										}
										lv_imports_17_0=rulePathName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPreambleRule());
											}
											add(
												$current,
												"imports",
												lv_imports_17_0,
												"org.integratedmodelling.kactors.Kactors.PathName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_18=','
									{
										newLeafNode(otherlv_18, grammarAccess.getPreambleAccess().getCommaKeyword_3_0_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_3_0_2_1_0());
											}
											lv_imports_19_0=rulePathName
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												add(
													$current,
													"imports",
													lv_imports_19_0,
													"org.integratedmodelling.kactors.Kactors.PathName");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_20='worldview'
								{
									newLeafNode(otherlv_20, grammarAccess.getPreambleAccess().getWorldviewKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPreambleAccess().getWorldviewPathNameParserRuleCall_3_1_1_0());
										}
										lv_worldview_21_0=rulePathName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPreambleRule());
											}
											set(
												$current,
												"worldview",
												lv_worldview_21_0,
												"org.integratedmodelling.kactors.Kactors.PathName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_22='observable'
								{
									newLeafNode(otherlv_22, grammarAccess.getPreambleAccess().getObservableKeyword_3_2_0());
								}
								(
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getObservableObservableParserRuleCall_3_2_1_0_0());
											}
											lv_observable_23_0=ruleObservable
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												set(
													$current,
													"observable",
													lv_observable_23_0,
													"org.integratedmodelling.kactors.Kactors.Observable");
												afterParserOrEnumRuleCall();
											}
										)
									)
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getObservablesListParserRuleCall_3_2_1_1_0());
											}
											lv_observables_24_0=ruleList
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												set(
													$current,
													"observables",
													lv_observables_24_0,
													"org.integratedmodelling.kactors.Kactors.List");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_25='description'
								{
									newLeafNode(otherlv_25, grammarAccess.getPreambleAccess().getDescriptionKeyword_3_3_0());
								}
								(
									(
										(
											lv_description_26_1=RULE_STRING
											{
												newLeafNode(lv_description_26_1, grammarAccess.getPreambleAccess().getDescriptionSTRINGTerminalRuleCall_3_3_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												setWithLastConsumed(
													$current,
													"description",
													lv_description_26_1,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
											    |
											lv_description_26_2=RULE_LOCALIZED_STRING_REFERENCE
											{
												newLeafNode(lv_description_26_2, grammarAccess.getPreambleAccess().getDescriptionLOCALIZED_STRING_REFERENCETerminalRuleCall_3_3_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												setWithLastConsumed(
													$current,
													"description",
													lv_description_26_2,
													"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_27='permissions'
								{
									newLeafNode(otherlv_27, grammarAccess.getPreambleAccess().getPermissionsKeyword_3_4_0());
								}
								(
									(
										(
											lv_permissions_28_1=RULE_STRING
											{
												newLeafNode(lv_permissions_28_1, grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_3_4_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												setWithLastConsumed(
													$current,
													"permissions",
													lv_permissions_28_1,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
											    |
											lv_permissions_28_2=RULE_LOCALIZED_STRING_REFERENCE
											{
												newLeafNode(lv_permissions_28_2, grammarAccess.getPreambleAccess().getPermissionsLOCALIZED_STRING_REFERENCETerminalRuleCall_3_4_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												setWithLastConsumed(
													$current,
													"permissions",
													lv_permissions_28_2,
													"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_29='author'
								{
									newLeafNode(otherlv_29, grammarAccess.getPreambleAccess().getAuthorKeyword_3_5_0());
								}
								(
									(
										(
											lv_authors_30_1=RULE_STRING
											{
												newLeafNode(lv_authors_30_1, grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_3_5_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												addWithLastConsumed(
													$current,
													"authors",
													lv_authors_30_1,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
											    |
											lv_authors_30_2=RULE_LOCALIZED_STRING_REFERENCE
											{
												newLeafNode(lv_authors_30_2, grammarAccess.getPreambleAccess().getAuthorsLOCALIZED_STRING_REFERENCETerminalRuleCall_3_5_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												addWithLastConsumed(
													$current,
													"authors",
													lv_authors_30_2,
													"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
											}
										)
									)
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 6);
					}
								({true}?=>(otherlv_31='style'
								{
									newLeafNode(otherlv_31, grammarAccess.getPreambleAccess().getStyleKeyword_3_6_0());
								}
								(
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getPreambleAccess().getStylePathNameParserRuleCall_3_6_1_0_0_0());
												}
												lv_style_32_0=rulePathName
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getPreambleRule());
													}
													set(
														$current,
														"style",
														lv_style_32_0,
														"org.integratedmodelling.kactors.Kactors.PathName");
													afterParserOrEnumRuleCall();
												}
											)
										)
										(
											otherlv_33='with'
											{
												newLeafNode(otherlv_33, grammarAccess.getPreambleAccess().getWithKeyword_3_6_1_0_1_0());
											}
											(
												(
													{
														newCompositeNode(grammarAccess.getPreambleAccess().getInlineStyleMapParserRuleCall_3_6_1_0_1_1_0());
													}
													lv_inlineStyle_34_0=ruleMap
													{
														if ($current==null) {
															$current = createModelElementForParent(grammarAccess.getPreambleRule());
														}
														set(
															$current,
															"inlineStyle",
															lv_inlineStyle_34_0,
															"org.integratedmodelling.kactors.Kactors.Map");
														afterParserOrEnumRuleCall();
													}
												)
											)
										)?
									)
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getInlineStyleMapParserRuleCall_3_6_1_1_0());
											}
											lv_inlineStyle_35_0=ruleMap
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												set(
													$current,
													"inlineStyle",
													lv_inlineStyle_35_0,
													"org.integratedmodelling.kactors.Kactors.Map");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 7);
					}
								({true}?=>(otherlv_36='logo'
								{
									newLeafNode(otherlv_36, grammarAccess.getPreambleAccess().getLogoKeyword_3_7_0());
								}
								(
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getLogoPathParserRuleCall_3_7_1_0_0());
											}
											lv_logo_37_1=rulePath
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												set(
													$current,
													"logo",
													lv_logo_37_1,
													"org.integratedmodelling.kactors.Kactors.Path");
												afterParserOrEnumRuleCall();
											}
											    |
											(
												lv_logo_37_3=RULE_STRING
												{
													newLeafNode(lv_logo_37_3, grammarAccess.getPreambleAccess().getLogoSTRINGTerminalRuleCall_3_7_1_0_1_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getPreambleRule());
													}
													setWithLastConsumed(
														$current,
														"logo",
														lv_logo_37_3,
														"org.eclipse.xtext.common.Terminals.STRING");
												}
												    |
												lv_logo_37_4=RULE_LOCALIZED_STRING_REFERENCE
												{
													newLeafNode(lv_logo_37_4, grammarAccess.getPreambleAccess().getLogoLOCALIZED_STRING_REFERENCETerminalRuleCall_3_7_1_0_1_1());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getPreambleRule());
													}
													setWithLastConsumed(
														$current,
														"logo",
														lv_logo_37_4,
														"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
												}
											)
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 8);
					}
								({true}?=>(otherlv_38='version'
								{
									newLeafNode(otherlv_38, grammarAccess.getPreambleAccess().getVersionKeyword_3_8_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPreambleAccess().getVersionVersionNumberParserRuleCall_3_8_1_0());
										}
										lv_version_39_0=ruleVersionNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPreambleRule());
											}
											set(
												$current,
												"version",
												lv_version_39_0,
												"org.integratedmodelling.kactors.Kactors.VersionNumber");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 9);
					}
								({true}?=>(otherlv_40='versionstring'
								{
									newLeafNode(otherlv_40, grammarAccess.getPreambleAccess().getVersionstringKeyword_3_9_0());
								}
								(
									(
										lv_versionString_41_0=RULE_STRING
										{
											newLeafNode(lv_versionString_41_0, grammarAccess.getPreambleAccess().getVersionStringSTRINGTerminalRuleCall_3_9_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"versionString",
												lv_versionString_41_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 10);
					}
								({true}?=>(otherlv_42='locale'
								{
									newLeafNode(otherlv_42, grammarAccess.getPreambleAccess().getLocaleKeyword_3_10_0());
								}
								(
									(
										(
											lv_locale_43_0=RULE_LOCALE
											{
												newLeafNode(lv_locale_43_0, grammarAccess.getPreambleAccess().getLocaleLOCALETerminalRuleCall_3_10_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPreambleRule());
												}
												setWithLastConsumed(
													$current,
													"locale",
													lv_locale_43_0,
													"org.integratedmodelling.kactors.Kactors.LOCALE");
											}
										)
									)
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getPreambleAccess().getLocalesListParserRuleCall_3_10_1_1_0());
											}
											lv_locales_44_0=ruleList
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPreambleRule());
												}
												set(
													$current,
													"locales",
													lv_locales_44_0,
													"org.integratedmodelling.kactors.Kactors.List");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 11);
					}
								({true}?=>(otherlv_45='output'
								{
									newLeafNode(otherlv_45, grammarAccess.getPreambleAccess().getOutputKeyword_3_11_0());
								}
								(
									(
										lv_output_46_0=RULE_STRING
										{
											newLeafNode(lv_output_46_0, grammarAccess.getPreambleAccess().getOutputSTRINGTerminalRuleCall_3_11_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"output",
												lv_output_46_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 12)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 12);
					}
								({true}?=>(otherlv_47='created'
								{
									newLeafNode(otherlv_47, grammarAccess.getPreambleAccess().getCreatedKeyword_3_12_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPreambleAccess().getCreatedDateParserRuleCall_3_12_1_0());
										}
										lv_created_48_0=ruleDate
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPreambleRule());
											}
											set(
												$current,
												"created",
												lv_created_48_0,
												"org.integratedmodelling.kactors.Kactors.Date");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										lv_createcomment_49_0=RULE_STRING
										{
											newLeafNode(lv_createcomment_49_0, grammarAccess.getPreambleAccess().getCreatecommentSTRINGTerminalRuleCall_3_12_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"createcomment",
												lv_createcomment_49_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 13)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_3(), 13);
					}
								({true}?=>(otherlv_50='modified'
								{
									newLeafNode(otherlv_50, grammarAccess.getPreambleAccess().getModifiedKeyword_3_13_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPreambleAccess().getModifiedDateParserRuleCall_3_13_1_0());
										}
										lv_modified_51_0=ruleDate
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPreambleRule());
											}
											set(
												$current,
												"modified",
												lv_modified_51_0,
												"org.integratedmodelling.kactors.Kactors.Date");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										lv_modcomment_52_0=RULE_STRING
										{
											newLeafNode(lv_modcomment_52_0, grammarAccess.getPreambleAccess().getModcommentSTRINGTerminalRuleCall_3_13_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"modcomment",
												lv_modcomment_52_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPreambleAccess().getUnorderedGroup_3());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"org.integratedmodelling.kactors.Kactors.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_1='action'
			{
				newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getActionKeyword_1_0());
			}
			    |
			(
				(
					lv_function_2_0='function'
					{
						newLeafNode(lv_function_2_0, grammarAccess.getDefinitionAccess().getFunctionFunctionKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed($current, "function", lv_function_2_0 != null, "function");
					}
				)
			)
		)
		(
			(
				lv_name_3_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_3_0());
				}
				lv_arguments_4_0=ruleArgumentDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"arguments",
						lv_arguments_4_0,
						"org.integratedmodelling.kactors.Kactors.ArgumentDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getBodyMessageBodyParserRuleCall_5_0());
				}
				lv_body_6_0=ruleMessageBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"org.integratedmodelling.kactors.Kactors.MessageBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArgumentDeclaration
entryRuleArgumentDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentDeclarationRule()); }
	iv_ruleArgumentDeclaration=ruleArgumentDeclaration
	{ $current=$iv_ruleArgumentDeclaration.current; }
	EOF;

// Rule ArgumentDeclaration
ruleArgumentDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_ids_2_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_ids_2_0, grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArgumentDeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"ids",
							lv_ids_2_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						lv_ids_4_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_ids_4_0, grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArgumentDeclarationRule());
							}
							addWithLastConsumed(
								$current,
								"ids",
								lv_ids_4_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMessageBody
entryRuleMessageBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageBodyRule()); }
	iv_ruleMessageBody=ruleMessageBody
	{ $current=$iv_ruleMessageBody.current; }
	EOF;

// Rule MessageBody
ruleMessageBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMessageBodyAccess().getMessageBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageBodyAccess().getListsStatementListParserRuleCall_1_0());
				}
				lv_lists_1_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageBodyRule());
					}
					add(
						$current,
						"lists",
						lv_lists_1_0,
						"org.integratedmodelling.kactors.Kactors.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleActorInstantiation
entryRuleActorInstantiation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorInstantiationRule()); }
	iv_ruleActorInstantiation=ruleActorInstantiation
	{ $current=$iv_ruleActorInstantiation.current; }
	EOF;

// Rule ActorInstantiation
ruleActorInstantiation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorInstantiationAccess().getCreateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActorInstantiationAccess().getBehaviorPathNameParserRuleCall_1_0());
				}
				lv_behavior_1_0=rulePathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorInstantiationRule());
					}
					set(
						$current,
						"behavior",
						lv_behavior_1_0,
						"org.integratedmodelling.kactors.Kactors.PathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getActorInstantiationAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActorInstantiationAccess().getParametersParameterListParserRuleCall_2_1_0());
					}
					lv_parameters_3_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActorInstantiationRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_3_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getActorInstantiationAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getActorInstantiationAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActorInstantiationAccess().getActionsActionsParserRuleCall_3_1_0());
					}
					lv_actions_6_0=ruleActions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActorInstantiationRule());
						}
						set(
							$current,
							"actions",
							lv_actions_6_0,
							"org.integratedmodelling.kactors.Kactors.Actions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActorInstantiationAccess().getMetadataMetadataParserRuleCall_4_0());
				}
				lv_metadata_7_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorInstantiationRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_7_0,
						"org.integratedmodelling.kactors.Kactors.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMessageCall
entryRuleMessageCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageCallRule()); }
	iv_ruleMessageCall=ruleMessageCall
	{ $current=$iv_ruleMessageCall.current; }
	EOF;

// Rule MessageCall
ruleMessageCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageCallAccess().getMethodCallsMethodCallParserRuleCall_0_0_0());
					}
					lv_methodCalls_0_0=ruleMethodCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageCallRule());
						}
						add(
							$current,
							"methodCalls",
							lv_methodCalls_0_0,
							"org.integratedmodelling.kactors.Kactors.MethodCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getMessageCallAccess().getFullStopKeyword_0_1());
			}
		)*
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMessageCallAccess().getNameArgPathNameParserRuleCall_1_0_0_0());
						}
						lv_name_2_0=ruleArgPathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMessageCallRule());
							}
							set(
								$current,
								"name",
								lv_name_2_0,
								"org.integratedmodelling.kactors.Kactors.ArgPathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getMessageCallAccess().getLeftParenthesisKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMessageCallAccess().getParametersParameterListParserRuleCall_1_0_1_1_0());
							}
							lv_parameters_4_0=ruleParameterList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMessageCallRule());
								}
								set(
									$current,
									"parameters",
									lv_parameters_4_0,
									"org.integratedmodelling.kactors.Kactors.ParameterList");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_5=')'
					{
						newLeafNode(otherlv_5, grammarAccess.getMessageCallAccess().getRightParenthesisKeyword_1_0_1_2());
					}
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageCallAccess().getGroupStatementGroupParserRuleCall_1_1_0());
					}
					lv_group_6_0=ruleStatementGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageCallRule());
						}
						set(
							$current,
							"group",
							lv_group_6_0,
							"org.integratedmodelling.kactors.Kactors.StatementGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getMessageCallAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageCallAccess().getActionsActionsParserRuleCall_2_1_0());
					}
					lv_actions_8_0=ruleActions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageCallRule());
						}
						set(
							$current,
							"actions",
							lv_actions_8_0,
							"org.integratedmodelling.kactors.Kactors.Actions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleStatementGroup
entryRuleStatementGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementGroupRule()); }
	iv_ruleStatementGroup=ruleStatementGroup
	{ $current=$iv_ruleStatementGroup.current; }
	EOF;

// Rule StatementGroup
ruleStatementGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementGroupAccess().getStatementGroupAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStatementGroupAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementGroupAccess().getBodyMessageBodyParserRuleCall_2_0());
				}
				lv_body_2_0=ruleMessageBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementGroupRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"org.integratedmodelling.kactors.Kactors.MessageBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getStatementGroupAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementGroupAccess().getMetadataMetadataParserRuleCall_4_0());
				}
				lv_metadata_4_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementGroupRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_4_0,
						"org.integratedmodelling.kactors.Kactors.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementGroupAccess().getColonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementGroupAccess().getActionsActionsParserRuleCall_5_1_0());
					}
					lv_actions_6_0=ruleActions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementGroupRule());
						}
						set(
							$current,
							"actions",
							lv_actions_6_0,
							"org.integratedmodelling.kactors.Kactors.Actions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	iv_ruleMetadata=ruleMetadata
	{ $current=$iv_ruleMetadata.current; }
	EOF;

// Rule Metadata
ruleMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMetadataAccess().getPairsMetadataPairParserRuleCall_0());
			}
			lv_pairs_0_0=ruleMetadataPair
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMetadataRule());
				}
				add(
					$current,
					"pairs",
					lv_pairs_0_0,
					"org.integratedmodelling.kactors.Kactors.MetadataPair");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleMetadataPair
entryRuleMetadataPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataPairRule()); }
	iv_ruleMetadataPair=ruleMetadataPair
	{ $current=$iv_ruleMetadataPair.current; }
	EOF;

// Rule MetadataPair
ruleMetadataPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_KEY
				{
					newLeafNode(lv_key_0_0, grammarAccess.getMetadataPairAccess().getKeyKEYTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetadataPairRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.integratedmodelling.kactors.Kactors.KEY");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataPairAccess().getValueLiteralParserRuleCall_1_0());
				}
				lv_value_1_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataPairRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.integratedmodelling.kactors.Kactors.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStatementList
entryRuleStatementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_ruleStatementList=ruleStatementList
	{ $current=$iv_ruleStatementList.current; }
	EOF;

// Rule StatementList
ruleStatementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementListAccess().getFirstStatementParserRuleCall_0_0());
				}
				lv_first_0_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementListRule());
					}
					set(
						$current,
						"first",
						lv_first_0_0,
						"org.integratedmodelling.kactors.Kactors.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementListAccess().getNextNextStatementParserRuleCall_1_0());
				}
				lv_next_1_0=ruleNextStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementListRule());
					}
					add(
						$current,
						"next",
						lv_next_1_0,
						"org.integratedmodelling.kactors.Kactors.NextStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getAssignmentAssignmentParserRuleCall_0_0_0());
					}
					lv_assignment_0_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"assignment",
							lv_assignment_0_0,
							"org.integratedmodelling.kactors.Kactors.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getGroupStatementGroupParserRuleCall_0_1_0());
					}
					lv_group_1_0=ruleStatementGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"group",
							lv_group_1_0,
							"org.integratedmodelling.kactors.Kactors.StatementGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getInstantiationActorInstantiationParserRuleCall_0_2_0());
					}
					lv_instantiation_2_0=ruleActorInstantiation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"instantiation",
							lv_instantiation_2_0,
							"org.integratedmodelling.kactors.Kactors.ActorInstantiation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getVerbMessageCallParserRuleCall_0_3_0());
					}
					lv_verb_3_0=ruleMessageCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"verb",
							lv_verb_3_0,
							"org.integratedmodelling.kactors.Kactors.MessageCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_text_4_0=RULE_EMBEDDEDTEXT
						{
							newLeafNode(lv_text_4_0, grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_0_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStatementRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_4_0,
								"org.integratedmodelling.kactors.Kactors.EMBEDDEDTEXT");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getMetadataMetadataParserRuleCall_0_4_1_0());
						}
						lv_metadata_5_0=ruleMetadata
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"metadata",
								lv_metadata_5_0,
								"org.integratedmodelling.kactors.Kactors.Metadata");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_0_5_0());
					}
					lv_if_6_0=ruleIfStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"if",
							lv_if_6_0,
							"org.integratedmodelling.kactors.Kactors.IfStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getWhileWhileStatementParserRuleCall_0_6_0());
					}
					lv_while_7_0=ruleWhileStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"while",
							lv_while_7_0,
							"org.integratedmodelling.kactors.Kactors.WhileStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getAssertAssertStatementParserRuleCall_0_7_0());
					}
					lv_assert_8_0=ruleAssertStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"assert",
							lv_assert_8_0,
							"org.integratedmodelling.kactors.Kactors.AssertStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getFailFailStatementParserRuleCall_0_8_0());
					}
					lv_fail_9_0=ruleFailStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"fail",
							lv_fail_9_0,
							"org.integratedmodelling.kactors.Kactors.FailStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDoDoStatementParserRuleCall_0_9_0());
					}
					lv_do_10_0=ruleDoStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"do",
							lv_do_10_0,
							"org.integratedmodelling.kactors.Kactors.DoStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_break_11_0='break'
					{
						newLeafNode(lv_break_11_0, grammarAccess.getStatementAccess().getBreakBreakKeyword_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatementRule());
						}
						setWithLastConsumed($current, "break", lv_break_11_0 != null, "break");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getForForStatementParserRuleCall_0_11_0());
					}
					lv_for_12_0=ruleForStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"for",
							lv_for_12_0,
							"org.integratedmodelling.kactors.Kactors.ForStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getValueValueWithMetadataParserRuleCall_0_12_0());
					}
					lv_value_13_0=ruleValueWithMetadata
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"value",
							lv_value_13_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithMetadata");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_tag_14_0=RULE_TAG
				{
					newLeafNode(lv_tag_14_0, grammarAccess.getStatementAccess().getTagTAGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatementRule());
					}
					setWithLastConsumed(
						$current,
						"tag",
						lv_tag_14_0,
						"org.integratedmodelling.kactors.Kactors.TAG");
				}
			)
		)?
	)
;

// Entry rule entryRuleMethodCall
entryRuleMethodCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCallRule()); }
	iv_ruleMethodCall=ruleMethodCall
	{ $current=$iv_ruleMethodCall.current; }
	EOF;

// Rule MethodCall
ruleMethodCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodCallAccess().getNameArgPathNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleArgPathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodCallRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kactors.Kactors.ArgPathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCallAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCallRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleParenthesizedMethodCall
entryRuleParenthesizedMethodCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesizedMethodCallRule()); }
	iv_ruleParenthesizedMethodCall=ruleParenthesizedMethodCall
	{ $current=$iv_ruleParenthesizedMethodCall.current; }
	EOF;

// Rule ParenthesizedMethodCall
ruleParenthesizedMethodCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesizedMethodCallAccess().getNameArgPathNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleArgPathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesizedMethodCallRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kactors.Kactors.ArgPathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('(')=>
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getParenthesizedMethodCallAccess().getLeftParenthesisKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesizedMethodCallAccess().getParametersParameterListParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesizedMethodCallRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.integratedmodelling.kactors.Kactors.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getParenthesizedMethodCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMethodCallWithActions
entryRuleMethodCallWithActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCallWithActionsRule()); }
	iv_ruleMethodCallWithActions=ruleMethodCallWithActions
	{ $current=$iv_ruleMethodCallWithActions.current; }
	EOF;

// Rule MethodCallWithActions
ruleMethodCallWithActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodCallWithActionsAccess().getNameArgPathNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleArgPathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodCallWithActionsRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kactors.Kactors.ArgPathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getMethodCallWithActionsAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCallWithActionsAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCallWithActionsRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getMethodCallWithActionsAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getMethodCallWithActionsAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCallWithActionsAccess().getActionsActionsParserRuleCall_2_1_0());
					}
					lv_actions_5_0=ruleActions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCallWithActionsRule());
						}
						set(
							$current,
							"actions",
							lv_actions_5_0,
							"org.integratedmodelling.kactors.Kactors.Actions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAssertStatement
entryRuleAssertStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertStatementRule()); }
	iv_ruleAssertStatement=ruleAssertStatement
	{ $current=$iv_ruleAssertStatement.current; }
	EOF;

// Rule AssertStatement
ruleAssertStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assert'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssertStatementAccess().getAssertKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAssertStatementAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertStatementAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertStatementRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAssertStatementAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertStatementAccess().getAssertionsAssertionParserRuleCall_2_0());
				}
				lv_assertions_4_0=ruleAssertion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertStatementRule());
					}
					add(
						$current,
						"assertions",
						lv_assertions_4_0,
						"org.integratedmodelling.kactors.Kactors.Assertion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAssertStatementAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertStatementAccess().getAssertionsAssertionParserRuleCall_3_1_0());
					}
					lv_assertions_6_0=ruleAssertion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertStatementRule());
						}
						add(
							$current,
							"assertions",
							lv_assertions_6_0,
							"org.integratedmodelling.kactors.Kactors.Assertion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFailStatement
entryRuleFailStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFailStatementRule()); }
	iv_ruleFailStatement=ruleFailStatement
	{ $current=$iv_ruleFailStatement.current; }
	EOF;

// Rule FailStatement
ruleFailStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFailStatementAccess().getFailStatementAction_0(),
					$current);
			}
		)
		(
			otherlv_1='fail'
			{
				newLeafNode(otherlv_1, grammarAccess.getFailStatementAccess().getFailKeyword_1_0());
			}
			    |
			otherlv_2='suca'
			{
				newLeafNode(otherlv_2, grammarAccess.getFailStatementAccess().getSucaKeyword_1_1());
			}
		)
		(
			((
				RULE_STRING
			)
			)=>
			(
				lv_reason_3_0=RULE_STRING
				{
					newLeafNode(lv_reason_3_0, grammarAccess.getFailStatementAccess().getReasonSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFailStatementRule());
					}
					setWithLastConsumed(
						$current,
						"reason",
						lv_reason_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleAssertion
entryRuleAssertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertionRule()); }
	iv_ruleAssertion=ruleAssertion
	{ $current=$iv_ruleAssertion.current; }
	EOF;

// Rule Assertion
ruleAssertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_expression_0_0=RULE_EXPR
					{
						newLeafNode(lv_expression_0_0, grammarAccess.getAssertionAccess().getExpressionEXPRTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssertionRule());
						}
						setWithLastConsumed(
							$current,
							"expression",
							lv_expression_0_0,
							"org.integratedmodelling.kactors.Kactors.EXPR");
					}
				)
			)
			    |
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getAssertionAccess().getMethodCallsMethodCallParserRuleCall_0_1_0_0_0());
							}
							lv_methodCalls_1_0=ruleMethodCall
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAssertionRule());
								}
								add(
									$current,
									"methodCalls",
									lv_methodCalls_1_0,
									"org.integratedmodelling.kactors.Kactors.MethodCall");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_2='.'
					{
						newLeafNode(otherlv_2, grammarAccess.getAssertionAccess().getFullStopKeyword_0_1_0_1());
					}
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getAssertionAccess().getMethodCallsMethodCallWithActionsParserRuleCall_0_1_1_0());
						}
						lv_methodCalls_3_0=ruleMethodCallWithActions
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssertionRule());
							}
							add(
								$current,
								"methodCalls",
								lv_methodCalls_3_0,
								"org.integratedmodelling.kactors.Kactors.MethodCallWithActions");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			otherlv_4='is'
			{
				newLeafNode(otherlv_4, grammarAccess.getAssertionAccess().getIsKeyword_1_0());
			}
			(
				(
					(
						lv_ok_5_0='ok'
						{
							newLeafNode(lv_ok_5_0, grammarAccess.getAssertionAccess().getOkOkKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAssertionRule());
							}
							setWithLastConsumed($current, "ok", lv_ok_5_0, "ok");
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAssertionAccess().getValueValueParserRuleCall_1_1_1_0());
						}
						lv_value_6_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssertionRule());
							}
							set(
								$current,
								"value",
								lv_value_6_0,
								"org.integratedmodelling.kactors.Kactors.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			((
				ruleMetadata
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getAssertionAccess().getMetadataMetadataParserRuleCall_2_0());
				}
				lv_metadata_7_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertionRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_7_0,
						"org.integratedmodelling.kactors.Kactors.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleNextStatement
entryRuleNextStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNextStatementRule()); }
	iv_ruleNextStatement=ruleNextStatement
	{ $current=$iv_ruleNextStatement.current; }
	EOF;

// Rule NextStatement
ruleNextStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=','
		{
			newLeafNode(otherlv_0, grammarAccess.getNextStatementAccess().getCommaKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getAssignmentAssignmentParserRuleCall_1_0_0());
					}
					lv_assignment_1_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"assignment",
							lv_assignment_1_0,
							"org.integratedmodelling.kactors.Kactors.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getVerbMessageCallParserRuleCall_1_1_0());
					}
					lv_verb_2_0=ruleMessageCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"verb",
							lv_verb_2_0,
							"org.integratedmodelling.kactors.Kactors.MessageCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getGroupStatementGroupParserRuleCall_1_2_0());
					}
					lv_group_3_0=ruleStatementGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"group",
							lv_group_3_0,
							"org.integratedmodelling.kactors.Kactors.StatementGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_text_4_0=RULE_EMBEDDEDTEXT
					{
						newLeafNode(lv_text_4_0, grammarAccess.getNextStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNextStatementRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							lv_text_4_0,
							"org.integratedmodelling.kactors.Kactors.EMBEDDEDTEXT");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getIfIfStatementParserRuleCall_1_4_0());
					}
					lv_if_5_0=ruleIfStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"if",
							lv_if_5_0,
							"org.integratedmodelling.kactors.Kactors.IfStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getWhileWhileStatementParserRuleCall_1_5_0());
					}
					lv_while_6_0=ruleWhileStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"while",
							lv_while_6_0,
							"org.integratedmodelling.kactors.Kactors.WhileStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getDoDoStatementParserRuleCall_1_6_0());
					}
					lv_do_7_0=ruleDoStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"do",
							lv_do_7_0,
							"org.integratedmodelling.kactors.Kactors.DoStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getAssertAssertStatementParserRuleCall_1_7_0());
					}
					lv_assert_8_0=ruleAssertStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"assert",
							lv_assert_8_0,
							"org.integratedmodelling.kactors.Kactors.AssertStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getFailFailStatementParserRuleCall_1_8_0());
					}
					lv_fail_9_0=ruleFailStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"fail",
							lv_fail_9_0,
							"org.integratedmodelling.kactors.Kactors.FailStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_break_10_0='break'
					{
						newLeafNode(lv_break_10_0, grammarAccess.getNextStatementAccess().getBreakBreakKeyword_1_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNextStatementRule());
						}
						setWithLastConsumed($current, "break", lv_break_10_0 != null, "break");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getForForStatementParserRuleCall_1_10_0());
					}
					lv_for_11_0=ruleForStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"for",
							lv_for_11_0,
							"org.integratedmodelling.kactors.Kactors.ForStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNextStatementAccess().getValueValueWithMetadataParserRuleCall_1_11_0());
					}
					lv_value_12_0=ruleValueWithMetadata
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNextStatementRule());
						}
						set(
							$current,
							"value",
							lv_value_12_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithMetadata");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_tag_13_0=RULE_TAG
				{
					newLeafNode(lv_tag_13_0, grammarAccess.getNextStatementAccess().getTagTAGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNextStatementRule());
					}
					setWithLastConsumed(
						$current,
						"tag",
						lv_tag_13_0,
						"org.integratedmodelling.kactors.Kactors.TAG");
				}
			)
		)?
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_global_0_0='set'
						{
							newLeafNode(lv_global_0_0, grammarAccess.getAssignmentAccess().getGlobalSetKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAssignmentRule());
							}
							setWithLastConsumed($current, "global", lv_global_0_0 != null, "set");
						}
					)
				)
				    |
				(
					(
						lv_local_1_0='def'
						{
							newLeafNode(lv_local_1_0, grammarAccess.getAssignmentAccess().getLocalDefKeyword_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAssignmentRule());
							}
							setWithLastConsumed($current, "local", lv_local_1_0 != null, "def");
						}
					)
				)
			)
			(
				(
					(
						lv_recipient_2_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_recipient_2_0, grammarAccess.getAssignmentAccess().getRecipientLOWERCASE_IDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAssignmentRule());
							}
							setWithLastConsumed(
								$current,
								"recipient",
								lv_recipient_2_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getAssignmentAccess().getFullStopKeyword_0_1_1());
				}
			)?
			(
				(
					lv_variable_4_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_variable_4_0, grammarAccess.getAssignmentAccess().getVariableLOWERCASE_IDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_4_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getValueValueWithConstructorParserRuleCall_0_3_0());
					}
					lv_value_5_0=ruleValueWithConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_variable_6_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_variable_6_0, grammarAccess.getAssignmentAccess().getVariableLOWERCASE_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_6_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getValueValueWithConstructorParserRuleCall_1_2_0());
					}
					lv_value_8_0=ruleValueWithConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_8_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getLiteralLiteralParserRuleCall_1_0_0());
					}
					lv_literal_1_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"literal",
							lv_literal_1_0,
							"org.integratedmodelling.kactors.Kactors.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_expression_2_0=RULE_EXPR
					{
						newLeafNode(lv_expression_2_0, grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStatementRule());
						}
						setWithLastConsumed(
							$current,
							"expression",
							lv_expression_2_0,
							"org.integratedmodelling.kactors.Kactors.EXPR");
					}
				)
			)
			    |
			(
				(
					lv_variable_3_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_variable_3_0, grammarAccess.getIfStatementAccess().getVariableLOWERCASE_IDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStatementRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_3_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getBodyStatementBodyParserRuleCall_2_0());
				}
				lv_body_4_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.integratedmodelling.kactors.Kactors.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_3_0());
			}
			otherlv_6='if'
			{
				newLeafNode(otherlv_6, grammarAccess.getIfStatementAccess().getIfKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseIfBodyElseIfStatementBodyParserRuleCall_3_2_0());
					}
					lv_elseIfBody_7_0=ruleElseIfStatementBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						add(
							$current,
							"elseIfBody",
							lv_elseIfBody_7_0,
							"org.integratedmodelling.kactors.Kactors.ElseIfStatementBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='else'
			{
				newLeafNode(otherlv_8, grammarAccess.getIfStatementAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseCallStatementBodyParserRuleCall_4_1_0());
					}
					lv_elseCall_9_0=ruleStatementBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elseCall",
							lv_elseCall_9_0,
							"org.integratedmodelling.kactors.Kactors.StatementBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleElseIfStatementBody
entryRuleElseIfStatementBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseIfStatementBodyRule()); }
	iv_ruleElseIfStatementBody=ruleElseIfStatementBody
	{ $current=$iv_ruleElseIfStatementBody.current; }
	EOF;

// Rule ElseIfStatementBody
ruleElseIfStatementBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElseIfStatementBodyAccess().getLiteralLiteralParserRuleCall_0_0_0());
					}
					lv_literal_0_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElseIfStatementBodyRule());
						}
						set(
							$current,
							"literal",
							lv_literal_0_0,
							"org.integratedmodelling.kactors.Kactors.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_expression_1_0=RULE_EXPR
					{
						newLeafNode(lv_expression_1_0, grammarAccess.getElseIfStatementBodyAccess().getExpressionEXPRTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElseIfStatementBodyRule());
						}
						setWithLastConsumed(
							$current,
							"expression",
							lv_expression_1_0,
							"org.integratedmodelling.kactors.Kactors.EXPR");
					}
				)
			)
			    |
			(
				(
					lv_variable_2_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_variable_2_0, grammarAccess.getElseIfStatementBodyAccess().getVariableLOWERCASE_IDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElseIfStatementBodyRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_2_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfStatementBodyAccess().getBodyStatementBodyParserRuleCall_1_0());
				}
				lv_body_3_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfStatementBodyRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.integratedmodelling.kactors.Kactors.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatementBody
entryRuleStatementBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementBodyRule()); }
	iv_ruleStatementBody=ruleStatementBody
	{ $current=$iv_ruleStatementBody.current; }
	EOF;

// Rule StatementBody
ruleStatementBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementBodyAccess().getVerbMessageCallParserRuleCall_0_0());
				}
				lv_verb_0_0=ruleMessageCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementBodyRule());
					}
					set(
						$current,
						"verb",
						lv_verb_0_0,
						"org.integratedmodelling.kactors.Kactors.MessageCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementBodyAccess().getValueValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementBodyRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.integratedmodelling.kactors.Kactors.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementBodyAccess().getGroupStatementGroupParserRuleCall_2_0());
				}
				lv_group_2_0=ruleStatementGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementBodyRule());
					}
					set(
						$current,
						"group",
						lv_group_2_0,
						"org.integratedmodelling.kactors.Kactors.StatementGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
		}
		(
			(
				lv_expression_1_0=RULE_EXPR
				{
					newLeafNode(lv_expression_1_0, grammarAccess.getWhileStatementAccess().getExpressionEXPRTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhileStatementRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_1_0,
						"org.integratedmodelling.kactors.Kactors.EXPR");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementBodyParserRuleCall_2_0());
				}
				lv_body_2_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"org.integratedmodelling.kactors.Kactors.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	iv_ruleDoStatement=ruleDoStatement
	{ $current=$iv_ruleDoStatement.current; }
	EOF;

// Rule DoStatement
ruleDoStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoStatementAccess().getBodyStatementBodyParserRuleCall_1_0());
				}
				lv_body_1_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.integratedmodelling.kactors.Kactors.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='while'
		{
			newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
		}
		(
			(
				lv_expression_3_0=RULE_EXPR
				{
					newLeafNode(lv_expression_3_0, grammarAccess.getDoStatementAccess().getExpressionEXPRTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoStatementRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_3_0,
						"org.integratedmodelling.kactors.Kactors.EXPR");
				}
			)
		)
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
		}
		(
			(
				(
					lv_id_1_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_1_0, grammarAccess.getForStatementAccess().getIdLOWERCASE_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForStatementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_1_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
			otherlv_2='in'
			{
				newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getInKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.integratedmodelling.kactors.Kactors.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementBodyParserRuleCall_3_0());
				}
				lv_body_4_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.integratedmodelling.kactors.Kactors.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActions
entryRuleActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionsRule()); }
	iv_ruleActions=ruleActions
	{ $current=$iv_ruleActions.current; }
	EOF;

// Rule Actions
ruleActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_0_0());
				}
				lv_match_0_0=ruleMatch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionsRule());
					}
					set(
						$current,
						"match",
						lv_match_0_0,
						"org.integratedmodelling.kactors.Kactors.Match");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getActionsAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_1_1_0());
					}
					lv_matches_2_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionsRule());
						}
						add(
							$current,
							"matches",
							lv_matches_2_0,
							"org.integratedmodelling.kactors.Kactors.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_1_2_0());
					}
					lv_matches_3_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionsRule());
						}
						add(
							$current,
							"matches",
							lv_matches_3_0,
							"org.integratedmodelling.kactors.Kactors.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getActionsAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionsAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionsRule());
					}
					set(
						$current,
						"statement",
						lv_statement_5_0,
						"org.integratedmodelling.kactors.Kactors.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionsAccess().getStatementsStatementListParserRuleCall_3_1_0());
					}
					lv_statements_7_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionsRule());
						}
						set(
							$current,
							"statements",
							lv_statements_7_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deferred_0_0='`'
				{
					newLeafNode(lv_deferred_0_0, grammarAccess.getValueAccess().getDeferredGraveAccentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed($current, "deferred", lv_deferred_0_0 != null, "`");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getTreeTreeParserRuleCall_1_0_0());
					}
					lv_tree_1_0=ruleTree
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"tree",
							lv_tree_1_0,
							"org.integratedmodelling.kactors.Kactors.Tree");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_empty_2_0='empty'
					{
						newLeafNode(lv_empty_2_0, grammarAccess.getValueAccess().getEmptyEmptyKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed($current, "empty", lv_empty_2_0 != null, "empty");
					}
				)
			)
			    |
			(
				(
					lv_argvalue_3_0=RULE_ARGVALUE
					{
						newLeafNode(lv_argvalue_3_0, grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"argvalue",
							lv_argvalue_3_0,
							"org.integratedmodelling.kactors.Kactors.ARGVALUE");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getUrnUrnIdParserRuleCall_1_3_0());
					}
					lv_urn_4_0=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"urn",
							lv_urn_4_0,
							"org.integratedmodelling.kactors.Kactors.UrnId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_4_0_0());
						}
						lv_literal_5_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueRule());
							}
							set(
								$current,
								"literal",
								lv_literal_5_0,
								"org.integratedmodelling.kactors.Kactors.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6='as'
					{
						newLeafNode(otherlv_6, grammarAccess.getValueAccess().getAsKeyword_1_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueAccess().getCastDATA_TYPEParserRuleCall_1_4_1_1_0());
							}
							lv_cast_7_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueRule());
								}
								set(
									$current,
									"cast",
									lv_cast_7_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueAccess().getIdPathNameParserRuleCall_1_5_0_0());
						}
						lv_id_8_0=rulePathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueRule());
							}
							set(
								$current,
								"id",
								lv_id_8_0,
								"org.integratedmodelling.kactors.Kactors.PathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='as'
					{
						newLeafNode(otherlv_9, grammarAccess.getValueAccess().getAsKeyword_1_5_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueAccess().getCastDATA_TYPEParserRuleCall_1_5_1_1_0());
							}
							lv_cast_10_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueRule());
								}
								set(
									$current,
									"cast",
									lv_cast_10_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_1_6_0());
					}
					lv_list_11_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"list",
							lv_list_11_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_1_7_0());
					}
					lv_map_12_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"map",
							lv_map_12_0,
							"org.integratedmodelling.kactors.Kactors.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_constant_13_0=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_constant_13_0, grammarAccess.getValueAccess().getConstantUPPERCASE_IDTerminalRuleCall_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"constant",
							lv_constant_13_0,
							"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getObservableObservableParserRuleCall_1_9_0());
					}
					lv_observable_14_0=ruleObservable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"observable",
							lv_observable_14_0,
							"org.integratedmodelling.kactors.Kactors.Observable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_expression_15_0=RULE_EXPR
						{
							newLeafNode(lv_expression_15_0, grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_1_10_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueRule());
							}
							setWithLastConsumed(
								$current,
								"expression",
								lv_expression_15_0,
								"org.integratedmodelling.kactors.Kactors.EXPR");
						}
					)
				)
				(
					otherlv_16='as'
					{
						newLeafNode(otherlv_16, grammarAccess.getValueAccess().getAsKeyword_1_10_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueAccess().getCastDATA_TYPEParserRuleCall_1_10_1_1_0());
							}
							lv_cast_17_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueRule());
								}
								set(
									$current,
									"cast",
									lv_cast_17_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_1_11_0());
					}
					lv_table_18_0=ruleLookupTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"table",
							lv_table_18_0,
							"org.integratedmodelling.kactors.Kactors.LookupTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_1_12_0());
					}
					lv_quantity_19_0=ruleQuantity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"quantity",
							lv_quantity_19_0,
							"org.integratedmodelling.kactors.Kactors.Quantity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_20='?'
			{
				newLeafNode(otherlv_20, grammarAccess.getValueAccess().getQuestionMarkKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getThenValueParserRuleCall_2_1_0());
					}
					lv_then_21_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"then",
							lv_then_21_0,
							"org.integratedmodelling.kactors.Kactors.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22=':'
			{
				newLeafNode(otherlv_22, grammarAccess.getValueAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getElseValueParserRuleCall_2_3_0());
					}
					lv_else_23_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"else",
							lv_else_23_0,
							"org.integratedmodelling.kactors.Kactors.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleValueWithConstructor
entryRuleValueWithConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueWithConstructorRule()); }
	iv_ruleValueWithConstructor=ruleValueWithConstructor
	{ $current=$iv_ruleValueWithConstructor.current; }
	EOF;

// Rule ValueWithConstructor
ruleValueWithConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deferred_0_0='`'
				{
					newLeafNode(lv_deferred_0_0, grammarAccess.getValueWithConstructorAccess().getDeferredGraveAccentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithConstructorRule());
					}
					setWithLastConsumed($current, "deferred", lv_deferred_0_0 != null, "`");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getConstructorConstructorParserRuleCall_1_0_0());
					}
					lv_constructor_1_0=ruleConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"constructor",
							lv_constructor_1_0,
							"org.integratedmodelling.kactors.Kactors.Constructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithConstructorAccess().getMethodCallsParenthesizedMethodCallParserRuleCall_1_1_0_0_0());
							}
							lv_methodCalls_2_0=ruleParenthesizedMethodCall
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
								}
								add(
									$current,
									"methodCalls",
									lv_methodCalls_2_0,
									"org.integratedmodelling.kactors.Kactors.ParenthesizedMethodCall");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_3='.'
					{
						newLeafNode(otherlv_3, grammarAccess.getValueWithConstructorAccess().getFullStopKeyword_1_1_0_1());
					}
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithConstructorAccess().getMethodCallsParenthesizedMethodCallParserRuleCall_1_1_1_0());
						}
						lv_methodCalls_4_0=ruleParenthesizedMethodCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
							}
							add(
								$current,
								"methodCalls",
								lv_methodCalls_4_0,
								"org.integratedmodelling.kactors.Kactors.ParenthesizedMethodCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getTreeTreeParserRuleCall_1_2_0());
					}
					lv_tree_5_0=ruleTree
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"tree",
							lv_tree_5_0,
							"org.integratedmodelling.kactors.Kactors.Tree");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_empty_6_0='empty'
					{
						newLeafNode(lv_empty_6_0, grammarAccess.getValueWithConstructorAccess().getEmptyEmptyKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithConstructorRule());
						}
						setWithLastConsumed($current, "empty", lv_empty_6_0 != null, "empty");
					}
				)
			)
			    |
			(
				(
					lv_argvalue_7_0=RULE_ARGVALUE
					{
						newLeafNode(lv_argvalue_7_0, grammarAccess.getValueWithConstructorAccess().getArgvalueARGVALUETerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithConstructorRule());
						}
						setWithLastConsumed(
							$current,
							"argvalue",
							lv_argvalue_7_0,
							"org.integratedmodelling.kactors.Kactors.ARGVALUE");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithConstructorAccess().getLiteralLiteralParserRuleCall_1_5_0_0());
						}
						lv_literal_8_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
							}
							set(
								$current,
								"literal",
								lv_literal_8_0,
								"org.integratedmodelling.kactors.Kactors.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='as'
					{
						newLeafNode(otherlv_9, grammarAccess.getValueWithConstructorAccess().getAsKeyword_1_5_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithConstructorAccess().getCastDATA_TYPEParserRuleCall_1_5_1_1_0());
							}
							lv_cast_10_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
								}
								set(
									$current,
									"cast",
									lv_cast_10_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getUrnUrnIdParserRuleCall_1_6_0());
					}
					lv_urn_11_0=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"urn",
							lv_urn_11_0,
							"org.integratedmodelling.kactors.Kactors.UrnId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithConstructorAccess().getIdPathNameParserRuleCall_1_7_0_0());
						}
						lv_id_12_0=rulePathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
							}
							set(
								$current,
								"id",
								lv_id_12_0,
								"org.integratedmodelling.kactors.Kactors.PathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_13='as'
					{
						newLeafNode(otherlv_13, grammarAccess.getValueWithConstructorAccess().getAsKeyword_1_7_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithConstructorAccess().getCastDATA_TYPEParserRuleCall_1_7_1_1_0());
							}
							lv_cast_14_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
								}
								set(
									$current,
									"cast",
									lv_cast_14_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getListListParserRuleCall_1_8_0());
					}
					lv_list_15_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"list",
							lv_list_15_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getMapMapParserRuleCall_1_9_0());
					}
					lv_map_16_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"map",
							lv_map_16_0,
							"org.integratedmodelling.kactors.Kactors.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_constant_17_0=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_constant_17_0, grammarAccess.getValueWithConstructorAccess().getConstantUPPERCASE_IDTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithConstructorRule());
						}
						setWithLastConsumed(
							$current,
							"constant",
							lv_constant_17_0,
							"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getObservableObservableParserRuleCall_1_11_0());
					}
					lv_observable_18_0=ruleObservable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"observable",
							lv_observable_18_0,
							"org.integratedmodelling.kactors.Kactors.Observable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_expression_19_0=RULE_EXPR
						{
							newLeafNode(lv_expression_19_0, grammarAccess.getValueWithConstructorAccess().getExpressionEXPRTerminalRuleCall_1_12_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueWithConstructorRule());
							}
							setWithLastConsumed(
								$current,
								"expression",
								lv_expression_19_0,
								"org.integratedmodelling.kactors.Kactors.EXPR");
						}
					)
				)
				(
					otherlv_20='as'
					{
						newLeafNode(otherlv_20, grammarAccess.getValueWithConstructorAccess().getAsKeyword_1_12_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithConstructorAccess().getCastDATA_TYPEParserRuleCall_1_12_1_1_0());
							}
							lv_cast_21_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
								}
								set(
									$current,
									"cast",
									lv_cast_21_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getTableLookupTableParserRuleCall_1_13_0());
					}
					lv_table_22_0=ruleLookupTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"table",
							lv_table_22_0,
							"org.integratedmodelling.kactors.Kactors.LookupTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getQuantityQuantityParserRuleCall_1_14_0());
					}
					lv_quantity_23_0=ruleQuantity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"quantity",
							lv_quantity_23_0,
							"org.integratedmodelling.kactors.Kactors.Quantity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_component_24_0='new'
						{
							newLeafNode(lv_component_24_0, grammarAccess.getValueWithConstructorAccess().getComponentNewKeyword_1_15_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueWithConstructorRule());
							}
							setWithLastConsumed($current, "component", lv_component_24_0 != null, "new");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithConstructorAccess().getBehaviorPathNameParserRuleCall_1_15_1_0());
						}
						lv_behavior_25_0=rulePathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
							}
							set(
								$current,
								"behavior",
								lv_behavior_25_0,
								"org.integratedmodelling.kactors.Kactors.PathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_26='('
					{
						newLeafNode(otherlv_26, grammarAccess.getValueWithConstructorAccess().getLeftParenthesisKeyword_1_15_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithConstructorAccess().getParametersParameterListParserRuleCall_1_15_2_1_0());
							}
							lv_parameters_27_0=ruleParameterList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
								}
								set(
									$current,
									"parameters",
									lv_parameters_27_0,
									"org.integratedmodelling.kactors.Kactors.ParameterList");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_28=')'
					{
						newLeafNode(otherlv_28, grammarAccess.getValueWithConstructorAccess().getRightParenthesisKeyword_1_15_2_2());
					}
				)?
			)
		)
		(
			otherlv_29='?'
			{
				newLeafNode(otherlv_29, grammarAccess.getValueWithConstructorAccess().getQuestionMarkKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getThenValueWithConstructorParserRuleCall_2_1_0());
					}
					lv_then_30_0=ruleValueWithConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"then",
							lv_then_30_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_31=':'
			{
				newLeafNode(otherlv_31, grammarAccess.getValueWithConstructorAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithConstructorAccess().getElseValueWithConstructorParserRuleCall_2_3_0());
					}
					lv_else_32_0=ruleValueWithConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithConstructorRule());
						}
						set(
							$current,
							"else",
							lv_else_32_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	iv_ruleConstructor=ruleConstructor
	{ $current=$iv_ruleConstructor.current; }
	EOF;

// Rule Constructor
ruleConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstructorAccess().getPathQuotablePathNameParserRuleCall_0_0_0());
					}
					lv_path_0_0=ruleQuotablePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstructorRule());
						}
						set(
							$current,
							"path",
							lv_path_0_0,
							"org.integratedmodelling.kactors.Kactors.QuotablePathName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				lv_classid_2_0=RULE_CAMELCASE_ID
				{
					newLeafNode(lv_classid_2_0, grammarAccess.getConstructorAccess().getClassidCAMELCASE_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstructorRule());
					}
					setWithLastConsumed(
						$current,
						"classid",
						lv_classid_2_0,
						"org.integratedmodelling.kactors.Kactors.CAMELCASE_ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstructorAccess().getParametersParameterListParserRuleCall_2_1_0());
					}
					lv_parameters_4_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstructorRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_4_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleValueWithMetadata
entryRuleValueWithMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueWithMetadataRule()); }
	iv_ruleValueWithMetadata=ruleValueWithMetadata
	{ $current=$iv_ruleValueWithMetadata.current; }
	EOF;

// Rule ValueWithMetadata
ruleValueWithMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deferred_0_0='`'
				{
					newLeafNode(lv_deferred_0_0, grammarAccess.getValueWithMetadataAccess().getDeferredGraveAccentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithMetadataRule());
					}
					setWithLastConsumed($current, "deferred", lv_deferred_0_0 != null, "`");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getTreeTreeParserRuleCall_1_0_0());
					}
					lv_tree_1_0=ruleTree
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"tree",
							lv_tree_1_0,
							"org.integratedmodelling.kactors.Kactors.Tree");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_argvalue_2_0=RULE_ARGVALUE
					{
						newLeafNode(lv_argvalue_2_0, grammarAccess.getValueWithMetadataAccess().getArgvalueARGVALUETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithMetadataRule());
						}
						setWithLastConsumed(
							$current,
							"argvalue",
							lv_argvalue_2_0,
							"org.integratedmodelling.kactors.Kactors.ARGVALUE");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithMetadataAccess().getLiteralLiteralParserRuleCall_1_2_0_0());
						}
						lv_literal_3_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
							}
							set(
								$current,
								"literal",
								lv_literal_3_0,
								"org.integratedmodelling.kactors.Kactors.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='as'
					{
						newLeafNode(otherlv_4, grammarAccess.getValueWithMetadataAccess().getAsKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataAccess().getCastDATA_TYPEParserRuleCall_1_2_1_1_0());
							}
							lv_cast_5_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
								}
								set(
									$current,
									"cast",
									lv_cast_5_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getUrnUrnIdParserRuleCall_1_3_0());
					}
					lv_urn_6_0=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"urn",
							lv_urn_6_0,
							"org.integratedmodelling.kactors.Kactors.UrnId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_constant_7_0=RULE_UPPERCASE_ID
						{
							newLeafNode(lv_constant_7_0, grammarAccess.getValueWithMetadataAccess().getConstantUPPERCASE_IDTerminalRuleCall_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueWithMetadataRule());
							}
							setWithLastConsumed(
								$current,
								"constant",
								lv_constant_7_0,
								"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
						}
					)
				)
				(
					otherlv_8='as'
					{
						newLeafNode(otherlv_8, grammarAccess.getValueWithMetadataAccess().getAsKeyword_1_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataAccess().getCastDATA_TYPEParserRuleCall_1_4_1_1_0());
							}
							lv_cast_9_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
								}
								set(
									$current,
									"cast",
									lv_cast_9_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getIdPathNameParserRuleCall_1_5_0());
					}
					lv_id_10_0=rulePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"id",
							lv_id_10_0,
							"org.integratedmodelling.kactors.Kactors.PathName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getListListParserRuleCall_1_6_0());
					}
					lv_list_11_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"list",
							lv_list_11_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getMapMapParserRuleCall_1_7_0());
					}
					lv_map_12_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"map",
							lv_map_12_0,
							"org.integratedmodelling.kactors.Kactors.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getObservableObservableParserRuleCall_1_8_0());
					}
					lv_observable_13_0=ruleObservable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"observable",
							lv_observable_13_0,
							"org.integratedmodelling.kactors.Kactors.Observable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_expression_14_0=RULE_EXPR
						{
							newLeafNode(lv_expression_14_0, grammarAccess.getValueWithMetadataAccess().getExpressionEXPRTerminalRuleCall_1_9_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueWithMetadataRule());
							}
							setWithLastConsumed(
								$current,
								"expression",
								lv_expression_14_0,
								"org.integratedmodelling.kactors.Kactors.EXPR");
						}
					)
				)
				(
					otherlv_15='as'
					{
						newLeafNode(otherlv_15, grammarAccess.getValueWithMetadataAccess().getAsKeyword_1_9_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataAccess().getCastDATA_TYPEParserRuleCall_1_9_1_1_0());
							}
							lv_cast_16_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
								}
								set(
									$current,
									"cast",
									lv_cast_16_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getTableLookupTableParserRuleCall_1_10_0());
					}
					lv_table_17_0=ruleLookupTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"table",
							lv_table_17_0,
							"org.integratedmodelling.kactors.Kactors.LookupTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataAccess().getQuantityQuantityParserRuleCall_1_11_0());
					}
					lv_quantity_18_0=ruleQuantity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
						}
						set(
							$current,
							"quantity",
							lv_quantity_18_0,
							"org.integratedmodelling.kactors.Kactors.Quantity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithMetadataAccess().getMetadataMetadataParserRuleCall_2_0());
				}
				lv_metadata_19_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithMetadataRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_19_0,
						"org.integratedmodelling.kactors.Kactors.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleValueWithMetadataWithoutTree
entryRuleValueWithMetadataWithoutTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeRule()); }
	iv_ruleValueWithMetadataWithoutTree=ruleValueWithMetadataWithoutTree
	{ $current=$iv_ruleValueWithMetadataWithoutTree.current; }
	EOF;

// Rule ValueWithMetadataWithoutTree
ruleValueWithMetadataWithoutTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deferred_0_0='`'
				{
					newLeafNode(lv_deferred_0_0, grammarAccess.getValueWithMetadataWithoutTreeAccess().getDeferredGraveAccentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithMetadataWithoutTreeRule());
					}
					setWithLastConsumed($current, "deferred", lv_deferred_0_0 != null, "`");
				}
			)
		)?
		(
			(
				(
					lv_argvalue_1_0=RULE_ARGVALUE
					{
						newLeafNode(lv_argvalue_1_0, grammarAccess.getValueWithMetadataWithoutTreeAccess().getArgvalueARGVALUETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						setWithLastConsumed(
							$current,
							"argvalue",
							lv_argvalue_1_0,
							"org.integratedmodelling.kactors.Kactors.ARGVALUE");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getLiteralLiteralParserRuleCall_1_1_0_0());
						}
						lv_literal_2_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
							}
							set(
								$current,
								"literal",
								lv_literal_2_0,
								"org.integratedmodelling.kactors.Kactors.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3='as'
					{
						newLeafNode(otherlv_3, grammarAccess.getValueWithMetadataWithoutTreeAccess().getAsKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getCastDATA_TYPEParserRuleCall_1_1_1_1_0());
							}
							lv_cast_4_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
								}
								set(
									$current,
									"cast",
									lv_cast_4_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getIdPathNameParserRuleCall_1_2_0_0());
						}
						lv_id_5_0=rulePathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
							}
							set(
								$current,
								"id",
								lv_id_5_0,
								"org.integratedmodelling.kactors.Kactors.PathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6='as'
					{
						newLeafNode(otherlv_6, grammarAccess.getValueWithMetadataWithoutTreeAccess().getAsKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getCastDATA_TYPEParserRuleCall_1_2_1_1_0());
							}
							lv_cast_7_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
								}
								set(
									$current,
									"cast",
									lv_cast_7_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getUrnUrnIdParserRuleCall_1_3_0());
					}
					lv_urn_8_0=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"urn",
							lv_urn_8_0,
							"org.integratedmodelling.kactors.Kactors.UrnId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getListListParserRuleCall_1_4_0());
					}
					lv_list_9_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"list",
							lv_list_9_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getMapMapParserRuleCall_1_5_0());
					}
					lv_map_10_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"map",
							lv_map_10_0,
							"org.integratedmodelling.kactors.Kactors.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getObservableObservableParserRuleCall_1_6_0());
					}
					lv_observable_11_0=ruleObservable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"observable",
							lv_observable_11_0,
							"org.integratedmodelling.kactors.Kactors.Observable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_expression_12_0=RULE_EXPR
						{
							newLeafNode(lv_expression_12_0, grammarAccess.getValueWithMetadataWithoutTreeAccess().getExpressionEXPRTerminalRuleCall_1_7_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueWithMetadataWithoutTreeRule());
							}
							setWithLastConsumed(
								$current,
								"expression",
								lv_expression_12_0,
								"org.integratedmodelling.kactors.Kactors.EXPR");
						}
					)
				)
				(
					otherlv_13='as'
					{
						newLeafNode(otherlv_13, grammarAccess.getValueWithMetadataWithoutTreeAccess().getAsKeyword_1_7_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getCastDATA_TYPEParserRuleCall_1_7_1_1_0());
							}
							lv_cast_14_0=ruleDATA_TYPE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
								}
								set(
									$current,
									"cast",
									lv_cast_14_0,
									"org.integratedmodelling.kactors.Kactors.DATA_TYPE");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getTableLookupTableParserRuleCall_1_8_0());
					}
					lv_table_15_0=ruleLookupTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"table",
							lv_table_15_0,
							"org.integratedmodelling.kactors.Kactors.LookupTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getQuantityQuantityParserRuleCall_1_9_0());
					}
					lv_quantity_16_0=ruleQuantity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"quantity",
							lv_quantity_16_0,
							"org.integratedmodelling.kactors.Kactors.Quantity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_17='?'
			{
				newLeafNode(otherlv_17, grammarAccess.getValueWithMetadataWithoutTreeAccess().getQuestionMarkKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getThenValueParserRuleCall_2_1_0());
					}
					lv_then_18_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"then",
							lv_then_18_0,
							"org.integratedmodelling.kactors.Kactors.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_19=':'
			{
				newLeafNode(otherlv_19, grammarAccess.getValueWithMetadataWithoutTreeAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getElseValueParserRuleCall_2_3_0());
					}
					lv_else_20_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
						}
						set(
							$current,
							"else",
							lv_else_20_0,
							"org.integratedmodelling.kactors.Kactors.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithMetadataWithoutTreeAccess().getMetadataMetadataParserRuleCall_3_0());
				}
				lv_metadata_21_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithMetadataWithoutTreeRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_21_0,
						"org.integratedmodelling.kactors.Kactors.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMatch
entryRuleMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchRule()); }
	iv_ruleMatch=ruleMatch
	{ $current=$iv_ruleMatch.current; }
	EOF;

// Rule Match
ruleMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_0, grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_0,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
				)
			)
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_0_2_0());
					}
					lv_body_2_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_annotation_3_0=RULE_ANNOTATION_ID
					{
						newLeafNode(lv_annotation_3_0, grammarAccess.getMatchAccess().getAnnotationANNOTATION_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"annotation",
							lv_annotation_3_0,
							"org.integratedmodelling.kactors.Kactors.ANNOTATION_ID");
					}
				)
			)
			(
				otherlv_4='as'
				{
					newLeafNode(otherlv_4, grammarAccess.getMatchAccess().getAsKeyword_1_1_0());
				}
				(
					(
						lv_formalName_5_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_5_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_5_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_6='->'
			{
				newLeafNode(otherlv_6, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_1_3_0());
					}
					lv_body_7_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_7_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_constant_8_0=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_constant_8_0, grammarAccess.getMatchAccess().getConstantUPPERCASE_IDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"constant",
							lv_constant_8_0,
							"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
					}
				)
			)
			otherlv_9='->'
			{
				newLeafNode(otherlv_9, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_2_2_0());
					}
					lv_body_10_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_10_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					(
						lv_boolean_11_1='true'
						{
							newLeafNode(lv_boolean_11_1, grammarAccess.getMatchAccess().getBooleanTrueKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed($current, "boolean", lv_boolean_11_1, null);
						}
						    |
						lv_boolean_11_2='false'
						{
							newLeafNode(lv_boolean_11_2, grammarAccess.getMatchAccess().getBooleanFalseKeyword_3_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed($current, "boolean", lv_boolean_11_2, null);
						}
					)
				)
			)
			otherlv_12='->'
			{
				newLeafNode(otherlv_12, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_3_2_0());
					}
					lv_body_13_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_13_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_type_14_0=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_type_14_0, grammarAccess.getMatchAccess().getTypeCAMELCASE_IDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"type",
							lv_type_14_0,
							"org.integratedmodelling.kactors.Kactors.CAMELCASE_ID");
					}
				)
			)
			(
				otherlv_15='as'
				{
					newLeafNode(otherlv_15, grammarAccess.getMatchAccess().getAsKeyword_4_1_0());
				}
				(
					(
						lv_formalName_16_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_16_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_16_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_17='->'
			{
				newLeafNode(otherlv_17, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_4_3_0());
					}
					lv_body_18_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_18_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_regexp_19_0=RULE_REGEXP
					{
						newLeafNode(lv_regexp_19_0, grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"regexp",
							lv_regexp_19_0,
							"org.integratedmodelling.kactors.Kactors.REGEXP");
					}
				)
			)
			(
				otherlv_20='as'
				{
					newLeafNode(otherlv_20, grammarAccess.getMatchAccess().getAsKeyword_5_1_0());
				}
				(
					(
						lv_formalName_21_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_21_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_5_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_21_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_22='->'
			{
				newLeafNode(otherlv_22, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_5_3_0());
					}
					lv_body_23_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_23_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getObservableObservableParserRuleCall_6_0_0());
					}
					lv_observable_24_0=ruleObservable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"observable",
							lv_observable_24_0,
							"org.integratedmodelling.kactors.Kactors.Observable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25='as'
				{
					newLeafNode(otherlv_25, grammarAccess.getMatchAccess().getAsKeyword_6_1_0());
				}
				(
					(
						lv_formalName_26_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_26_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_6_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_26_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_27='->'
			{
				newLeafNode(otherlv_27, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_6_3_0());
					}
					lv_body_28_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_28_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_7_0_0());
					}
					lv_literal_29_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"literal",
							lv_literal_29_0,
							"org.integratedmodelling.kactors.Kactors.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_30='->'
			{
				newLeafNode(otherlv_30, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_7_2_0());
					}
					lv_body_31_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_31_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getListListParserRuleCall_8_0_0());
					}
					lv_list_32_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"list",
							lv_list_32_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33='->'
			{
				newLeafNode(otherlv_33, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_8_2_0());
					}
					lv_body_34_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_34_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_35='in'
			{
				newLeafNode(otherlv_35, grammarAccess.getMatchAccess().getInKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getSetListParserRuleCall_9_1_0());
					}
					lv_set_36_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"set",
							lv_set_36_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_37='as'
				{
					newLeafNode(otherlv_37, grammarAccess.getMatchAccess().getAsKeyword_9_2_0());
				}
				(
					(
						lv_formalName_38_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_38_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_9_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_38_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_39='->'
			{
				newLeafNode(otherlv_39, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_9_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_9_4_0());
					}
					lv_body_40_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_40_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getQuantityQuantityParserRuleCall_10_0_0());
					}
					lv_quantity_41_0=ruleQuantity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"quantity",
							lv_quantity_41_0,
							"org.integratedmodelling.kactors.Kactors.Quantity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_42='->'
			{
				newLeafNode(otherlv_42, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_10_2_0());
					}
					lv_body_43_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_43_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_expr_44_0=RULE_EXPR
					{
						newLeafNode(lv_expr_44_0, grammarAccess.getMatchAccess().getExprEXPRTerminalRuleCall_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_44_0,
							"org.integratedmodelling.kactors.Kactors.EXPR");
					}
				)
			)
			(
				otherlv_45='as'
				{
					newLeafNode(otherlv_45, grammarAccess.getMatchAccess().getAsKeyword_11_1_0());
				}
				(
					(
						lv_formalName_46_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_46_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_11_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_46_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_47='->'
			{
				newLeafNode(otherlv_47, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_11_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_11_3_0());
					}
					lv_body_48_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_48_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_nodata_49_0='unknown'
					{
						newLeafNode(lv_nodata_49_0, grammarAccess.getMatchAccess().getNodataUnknownKeyword_12_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed($current, "nodata", lv_nodata_49_0, "unknown");
					}
				)
			)
			otherlv_50='->'
			{
				newLeafNode(otherlv_50, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_12_2_0());
					}
					lv_body_51_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_51_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_star_52_0='*'
					{
						newLeafNode(lv_star_52_0, grammarAccess.getMatchAccess().getStarAsteriskKeyword_13_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed($current, "star", lv_star_52_0 != null, "*");
					}
				)
			)
			otherlv_53='->'
			{
				newLeafNode(otherlv_53, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_13_2_0());
					}
					lv_body_54_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_54_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_anything_55_0='#'
					{
						newLeafNode(lv_anything_55_0, grammarAccess.getMatchAccess().getAnythingNumberSignKeyword_14_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed($current, "anything", lv_anything_55_0 != null, "#");
					}
				)
			)
			otherlv_56='->'
			{
				newLeafNode(otherlv_56, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_14_2_0());
					}
					lv_body_57_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_57_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_empty_58_0='empty'
					{
						newLeafNode(lv_empty_58_0, grammarAccess.getMatchAccess().getEmptyEmptyKeyword_15_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed($current, "empty", lv_empty_58_0 != null, "empty");
					}
				)
			)
			otherlv_59='->'
			{
				newLeafNode(otherlv_59, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_15_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_15_2_0());
					}
					lv_body_60_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_60_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_exception_61_0='exception'
					{
						newLeafNode(lv_exception_61_0, grammarAccess.getMatchAccess().getExceptionExceptionKeyword_16_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed($current, "exception", lv_exception_61_0 != null, "exception");
					}
				)
			)
			(
				otherlv_62='as'
				{
					newLeafNode(otherlv_62, grammarAccess.getMatchAccess().getAsKeyword_16_1_0());
				}
				(
					(
						lv_formalName_63_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_formalName_63_0, grammarAccess.getMatchAccess().getFormalNameLOWERCASE_IDTerminalRuleCall_16_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMatchRule());
							}
							setWithLastConsumed(
								$current,
								"formalName",
								lv_formalName_63_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
			)?
			otherlv_64='->'
			{
				newLeafNode(otherlv_64, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_16_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_16_3_0());
					}
					lv_body_65_0=ruleStatementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_65_0,
							"org.integratedmodelling.kactors.Kactors.StatementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUrnId
entryRuleUrnId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUrnIdRule()); }
	iv_ruleUrnId=ruleUrnId
	{ $current=$iv_ruleUrnId.current.getText(); }
	EOF;

// Rule UrnId
ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='urn:klab:'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
		}
		this_PathName_1=rulePathName
		{
			$current.merge(this_PathName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
		}
		this_PathName_3=rulePathName
		{
			$current.merge(this_PathName_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
		}
		this_PathName_5=rulePathName
		{
			$current.merge(this_PathName_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
		}
		(
			{
				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
			}
			this_Path_7=rulePath
			{
				$current.merge(this_Path_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_INT_8=RULE_INT
			{
				$current.merge(this_INT_8);
			}
			{
				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
			}
		)
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
			}
			{
				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
			}
			this_VersionNumber_10=ruleVersionNumber
			{
				$current.merge(this_VersionNumber_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
				}
				this_Path_12=rulePath
				{
					$current.merge(this_Path_12);
				}
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
				}
				this_UrnKvp_13=ruleUrnKvp
				{
					$current.merge(this_UrnKvp_13);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			(
				kw='&'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
					}
					this_Path_15=rulePath
					{
						$current.merge(this_Path_15);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
					}
					this_UrnKvp_16=ruleUrnKvp
					{
						$current.merge(this_UrnKvp_16);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleUrnKvp
entryRuleUrnKvp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUrnKvpRule()); }
	iv_ruleUrnKvp=ruleUrnKvp
	{ $current=$iv_ruleUrnKvp.current.getText(); }
	EOF;

// Rule UrnKvp
ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
			}
			this_Path_2=rulePath
			{
				$current.merge(this_Path_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getListAccess().getListAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getContentsListElementParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleListElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"org.integratedmodelling.kactors.Kactors.ListElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleListElement
entryRuleListElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListElementRule()); }
	iv_ruleListElement=ruleListElement
	{ $current=$iv_ruleListElement.current; }
	EOF;

// Rule ListElement
ruleListElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListElementAccess().getValueValueWithMetadataParserRuleCall_0_0());
				}
				lv_value_0_0=ruleValueWithMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListElementRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"org.integratedmodelling.kactors.Kactors.ValueWithMetadata");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_tag_1_0=RULE_TAG
				{
					newLeafNode(lv_tag_1_0, grammarAccess.getListElementAccess().getTagTAGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListElementRule());
					}
					setWithLastConsumed(
						$current,
						"tag",
						lv_tag_1_0,
						"org.integratedmodelling.kactors.Kactors.TAG");
				}
			)
		)
	)
;

// Entry rule entryRuleMap
entryRuleMap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapRule()); }
	iv_ruleMap=ruleMap
	{ $current=$iv_ruleMap.current; }
	EOF;

// Rule Map
ruleMap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapAccess().getMapAction_0(),
					$current);
			}
		)
		otherlv_1='#{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getNumberSignLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
					}
					lv_entries_2_0=ruleMapEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						add(
							$current,
							"entries",
							lv_entries_2_0,
							"org.integratedmodelling.kactors.Kactors.MapEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(','
					)=>
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
						}
						lv_entries_4_0=ruleMapEntry
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapRule());
							}
							add(
								$current,
								"entries",
								lv_entries_4_0,
								"org.integratedmodelling.kactors.Kactors.MapEntry");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTree
entryRuleTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTreeRule()); }
	iv_ruleTree=ruleTree
	{ $current=$iv_ruleTree.current; }
	EOF;

// Rule Tree
ruleTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTreeAccess().getRootValueWithMetadataWithoutTreeParserRuleCall_0_0());
				}
				lv_root_0_0=ruleValueWithMetadataWithoutTree
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTreeRule());
					}
					set(
						$current,
						"root",
						lv_root_0_0,
						"org.integratedmodelling.kactors.Kactors.ValueWithMetadataWithoutTree");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('<-')=>
				otherlv_1='<-'
				{
					newLeafNode(otherlv_1, grammarAccess.getTreeAccess().getLessThanSignHyphenMinusKeyword_1_0());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTreeAccess().getValueValueWithMetadataWithoutTreeParserRuleCall_1_1_0_0());
						}
						lv_value_2_0=ruleValueWithMetadataWithoutTree
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTreeRule());
							}
							add(
								$current,
								"value",
								lv_value_2_0,
								"org.integratedmodelling.kactors.Kactors.ValueWithMetadataWithoutTree");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					((
						'('
						(
							(
								ruleTree
							)
						)
						')'
					)
					)=>
					(
						otherlv_3='('
						{
							newLeafNode(otherlv_3, grammarAccess.getTreeAccess().getLeftParenthesisKeyword_1_1_1_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getTreeAccess().getValueTreeParserRuleCall_1_1_1_0_1_0());
								}
								lv_value_4_0=ruleTree
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTreeRule());
									}
									add(
										$current,
										"value",
										lv_value_4_0,
										"org.integratedmodelling.kactors.Kactors.Tree");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_5=')'
						{
							newLeafNode(otherlv_5, grammarAccess.getTreeAccess().getRightParenthesisKeyword_1_1_1_0_2());
						}
					)
				)
			)
		)+
	)
;

// Entry rule entryRuleMapEntry
entryRuleMapEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryRule()); }
	iv_ruleMapEntry=ruleMapEntry
	{ $current=$iv_ruleMapEntry.current; }
	EOF;

// Rule MapEntry
ruleMapEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierParserRuleCall_0_0());
				}
				lv_classifier_0_0=ruleClassifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryRule());
					}
					set(
						$current,
						"classifier",
						lv_classifier_0_0,
						"org.integratedmodelling.kactors.Kactors.Classifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithMetadataParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValueWithMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.integratedmodelling.kactors.Kactors.ValueWithMetadata");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	iv_ruleClassifier=ruleClassifier
	{ $current=$iv_ruleClassifier.current; }
	EOF;

// Rule Classifier
ruleClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
					}
					lv_int0_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRule());
						}
						set(
							$current,
							"int0",
							lv_int0_2_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_3_0='inclusive'
						{
							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_3_0, "inclusive");
						}
					)
				)
				    |
				otherlv_4='exclusive'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierAccess().getExclusiveKeyword_1_1_1());
				}
			)?
			(
				('to')=>
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getClassifierAccess().getToKeyword_1_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
					}
					lv_int1_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRule());
						}
						set(
							$current,
							"int1",
							lv_int1_6_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_7_0='inclusive'
						{
							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_7_0, "inclusive");
						}
					)
				)
				    |
				otherlv_8='exclusive'
				{
					newLeafNode(otherlv_8, grammarAccess.getClassifierAccess().getExclusiveKeyword_1_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierAccess().getNumNumberParserRuleCall_2_0());
				}
				lv_num_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRule());
					}
					set(
						$current,
						"num",
						lv_num_9_0,
						"org.integratedmodelling.kactors.Kactors.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_10='in'
			{
				newLeafNode(otherlv_10, grammarAccess.getClassifierAccess().getInKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierAccess().getSetListParserRuleCall_3_1_0());
					}
					lv_set_11_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRule());
						}
						set(
							$current,
							"set",
							lv_set_11_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_12_0=RULE_STRING
				{
					newLeafNode(lv_string_12_0, grammarAccess.getClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierAccess().getObservableObservableParserRuleCall_5_0());
				}
				lv_observable_13_0=ruleObservable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRule());
					}
					set(
						$current,
						"observable",
						lv_observable_13_0,
						"org.integratedmodelling.kactors.Kactors.Observable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_id_14_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_14_1, grammarAccess.getClassifierAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_14_1,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
					    |
					lv_id_14_2=RULE_LOWERCASE_ID_DASH
					{
						newLeafNode(lv_id_14_2, grammarAccess.getClassifierAccess().getIdLOWERCASE_ID_DASHTerminalRuleCall_6_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_14_2,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID_DASH");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
					}
					lv_op_15_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRule());
						}
						set(
							$current,
							"op",
							lv_op_15_0,
							"org.integratedmodelling.kactors.Kactors.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierAccess().getExpressionNumberParserRuleCall_7_1_0());
					}
					lv_expression_16_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRule());
						}
						set(
							$current,
							"expression",
							lv_expression_16_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_nodata_17_0='unknown'
				{
					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierAccess().getNodataUnknownKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_17_0, "unknown");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierAccess().getMapMapParserRuleCall_9_0());
				}
				lv_map_18_0=ruleMap
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRule());
					}
					set(
						$current,
						"map",
						lv_map_18_0,
						"org.integratedmodelling.kactors.Kactors.Map");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_star_19_0='*'
				{
					newLeafNode(lv_star_19_0, grammarAccess.getClassifierAccess().getStarAsteriskKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRule());
					}
					setWithLastConsumed($current, "star", lv_star_19_0 != null, "*");
				}
			)
		)
	)
;

// Entry rule entryRuleObservable
entryRuleObservable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObservableRule()); }
	iv_ruleObservable=ruleObservable
	{ $current=$iv_ruleObservable.current; }
	EOF;

// Rule Observable
ruleObservable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getObservableAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObservableAccess().getObservableObservableSemanticsParserRuleCall_1_0());
				}
				lv_observable_1_0=ruleObservableSemantics
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservableRule());
					}
					set(
						$current,
						"observable",
						lv_observable_1_0,
						"org.integratedmodelling.kactors.Kactors.ObservableSemantics");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getObservableAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleLookupTable
entryRuleLookupTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupTableRule()); }
	iv_ruleLookupTable=ruleLookupTable
	{ $current=$iv_ruleLookupTable.current; }
	EOF;

// Rule LookupTable
ruleLookupTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
					$current);
			}
		)
		otherlv_1='{{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
				}
				lv_table_2_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLookupTableRule());
					}
					set(
						$current,
						"table",
						lv_table_2_0,
						"org.integratedmodelling.kactors.Kactors.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='}}'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
					}
					lv_headers_0_0=ruleHeaderRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						set(
							$current,
							"headers",
							lv_headers_0_0,
							"org.integratedmodelling.kactors.Kactors.HeaderRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_SEPARATOR_1=RULE_SEPARATOR
			{
				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
				}
				lv_rows_2_0=ruleTableRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"rows",
						lv_rows_2_0,
						"org.integratedmodelling.kactors.Kactors.TableRow");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
					}
					lv_rows_4_0=ruleTableRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"rows",
							lv_rows_4_0,
							"org.integratedmodelling.kactors.Kactors.TableRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleHeaderRow
entryRuleHeaderRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRowRule()); }
	iv_ruleHeaderRow=ruleHeaderRow
	{ $current=$iv_ruleHeaderRow.current; }
	EOF;

// Rule HeaderRow
ruleHeaderRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_elements_0_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHeaderRowRule());
						}
						addWithLastConsumed(
							$current,
							"elements",
							lv_elements_0_1,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
					    |
					(
						lv_elements_0_3=RULE_STRING
						{
							newLeafNode(lv_elements_0_3, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHeaderRowRule());
							}
							addWithLastConsumed(
								$current,
								"elements",
								lv_elements_0_3,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
						    |
						lv_elements_0_4=RULE_LOCALIZED_STRING_REFERENCE
						{
							newLeafNode(lv_elements_0_4, grammarAccess.getHeaderRowAccess().getElementsLOCALIZED_STRING_REFERENCETerminalRuleCall_0_0_1_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHeaderRowRule());
							}
							addWithLastConsumed(
								$current,
								"elements",
								lv_elements_0_4,
								"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
						}
					)
				)
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					(
						lv_elements_2_1=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHeaderRowRule());
							}
							addWithLastConsumed(
								$current,
								"elements",
								lv_elements_2_1,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
						    |
						(
							lv_elements_2_3=RULE_STRING
							{
								newLeafNode(lv_elements_2_3, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getHeaderRowRule());
								}
								addWithLastConsumed(
									$current,
									"elements",
									lv_elements_2_3,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
							    |
							lv_elements_2_4=RULE_LOCALIZED_STRING_REFERENCE
							{
								newLeafNode(lv_elements_2_4, grammarAccess.getHeaderRowAccess().getElementsLOCALIZED_STRING_REFERENCETerminalRuleCall_1_1_0_1_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getHeaderRowRule());
								}
								addWithLastConsumed(
									$current,
									"elements",
									lv_elements_2_4,
									"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
							}
						)
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	iv_ruleTableRow=ruleTableRow
	{ $current=$iv_ruleTableRow.current; }
	EOF;

// Rule TableRow
ruleTableRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleTableClassifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.integratedmodelling.kactors.Kactors.TableClassifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleTableClassifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"org.integratedmodelling.kactors.Kactors.TableClassifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTableClassifier
entryRuleTableClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableClassifierRule()); }
	iv_ruleTableClassifier=ruleTableClassifier
	{ $current=$iv_ruleTableClassifier.current; }
	EOF;

// Rule TableClassifier
ruleTableClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTableClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTableClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_1_0());
				}
				lv_num_2_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"num",
						lv_num_2_0,
						"org.integratedmodelling.kactors.Kactors.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_3_0=RULE_STRING
				{
					newLeafNode(lv_string_3_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getObservableObservableParserRuleCall_3_0());
				}
				lv_observable_4_0=ruleObservable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"observable",
						lv_observable_4_0,
						"org.integratedmodelling.kactors.Kactors.Observable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_4_0_0());
					}
					lv_op_5_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"op",
							lv_op_5_0,
							"org.integratedmodelling.kactors.Kactors.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_4_1_0());
					}
					lv_expression_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_5_0_0());
					}
					lv_int0_7_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"int0",
							lv_int0_7_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_8_0='inclusive'
						{
							newLeafNode(lv_leftLimit_8_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_5_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTableClassifierRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_8_0, "inclusive");
						}
					)
				)
				    |
				otherlv_9='exclusive'
				{
					newLeafNode(otherlv_9, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_1_1());
				}
			)?
			(
				('to')=>
				otherlv_10='to'
				{
					newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getToKeyword_5_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_5_3_0());
					}
					lv_int1_11_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"int1",
							lv_int1_11_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_12_0='inclusive'
						{
							newLeafNode(lv_rightLimit_12_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_5_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTableClassifierRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_12_0, "inclusive");
						}
					)
				)
				    |
				otherlv_13='exclusive'
				{
					newLeafNode(otherlv_13, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_4_1());
				}
			)?
		)
		    |
		(
			otherlv_14='in'
			{
				newLeafNode(otherlv_14, grammarAccess.getTableClassifierAccess().getInKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_6_1_0());
					}
					lv_set_15_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"set",
							lv_set_15_0,
							"org.integratedmodelling.kactors.Kactors.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_7_0());
				}
				lv_quantity_16_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_16_0,
						"org.integratedmodelling.kactors.Kactors.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_8_0());
				}
				lv_date_17_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"date",
						lv_date_17_0,
						"org.integratedmodelling.kactors.Kactors.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_expr_18_0=RULE_EXPR
				{
					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"expr",
						lv_expr_18_0,
						"org.integratedmodelling.kactors.Kactors.EXPR");
				}
			)
		)
		    |
		(
			(
				lv_nodata_19_0='unknown'
				{
					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_19_0, "unknown");
				}
			)
		)
		    |
		(
			(
				lv_star_20_0='*'
				{
					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "star", lv_star_20_0 != null, "*");
				}
			)
		)
		    |
		(
			(
				lv_anything_21_0='#'
				{
					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "anything", lv_anything_21_0 != null, "#");
				}
			)
		)
	)
;

// Entry rule entryRuleQuantity
entryRuleQuantity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantityRule()); }
	iv_ruleQuantity=ruleQuantity
	{ $current=$iv_ruleQuantity.current; }
	EOF;

// Rule Quantity
ruleQuantity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
				}
				lv_value_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantityRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"org.integratedmodelling.kactors.Kactors.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_over_1_0='/'
					{
						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuantityRule());
						}
						setWithLastConsumed($current, "over", lv_over_1_0 != null, "/");
					}
				)
			)
			    |
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuantityRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"org.integratedmodelling.kactors.Kactors.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
					}
					lv_currency_4_0=ruleCurrency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuantityRule());
						}
						set(
							$current,
							"currency",
							lv_currency_4_0,
							"org.integratedmodelling.kactors.Kactors.Currency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ANNOTATION_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kactors.Kactors.ANNOTATION_ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotationRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.kactors.Kactors.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.integratedmodelling.kactors.Kactors.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0());
					}
					lv_from_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"from",
							lv_from_1_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='to'
			{
				newLeafNode(otherlv_2, grammarAccess.getLiteralAccess().getToKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0());
					}
					lv_to_3_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"to",
							lv_to_3_0,
							"org.integratedmodelling.kactors.Kactors.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_string_4_1=RULE_STRING
					{
						newLeafNode(lv_string_4_1, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_4_1,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
					    |
					lv_string_4_2=RULE_LOCALIZED_STRING_REFERENCE
					{
						newLeafNode(lv_string_4_2, grammarAccess.getLiteralAccess().getStringLOCALIZED_STRING_REFERENCETerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_4_2,
							"org.integratedmodelling.kactors.Kactors.LOCALIZED_STRING_REFERENCE");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0());
				}
				lv_date_5_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"date",
						lv_date_5_0,
						"org.integratedmodelling.kactors.Kactors.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_6_1='true'
					{
						newLeafNode(lv_boolean_6_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_6_1, null);
					}
					    |
					lv_boolean_6_2='false'
					{
						newLeafNode(lv_boolean_6_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_6_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDATA_TYPE
entryRuleDATA_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDATA_TYPERule()); }
	iv_ruleDATA_TYPE=ruleDATA_TYPE
	{ $current=$iv_ruleDATA_TYPE.current.getText(); }
	EOF;

// Rule DATA_TYPE
ruleDATA_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDATA_TYPEAccess().getIntKeyword_0());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDATA_TYPEAccess().getNumberKeyword_1());
		}
		    |
		kw='text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDATA_TYPEAccess().getTextKeyword_2());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDATA_TYPEAccess().getBooleanKeyword_3());
		}
		    |
		kw='concept'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDATA_TYPEAccess().getConceptKeyword_4());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0());
				}
				lv_pairs_0_0=ruleKeyValuePair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"pairs",
						lv_pairs_0_0,
						"org.integratedmodelling.kactors.Kactors.KeyValuePair");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(','
				)=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0());
					}
					lv_pairs_2_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"pairs",
							lv_pairs_2_0,
							"org.integratedmodelling.kactors.Kactors.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tag_0_0=RULE_TAG
				{
					newLeafNode(lv_tag_0_0, grammarAccess.getKeyValuePairAccess().getTagTAGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyValuePairRule());
					}
					setWithLastConsumed(
						$current,
						"tag",
						lv_tag_0_0,
						"org.integratedmodelling.kactors.Kactors.TAG");
				}
			)
		)
		    |
		(
			(
				(
					(
						lv_name_1_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_name_1_0, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getKeyValuePairRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_1_0,
								"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
						}
					)
				)
				(
					(
						(
							lv_interactive_2_0='?='
							{
								newLeafNode(lv_interactive_2_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getKeyValuePairRule());
								}
								setWithLastConsumed($current, "interactive", lv_interactive_2_0 != null, "?=");
							}
						)
					)
					    |
					otherlv_3='='
					{
						newLeafNode(otherlv_3, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_0_1_1());
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithConstructorParserRuleCall_1_1_0());
					}
					lv_value_4_0=ruleValueWithConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.integratedmodelling.kactors.Kactors.ValueWithConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_key_5_0=RULE_KEY
				{
					newLeafNode(lv_key_5_0, grammarAccess.getKeyValuePairAccess().getKeyKEYTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyValuePairRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_5_0,
						"org.integratedmodelling.kactors.Kactors.KEY");
				}
			)
		)
	)
;

// Entry rule entryRuleUnitElement
entryRuleUnitElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitElementRule()); }
	iv_ruleUnitElement=ruleUnitElement
	{ $current=$iv_ruleUnitElement.current; }
	EOF;

// Rule UnitElement
ruleUnitElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_1=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_1,
							"org.integratedmodelling.kactors.Kactors.CAMELCASE_ID");
					}
					    |
					lv_id_0_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_2,
							"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
					}
					    |
					lv_id_0_3=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_3,
							"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
					}
					    |
					lv_id_0_4=RULE_BACKCASE_ID
					{
						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_4,
							"org.integratedmodelling.kactors.Kactors.BACKCASE_ID");
					}
				)
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
					}
					lv_unit_2_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitElementRule());
						}
						set(
							$current,
							"unit",
							lv_unit_2_0,
							"org.integratedmodelling.kactors.Kactors.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
				}
				lv_root_1_0=ruleUnitElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"root",
						lv_root_1_0,
						"org.integratedmodelling.kactors.Kactors.UnitElement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				((
					(
						ruleUnitOp
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
						}
						lv_connectors_2_0=ruleUnitOp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnitRule());
							}
							add(
								$current,
								"connectors",
								lv_connectors_2_0,
								"org.integratedmodelling.kactors.Kactors.UnitOp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				((
					(
						ruleUnitElement
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0_0());
						}
						lv_units_3_0=ruleUnitElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnitRule());
							}
							add(
								$current,
								"units",
								lv_units_3_0,
								"org.integratedmodelling.kactors.Kactors.UnitElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleCurrency
entryRuleCurrency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurrencyRule()); }
	iv_ruleCurrency=ruleCurrency
	{ $current=$iv_ruleCurrency.current; }
	EOF;

// Rule Currency
ruleCurrency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_UPPERCASE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCurrencyRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
				}
			)
		)
		(
			otherlv_1='@'
			{
				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
			}
			(
				(
					lv_year_2_0=RULE_INT
					{
						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCurrencyRule());
						}
						setWithLastConsumed(
							$current,
							"year",
							lv_year_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			(
				('/')=>
				otherlv_3='/'
				{
					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
					}
					lv_units_4_0=ruleUnitElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCurrencyRule());
						}
						add(
							$current,
							"units",
							lv_units_4_0,
							"org.integratedmodelling.kactors.Kactors.UnitElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleREL_OPERATOR
entryRuleREL_OPERATOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getREL_OPERATORRule()); }
	iv_ruleREL_OPERATOR=ruleREL_OPERATOR
	{ $current=$iv_ruleREL_OPERATOR.current; }
	EOF;

// Rule REL_OPERATOR
ruleREL_OPERATOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_gt_0_0='>'
				{
					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "gt", lv_gt_0_0 != null, ">");
				}
			)
		)
		    |
		(
			(
				lv_lt_1_0='<'
				{
					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "lt", lv_lt_1_0 != null, "<");
				}
			)
		)
		    |
		(
			(
				lv_eq_2_0='='
				{
					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "eq", lv_eq_2_0 != null, "=");
				}
			)
		)
		    |
		(
			(
				lv_ne_3_0='!='
				{
					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ne", lv_ne_3_0 != null, "!=");
				}
			)
		)
		    |
		(
			(
				lv_le_4_0='<='
				{
					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "le", lv_le_4_0 != null, "<=");
				}
			)
		)
		    |
		(
			(
				lv_ge_5_0='>='
				{
					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ge", lv_ge_5_0 != null, ">=");
				}
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='+'
			{
				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
			}
			    |
			(
				(
					lv_negative_1_0='-'
					{
						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberRule());
						}
						setWithLastConsumed($current, "negative", lv_negative_1_0 != null, "-");
					}
				)
			)
		)?
		(
			((
				RULE_INT
			)
			)=>
			(
				lv_real_2_0=RULE_INT
				{
					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"real",
						lv_real_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			((
				'l'
			)
			)=>
			(
				lv_long_3_0='l'
				{
					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed($current, "long", lv_long_3_0 != null, "l");
				}
			)
		)?
		(
			((
				(
					(
						'.'
					)
				)
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						lv_decimal_4_0='.'
						{
							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed($current, "decimal", lv_decimal_4_0 != null, ".");
						}
					)
				)
				(
					(
						lv_decimalPart_5_0=RULE_INT
						{
							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"decimalPart",
								lv_decimalPart_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
		(
			((
				(
					(
						(
							'e'
							    |
							'E'
						)
					)
				)
				(
					'+'
					    |
					(
						(
							'-'
						)
					)
				)?
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						(
							lv_exponential_6_1='e'
							{
								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", lv_exponential_6_1 != null, null);
							}
							    |
							lv_exponential_6_2='E'
							{
								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", lv_exponential_6_2 != null, null);
							}
						)
					)
				)
				(
					otherlv_7='+'
					{
						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
					}
					    |
					(
						(
							lv_expNegative_8_0='-'
							{
								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "expNegative", lv_expNegative_8_0 != null, "-");
							}
						)
					)
				)?
				(
					(
						lv_exp_9_0=RULE_INT
						{
							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"exp",
								lv_exp_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_year_0_0=RULE_INT
				{
					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_1='AD'
			{
				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
			}
			    |
			otherlv_2='CE'
			{
				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
			}
			    |
			(
				(
					lv_bc_3_0='BC'
					{
						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed($current, "bc", lv_bc_3_0 != null, "BC");
					}
				)
			)
		)?
		otherlv_4='-'
		{
			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
		}
		(
			(
				lv_month_5_0=RULE_INT
				{
					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='-'
		{
			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
		}
		(
			(
				lv_day_7_0=RULE_INT
				{
					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_hour_8_0=RULE_INT
					{
						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"hour",
							lv_hour_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
			}
			(
				(
					lv_min_10_0=RULE_INT
					{
						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"min",
							lv_min_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
				}
				(
					(
						lv_sec_12_0=RULE_INT
						{
							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDateRule());
							}
							setWithLastConsumed(
								$current,
								"sec",
								lv_sec_12_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_13='.'
					{
						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
					}
					(
						(
							lv_ms_14_0=RULE_INT
							{
								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDateRule());
								}
								setWithLastConsumed(
									$current,
									"ms",
									lv_ms_14_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)?
			)?
		)?
	)
;

// Entry rule entryRulePathName
entryRulePathName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathNameRule()); }
	iv_rulePathName=rulePathName
	{ $current=$iv_rulePathName.current.getText(); }
	EOF;

// Rule PathName
rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
		{
			$current.merge(this_LOWERCASE_ID_0);
		}
		{
			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
			}
			this_LOWERCASE_ID_2=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_2);
			}
			{
				newLeafNode(this_LOWERCASE_ID_2, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQuotablePathName
entryRuleQuotablePathName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQuotablePathNameRule()); }
	iv_ruleQuotablePathName=ruleQuotablePathName
	{ $current=$iv_ruleQuotablePathName.current.getText(); }
	EOF;

// Rule QuotablePathName
ruleQuotablePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_0);
			}
			{
				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getQuotablePathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_QUOTED_LOWERCASE_ID_1=RULE_QUOTED_LOWERCASE_ID
			{
				$current.merge(this_QUOTED_LOWERCASE_ID_1);
			}
			{
				newLeafNode(this_QUOTED_LOWERCASE_ID_1, grammarAccess.getQuotablePathNameAccess().getQUOTED_LOWERCASE_IDTerminalRuleCall_0_1());
			}
		)
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQuotablePathNameAccess().getFullStopKeyword_1_0());
			}
			(
				this_LOWERCASE_ID_3=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_3);
				}
				{
					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getQuotablePathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_QUOTED_LOWERCASE_ID_4=RULE_QUOTED_LOWERCASE_ID
				{
					$current.merge(this_QUOTED_LOWERCASE_ID_4);
				}
				{
					newLeafNode(this_QUOTED_LOWERCASE_ID_4, grammarAccess.getQuotablePathNameAccess().getQUOTED_LOWERCASE_IDTerminalRuleCall_1_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleArgPathName
entryRuleArgPathName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArgPathNameRule()); }
	iv_ruleArgPathName=ruleArgPathName
	{ $current=$iv_ruleArgPathName.current.getText(); }
	EOF;

// Rule ArgPathName
ruleArgPathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ARGVALUE_0=RULE_ARGVALUE
			{
				$current.merge(this_ARGVALUE_0);
			}
			{
				newLeafNode(this_ARGVALUE_0, grammarAccess.getArgPathNameAccess().getARGVALUETerminalRuleCall_0_0());
			}
			    |
			this_LOWERCASE_ID_1=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_1);
			}
			{
				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getArgPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
			}
		)
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArgPathNameAccess().getFullStopKeyword_1_0());
			}
			this_LOWERCASE_ID_3=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_3);
			}
			{
				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getArgPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_0);
			}
			{
				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_UPPERCASE_ID_1=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_1);
			}
			{
				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
			}
		)
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
				}
			)
			(
				this_LOWERCASE_ID_4=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_4);
				}
				{
					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_UPPERCASE_ID_5=RULE_UPPERCASE_ID
				{
					$current.merge(this_UPPERCASE_ID_5);
				}
				{
					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleObservableSemantics
entryRuleObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getObservableSemanticsRule()); }
	iv_ruleObservableSemantics=ruleObservableSemantics
	{ $current=$iv_ruleObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ObservableSemantics
ruleObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.integratedmodelling.kactors.Kactors.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									otherlv_2='in'
									{
										newLeafNode(otherlv_2, grammarAccess.getObservableSemanticsAccess().getInKeyword_1_0_0_0());
									}
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_1_0_0_1_0_0());
												}
												lv_unit_3_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_3_0,
														"org.integratedmodelling.kactors.Kactors.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_0_0_1_1_0());
												}
												lv_currency_4_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_4_0,
														"org.integratedmodelling.kactors.Kactors.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									otherlv_5='per'
									{
										newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getPerKeyword_1_0_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_1_0_1_1_0());
											}
											lv_unit_6_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_6_0,
													"org.integratedmodelling.kactors.Kactors.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_1_0_0());
										}
										lv_valueOperators_7_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_7_0,
												"org.integratedmodelling.kactors.Kactors.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_1_1_0());
										}
										lv_valueOperators_8_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_8_0,
												"org.integratedmodelling.kactors.Kactors.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>((
									(
										lv_optional_9_0='optional'
										{
											newLeafNode(lv_optional_9_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_1_2_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getObservableSemanticsRule());
											}
											setWithLastConsumed($current, "optional", lv_optional_9_0 != null, "optional");
										}
									)
								)
								    |
								otherlv_10='required'
								{
									newLeafNode(otherlv_10, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_1_2_1());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_1_3_0_0());
										}
										lv_from_11_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_11_0,
												"org.integratedmodelling.kactors.Kactors.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_12='to'
								{
									newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getToKeyword_1_3_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_1_3_2_0());
										}
										lv_to_13_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_13_0,
												"org.integratedmodelling.kactors.Kactors.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_14='named'
								{
									newLeafNode(otherlv_14, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_1_4_0());
								}
								(
									(
										(
											lv_name_15_1=RULE_LOWERCASE_ID
											{
												newLeafNode(lv_name_15_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_4_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_15_1,
													"org.integratedmodelling.kactors.Kactors.LOWERCASE_ID");
											}
											    |
											lv_name_15_2=RULE_STRING
											{
												newLeafNode(lv_name_15_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_1_4_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_15_2,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleValueOperator
entryRuleValueOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueOperatorRule()); }
	iv_ruleValueOperator=ruleValueOperator
	{ $current=$iv_ruleValueOperator.current; }
	EOF;

// Rule ValueOperator
ruleValueOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
						}
						lv_modifier_0_0=ruleVALUE_OPERATOR
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"modifier",
								lv_modifier_0_0,
								"org.integratedmodelling.kactors.Kactors.VALUE_OPERATOR");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							lv_downTo_1_0='down'
							{
								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getValueOperatorRule());
								}
								setWithLastConsumed($current, "downTo", lv_downTo_1_0, "down");
							}
						)
					)
					otherlv_2='to'
					{
						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
						}
						lv_comparisonValue_3_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"comparisonValue",
								lv_comparisonValue_3_0,
								"org.integratedmodelling.kactors.Kactors.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
						}
						lv_comparisonQuantity_4_0=ruleQuantity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"comparisonQuantity",
								lv_comparisonQuantity_4_0,
								"org.integratedmodelling.kactors.Kactors.Quantity");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0_0());
							}
							lv_comparisonConcept_5_0=ruleConceptDeclaration
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
								}
								add(
									$current,
									"comparisonConcept",
									lv_comparisonConcept_5_0,
									"org.integratedmodelling.kactors.Kactors.ConceptDeclaration");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getCommaKeyword_0_1_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_1_1_0());
								}
								lv_comparisonConcept_7_0=ruleConceptDeclaration
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
									}
									add(
										$current,
										"comparisonConcept",
										lv_comparisonConcept_7_0,
										"org.integratedmodelling.kactors.Kactors.ConceptDeclaration");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
				    |
				(
					otherlv_8='('
					{
						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
							}
							lv_comparisonObservable_9_0=ruleObservableSemantics
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
								}
								set(
									$current,
									"comparisonObservable",
									lv_comparisonObservable_9_0,
									"org.integratedmodelling.kactors.Kactors.ObservableSemantics");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_10=')'
					{
						newLeafNode(otherlv_10, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
					}
				)
			)
		)
		    |
		(
			(
				lv_total_11_0='total'
				{
					newLeafNode(lv_total_11_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "total", lv_total_11_0, "total");
				}
			)
		)
		    |
		(
			(
				lv_averaged_12_0='averaged'
				{
					newLeafNode(lv_averaged_12_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "averaged", lv_averaged_12_0, "averaged");
				}
			)
		)
		    |
		(
			(
				lv_summed_13_0='summed'
				{
					newLeafNode(lv_summed_13_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "summed", lv_summed_13_0, "summed");
				}
			)
		)
	)
;

// Entry rule entryRuleConceptDeclaration
entryRuleConceptDeclaration returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getConceptDeclarationRule()); }
	iv_ruleConceptDeclaration=ruleConceptDeclaration
	{ $current=$iv_ruleConceptDeclaration.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConceptDeclaration
ruleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
				}
				lv_main_0_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_0_0,
						"org.integratedmodelling.kactors.Kactors.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='of'
								{
									newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0());
								}
								(
									(
										(
											lv_distributedOfInherency_3_0='each'
											{
												newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedOfInherency", lv_distributedOfInherency_3_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
											}
											lv_inherency_4_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"inherency",
													lv_inherency_4_0,
													"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_5='for'
								{
									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
								}
								(
									(
										(
											lv_distributedForInherency_6_0='each'
											{
												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedForInherency", lv_distributedForInherency_6_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
											}
											lv_motivation_7_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"motivation",
													lv_motivation_7_0,
													"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_8='with'
								{
									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
										}
										lv_compresent_9_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"compresent",
												lv_compresent_9_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_10='caused'
								{
									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
								}
								otherlv_11='by'
								{
									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
										}
										lv_causant_12_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"causant",
												lv_causant_12_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_13='adjacent'
								{
									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
								}
								otherlv_14='to'
								{
									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
										}
										lv_adjacent_15_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"adjacent",
												lv_adjacent_15_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
					}
								({true}?=>(otherlv_16='contained'
								{
									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
								}
								otherlv_17='in'
								{
									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
										}
										lv_container_18_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"container",
												lv_container_18_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
					}
								({true}?=>(otherlv_19='containing'
								{
									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
										}
										lv_contained_20_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"contained",
												lv_contained_20_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
					}
								({true}?=>(otherlv_21='causing'
								{
									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
										}
										lv_caused_22_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"caused",
												lv_caused_22_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
					}
								({true}?=>(otherlv_23='during'
								{
									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
								}
								(
									(
										(
											lv_distributedTemporalInherency_24_0='each'
											{
												newLeafNode(lv_distributedTemporalInherency_24_0, grammarAccess.getConceptDeclarationAccess().getDistributedTemporalInherencyEachKeyword_1_8_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedTemporalInherency", lv_distributedTemporalInherency_24_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
											}
											lv_during_25_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"during",
													lv_during_25_0,
													"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
					}
								({true}?=>(otherlv_26='within'
								{
									newLeafNode(otherlv_26, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
								}
								(
									(
										(
											lv_distributedWithinInherency_27_0='each'
											{
												newLeafNode(lv_distributedWithinInherency_27_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedWithinInherency", lv_distributedWithinInherency_27_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
											}
											lv_context_28_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"context",
													lv_context_28_0,
													"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
					}
								({true}?=>(otherlv_29='linking'
								{
									newLeafNode(otherlv_29, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
										}
										lv_relationshipSource_30_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"relationshipSource",
												lv_relationshipSource_30_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_31='to'
								{
									newLeafNode(otherlv_31, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
										}
										lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"relationshipTarget",
												lv_relationshipTarget_32_0,
												"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
				}
		)?
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleVALUE_OPERATOR
entryRuleVALUE_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); }
	iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR
	{ $current=$iv_ruleVALUE_OPERATOR.current.getText(); }
	EOF;

// Rule VALUE_OPERATOR
ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
		}
		    |
		kw='where'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
		}
		    |
		kw='without'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_7());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_8());
		}
		    |
		kw='plus'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_9());
		}
		    |
		kw='minus'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_10());
		}
		    |
		kw='times'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_11());
		}
		    |
		kw='over'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_12());
		}
		    |
		kw='by'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_13());
		}
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_negated_0_1='not'
						{
							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "negated", lv_negated_0_1 != null, null);
						}
						    |
						lv_negated_0_2='no'
						{
							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "negated", lv_negated_0_2 != null, null);
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getNameNamespaceIdParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleNamespaceId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.integratedmodelling.kactors.Kactors.NamespaceId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_authConcept_2_0='identified'
						{
							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "authConcept", lv_authConcept_2_0 != null, "identified");
						}
					)
				)
				otherlv_3='as'
				{
					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
				}
				(
					(
						(
							(
								lv_stringIdentifier_4_1=RULE_ID
								{
									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_1,
										"org.eclipse.xtext.common.Terminals.ID");
								}
								    |
								lv_stringIdentifier_4_2=RULE_STRING
								{
									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_2,
										"org.eclipse.xtext.common.Terminals.STRING");
								}
								    |
								lv_stringIdentifier_4_3=RULE_UPPERCASE_ID
								{
									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_3,
										"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
								}
								    |
								lv_stringIdentifier_4_4=RULE_CAMELCASE_ID
								{
									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_4,
										"org.integratedmodelling.kactors.Kactors.CAMELCASE_ID");
								}
							)
						)
					)
					    |
					(
						(
							lv_intIdentifier_5_0=RULE_INT
							{
								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"intIdentifier",
									lv_intIdentifier_5_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)
				otherlv_6='by'
				{
					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
				}
				(
					(
						(
							lv_authority_7_1=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_1,
									"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
							}
							    |
							lv_authority_7_2=RULE_UPPERCASE_PATH
							{
								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_2,
									"org.integratedmodelling.kactors.Kactors.UPPERCASE_PATH");
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_presence_8_0='presence'
					{
						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "presence", lv_presence_8_0 != null, "presence");
					}
				)
			)
			otherlv_9='of'
			{
				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
					}
					lv_concept_10_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_10_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_count_11_0='count'
					{
						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "count", lv_count_11_0 != null, "count");
					}
				)
			)
			otherlv_12='of'
			{
				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
					}
					lv_concept_13_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_13_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_distance_14_0='distance'
					{
						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "distance", lv_distance_14_0 != null, "distance");
					}
				)
			)
			(
				otherlv_15='to'
				{
					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
				}
				    |
				otherlv_16='from'
				{
					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
					}
					lv_concept_17_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_17_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_probability_18_0='probability'
					{
						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "probability", lv_probability_18_0 != null, "probability");
					}
				)
			)
			otherlv_19='of'
			{
				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
					}
					lv_concept_20_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_20_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_assessment_21_0='assessment'
					{
						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "assessment", lv_assessment_21_0 != null, "assessment");
					}
				)
			)
			otherlv_22='of'
			{
				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
					}
					lv_concept_23_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_23_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					otherlv_24='change'
					{
						newLeafNode(otherlv_24, grammarAccess.getConceptAccess().getChangeKeyword_6_0_0_0());
					}
					(
						(
							(
								lv_change_25_0='in'
								{
									newLeafNode(lv_change_25_0, grammarAccess.getConceptAccess().getChangeInKeyword_6_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed($current, "change", lv_change_25_0 != null, "in");
								}
							)
						)
						    |
						(
							(
								(
									lv_rate_26_0='rate'
									{
										newLeafNode(lv_rate_26_0, grammarAccess.getConceptAccess().getRateRateKeyword_6_0_0_1_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptRule());
										}
										setWithLastConsumed($current, "rate", lv_rate_26_0 != null, "rate");
									}
								)
							)
							otherlv_27='of'
							{
								newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getOfKeyword_6_0_0_1_1_1());
							}
						)
					)
				)
				    |
				(
					(
						lv_change_28_0='changed'
						{
							newLeafNode(lv_change_28_0, grammarAccess.getConceptAccess().getChangeChangedKeyword_6_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "change", lv_change_28_0 != null, "changed");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_1_0());
					}
					lv_concept_29_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_29_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_uncertainty_30_0='uncertainty'
					{
						newLeafNode(lv_uncertainty_30_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "uncertainty", lv_uncertainty_30_0 != null, "uncertainty");
					}
				)
			)
			otherlv_31='of'
			{
				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
					}
					lv_concept_32_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_32_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_magnitude_33_0='magnitude'
					{
						newLeafNode(lv_magnitude_33_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "magnitude", lv_magnitude_33_0 != null, "magnitude");
					}
				)
			)
			otherlv_34='of'
			{
				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
					}
					lv_concept_35_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_35_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_level_36_0='level'
					{
						newLeafNode(lv_level_36_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "level", lv_level_36_0 != null, "level");
					}
				)
			)
			otherlv_37='of'
			{
				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
					}
					lv_concept_38_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_38_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_type_39_0='type'
					{
						newLeafNode(lv_type_39_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "type", lv_type_39_0 != null, "type");
					}
				)
			)
			otherlv_40='of'
			{
				newLeafNode(otherlv_40, grammarAccess.getConceptAccess().getOfKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
					}
					lv_concept_41_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_41_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_observability_42_0='observability'
					{
						newLeafNode(lv_observability_42_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "observability", lv_observability_42_0 != null, "observability");
					}
				)
			)
			otherlv_43='of'
			{
				newLeafNode(otherlv_43, grammarAccess.getConceptAccess().getOfKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
					}
					lv_concept_44_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_44_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_proportion_45_0='proportion'
					{
						newLeafNode(lv_proportion_45_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_12_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "proportion", lv_proportion_45_0 != null, "proportion");
					}
				)
			)
			otherlv_46='of'
			{
				newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getOfKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
					}
					lv_concept_47_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_47_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('in')=>
					otherlv_48='in'
					{
						newLeafNode(otherlv_48, grammarAccess.getConceptAccess().getInKeyword_12_3_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
						}
						lv_other_49_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_49_0,
								"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_percentage_50_0='percentage'
					{
						newLeafNode(lv_percentage_50_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_13_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "percentage", lv_percentage_50_0 != null, "percentage");
					}
				)
			)
			otherlv_51='of'
			{
				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getOfKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
					}
					lv_concept_52_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_52_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('in')=>
					otherlv_53='in'
					{
						newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
						}
						lv_other_54_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_54_0,
								"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_ratio_55_0='ratio'
					{
						newLeafNode(lv_ratio_55_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_14_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "ratio", lv_ratio_55_0 != null, "ratio");
					}
				)
			)
			otherlv_56='of'
			{
				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
					}
					lv_concept_57_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_57_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_58='to'
				{
					newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getToKeyword_14_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_0());
					}
					lv_other_59_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"other",
							lv_other_59_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_monetary_60_0='monetary'
					{
						newLeafNode(lv_monetary_60_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_15_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "monetary", lv_monetary_60_0 != null, "monetary");
					}
				)
			)?
			(
				(
					lv_value_61_0='value'
					{
						newLeafNode(lv_value_61_0, grammarAccess.getConceptAccess().getValueValueKeyword_15_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "value", lv_value_61_0 != null, "value");
					}
				)
			)
			otherlv_62='of'
			{
				newLeafNode(otherlv_62, grammarAccess.getConceptAccess().getOfKeyword_15_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_3_0());
					}
					lv_concept_63_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_63_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('over')=>
					otherlv_64='over'
					{
						newLeafNode(otherlv_64, grammarAccess.getConceptAccess().getOverKeyword_15_4_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
						}
						lv_other_65_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_65_0,
								"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_occurrence_66_0='occurrence'
					{
						newLeafNode(lv_occurrence_66_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_16_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "occurrence", lv_occurrence_66_0 != null, "occurrence");
					}
				)
			)
			otherlv_67='of'
			{
				newLeafNode(otherlv_67, grammarAccess.getConceptAccess().getOfKeyword_16_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_2_0());
					}
					lv_concept_68_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_68_0,
							"org.integratedmodelling.kactors.Kactors.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_authConcept_69_0='identity'
					{
						newLeafNode(lv_authConcept_69_0, grammarAccess.getConceptAccess().getAuthConceptIdentityKeyword_17_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "authConcept", lv_authConcept_69_0 != null, "identity");
					}
				)
			)
			(
				(
					(
						(
							lv_stringIdentifier_70_1=RULE_ID
							{
								newLeafNode(lv_stringIdentifier_70_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_17_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"stringIdentifier",
									lv_stringIdentifier_70_1,
									"org.eclipse.xtext.common.Terminals.ID");
							}
							    |
							lv_stringIdentifier_70_2=RULE_STRING
							{
								newLeafNode(lv_stringIdentifier_70_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_17_1_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"stringIdentifier",
									lv_stringIdentifier_70_2,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
							    |
							lv_stringIdentifier_70_3=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_stringIdentifier_70_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_17_1_0_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"stringIdentifier",
									lv_stringIdentifier_70_3,
									"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
							}
							    |
							lv_stringIdentifier_70_4=RULE_CAMELCASE_ID
							{
								newLeafNode(lv_stringIdentifier_70_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_17_1_0_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"stringIdentifier",
									lv_stringIdentifier_70_4,
									"org.integratedmodelling.kactors.Kactors.CAMELCASE_ID");
							}
						)
					)
				)
				    |
				(
					(
						lv_intIdentifier_71_0=RULE_INT
						{
							newLeafNode(lv_intIdentifier_71_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_17_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed(
								$current,
								"intIdentifier",
								lv_intIdentifier_71_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			otherlv_72='by'
			{
				newLeafNode(otherlv_72, grammarAccess.getConceptAccess().getByKeyword_17_2());
			}
			(
				(
					(
						lv_authority_73_1=RULE_UPPERCASE_ID
						{
							newLeafNode(lv_authority_73_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_17_3_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed(
								$current,
								"authority",
								lv_authority_73_1,
								"org.integratedmodelling.kactors.Kactors.UPPERCASE_ID");
						}
						    |
						lv_authority_73_2=RULE_UPPERCASE_PATH
						{
							newLeafNode(lv_authority_73_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_17_3_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed(
								$current,
								"authority",
								lv_authority_73_2,
								"org.integratedmodelling.kactors.Kactors.UPPERCASE_PATH");
						}
					)
				)
			)
		)
		    |
		(
			otherlv_74='('
			{
				newLeafNode(otherlv_74, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_18_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_18_1_0());
					}
					lv_declaration_75_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"declaration",
							lv_declaration_75_0,
							"org.integratedmodelling.kactors.Kactors.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_76=')'
			{
				newLeafNode(otherlv_76, grammarAccess.getConceptAccess().getRightParenthesisKeyword_18_2());
			}
		)
	)
;

// Entry rule entryRuleNamespaceId
entryRuleNamespaceId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceIdRule()); }
	iv_ruleNamespaceId=ruleNamespaceId
	{ $current=$iv_ruleNamespaceId.current.getText(); }
	EOF;

// Rule NamespaceId
ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamespaceIdAccess().getQuotablePathNameParserRuleCall_0());
		}
		this_QuotablePathName_0=ruleQuotablePathName
		{
			$current.merge(this_QuotablePathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
		}
		this_CAMELCASE_ID_2=RULE_CAMELCASE_ID
		{
			$current.merge(this_CAMELCASE_ID_2);
		}
		{
			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
	}
	this_Term_0=ruleTerm
	{
		$current = $this_Term_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					lv_operators_1_0='or'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.integratedmodelling.kactors.Kactors.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
		}
		this_ConceptDeclaration_0=ruleConceptDeclaration
		{
			$current = $this_ConceptDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						lv_operators_1_1='and'
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFactorRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='follows'
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFactorRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.integratedmodelling.kactors.Kactors.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSimpleConceptDeclaration
entryRuleSimpleConceptDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); }
	iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration
	{ $current=$iv_ruleSimpleConceptDeclaration.current; }
	EOF;

// Rule SimpleConceptDeclaration
ruleSimpleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
				}
				lv_main_1_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_1_0,
						"org.integratedmodelling.kactors.Kactors.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionNumberRule()); }
	iv_ruleVersionNumber=ruleVersionNumber
	{ $current=$iv_ruleVersionNumber.current.getText(); }
	EOF;

// Rule VersionNumber
ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
			}
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
				}
				this_INT_4=RULE_INT
				{
					$current.merge(this_INT_4);
				}
				{
					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
				}
			)?
		)?
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
			}
		)?
		(
			this_LOWERCASE_ID_6=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_6);
			}
			{
				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
			}
			    |
			this_UPPERCASE_ID_7=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_7);
			}
			{
				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
			}
		)?
	)
;

// Rule UnitOp
ruleUnitOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='/'
			{
				$current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='^'
			{
				$current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_KEY : (':'|'!') 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_TAG : '#' 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_LOCALIZED_STRING_REFERENCE : '#' 'A'..'Z' ('A'..'Z'|'0'..'9'|'_')*;

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z'|'_')*;

RULE_UPPERCASE_PATH : RULE_UPPERCASE_ID ('.' RULE_UPPERCASE_ID)*;

RULE_CAMELCASE_ID : 'A'..'Z' ('A'..'z'|'0'..'9')*;

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_LOCALE : 'a'..'z' 'a'..'z' ('-' 'A'..'Z' 'A'..'Z')*;

RULE_BACKCASE_ID : 'a'..'z' ('A'..'z'|'0'..'9')*;

RULE_QUOTED_LOWERCASE_ID : '`' 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_LOWERCASE_ID_DASH : 'a'..'z' ('a'..'z'|'0'..'9'|'_'|'-')*;

RULE_ARGVALUE : '$' ('$'|('0'..'9')*);

RULE_EXPR : '[' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|']'|'\\')|~(('\\'|']')))* ']';

RULE_EMBEDDEDTEXT : '%%%' ' '? '-'* ('\r'|'\n') ( options {greedy=false;} : . )*'%%%' ' '? '-'*;

RULE_REGEXP : '%' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'%'|'\\')|~(('\\'|'%')))* '%';

RULE_SEPARATOR : '---' '-'*;

RULE_ANNOTATION_ID : '@' RULE_LOWERCASE_ID;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
