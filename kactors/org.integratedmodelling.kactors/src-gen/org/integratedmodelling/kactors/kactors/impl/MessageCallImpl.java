/**
 * generated by Xtext 2.33.0
 */
package org.integratedmodelling.kactors.kactors.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kactors.kactors.Actions;
import org.integratedmodelling.kactors.kactors.KactorsPackage;
import org.integratedmodelling.kactors.kactors.MessageCall;
import org.integratedmodelling.kactors.kactors.ParameterList;
import org.integratedmodelling.kactors.kactors.StatementGroup;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.MessageCallImpl#getMethodCalls <em>Method Calls</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.MessageCallImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.MessageCallImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.MessageCallImpl#getGroup <em>Group</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.MessageCallImpl#getActions <em>Actions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageCallImpl extends MinimalEObjectImpl.Container implements MessageCall
{
  /**
   * The cached value of the '{@link #getMethodCalls() <em>Method Calls</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodCalls()
   * @generated
   * @ordered
   */
  protected EList<MessageCall> methodCalls;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected ParameterList parameters;

  /**
   * The cached value of the '{@link #getGroup() <em>Group</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroup()
   * @generated
   * @ordered
   */
  protected StatementGroup group;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected Actions actions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KactorsPackage.Literals.MESSAGE_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MessageCall> getMethodCalls()
  {
    if (methodCalls == null)
    {
      methodCalls = new EObjectContainmentEList<MessageCall>(MessageCall.class, this, KactorsPackage.MESSAGE_CALL__METHOD_CALLS);
    }
    return methodCalls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterList getParameters()
  {
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameters(ParameterList newParameters, NotificationChain msgs)
  {
    ParameterList oldParameters = parameters;
    parameters = newParameters;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__PARAMETERS, oldParameters, newParameters);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameters(ParameterList newParameters)
  {
    if (newParameters != parameters)
    {
      NotificationChain msgs = null;
      if (parameters != null)
        msgs = ((InternalEObject)parameters).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__PARAMETERS, null, msgs);
      if (newParameters != null)
        msgs = ((InternalEObject)newParameters).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__PARAMETERS, null, msgs);
      msgs = basicSetParameters(newParameters, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__PARAMETERS, newParameters, newParameters));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StatementGroup getGroup()
  {
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGroup(StatementGroup newGroup, NotificationChain msgs)
  {
    StatementGroup oldGroup = group;
    group = newGroup;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__GROUP, oldGroup, newGroup);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGroup(StatementGroup newGroup)
  {
    if (newGroup != group)
    {
      NotificationChain msgs = null;
      if (group != null)
        msgs = ((InternalEObject)group).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__GROUP, null, msgs);
      if (newGroup != null)
        msgs = ((InternalEObject)newGroup).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__GROUP, null, msgs);
      msgs = basicSetGroup(newGroup, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__GROUP, newGroup, newGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Actions getActions()
  {
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActions(Actions newActions, NotificationChain msgs)
  {
    Actions oldActions = actions;
    actions = newActions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__ACTIONS, oldActions, newActions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActions(Actions newActions)
  {
    if (newActions != actions)
    {
      NotificationChain msgs = null;
      if (actions != null)
        msgs = ((InternalEObject)actions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__ACTIONS, null, msgs);
      if (newActions != null)
        msgs = ((InternalEObject)newActions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.MESSAGE_CALL__ACTIONS, null, msgs);
      msgs = basicSetActions(newActions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.MESSAGE_CALL__ACTIONS, newActions, newActions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KactorsPackage.MESSAGE_CALL__METHOD_CALLS:
        return ((InternalEList<?>)getMethodCalls()).basicRemove(otherEnd, msgs);
      case KactorsPackage.MESSAGE_CALL__PARAMETERS:
        return basicSetParameters(null, msgs);
      case KactorsPackage.MESSAGE_CALL__GROUP:
        return basicSetGroup(null, msgs);
      case KactorsPackage.MESSAGE_CALL__ACTIONS:
        return basicSetActions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KactorsPackage.MESSAGE_CALL__METHOD_CALLS:
        return getMethodCalls();
      case KactorsPackage.MESSAGE_CALL__NAME:
        return getName();
      case KactorsPackage.MESSAGE_CALL__PARAMETERS:
        return getParameters();
      case KactorsPackage.MESSAGE_CALL__GROUP:
        return getGroup();
      case KactorsPackage.MESSAGE_CALL__ACTIONS:
        return getActions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KactorsPackage.MESSAGE_CALL__METHOD_CALLS:
        getMethodCalls().clear();
        getMethodCalls().addAll((Collection<? extends MessageCall>)newValue);
        return;
      case KactorsPackage.MESSAGE_CALL__NAME:
        setName((String)newValue);
        return;
      case KactorsPackage.MESSAGE_CALL__PARAMETERS:
        setParameters((ParameterList)newValue);
        return;
      case KactorsPackage.MESSAGE_CALL__GROUP:
        setGroup((StatementGroup)newValue);
        return;
      case KactorsPackage.MESSAGE_CALL__ACTIONS:
        setActions((Actions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.MESSAGE_CALL__METHOD_CALLS:
        getMethodCalls().clear();
        return;
      case KactorsPackage.MESSAGE_CALL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case KactorsPackage.MESSAGE_CALL__PARAMETERS:
        setParameters((ParameterList)null);
        return;
      case KactorsPackage.MESSAGE_CALL__GROUP:
        setGroup((StatementGroup)null);
        return;
      case KactorsPackage.MESSAGE_CALL__ACTIONS:
        setActions((Actions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.MESSAGE_CALL__METHOD_CALLS:
        return methodCalls != null && !methodCalls.isEmpty();
      case KactorsPackage.MESSAGE_CALL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case KactorsPackage.MESSAGE_CALL__PARAMETERS:
        return parameters != null;
      case KactorsPackage.MESSAGE_CALL__GROUP:
        return group != null;
      case KactorsPackage.MESSAGE_CALL__ACTIONS:
        return actions != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //MessageCallImpl
