/**
 * generated by Xtext 2.27.0
 */
package org.integratedmodelling.kactors.kactors.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kactors.kactors.ElseIfStatementBody;
import org.integratedmodelling.kactors.kactors.IfStatement;
import org.integratedmodelling.kactors.kactors.KactorsPackage;
import org.integratedmodelling.kactors.kactors.Literal;
import org.integratedmodelling.kactors.kactors.StatementBody;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getLiteral <em>Literal</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getBody <em>Body</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getElseIfBody <em>Else If Body</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.IfStatementImpl#getElseCall <em>Else Call</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfStatementImpl extends MinimalEObjectImpl.Container implements IfStatement
{
  /**
   * The cached value of the '{@link #getLiteral() <em>Literal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiteral()
   * @generated
   * @ordered
   */
  protected Literal literal;

  /**
   * The default value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected static final String EXPRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected String expression = EXPRESSION_EDEFAULT;

  /**
   * The default value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected static final String VARIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected String variable = VARIABLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected StatementBody body;

  /**
   * The cached value of the '{@link #getElseIfBody() <em>Else If Body</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseIfBody()
   * @generated
   * @ordered
   */
  protected EList<ElseIfStatementBody> elseIfBody;

  /**
   * The cached value of the '{@link #getElseCall() <em>Else Call</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseCall()
   * @generated
   * @ordered
   */
  protected StatementBody elseCall;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KactorsPackage.Literals.IF_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Literal getLiteral()
  {
    return literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLiteral(Literal newLiteral, NotificationChain msgs)
  {
    Literal oldLiteral = literal;
    literal = newLiteral;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__LITERAL, oldLiteral, newLiteral);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLiteral(Literal newLiteral)
  {
    if (newLiteral != literal)
    {
      NotificationChain msgs = null;
      if (literal != null)
        msgs = ((InternalEObject)literal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__LITERAL, null, msgs);
      if (newLiteral != null)
        msgs = ((InternalEObject)newLiteral).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__LITERAL, null, msgs);
      msgs = basicSetLiteral(newLiteral, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__LITERAL, newLiteral, newLiteral));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpression(String newExpression)
  {
    String oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__EXPRESSION, oldExpression, expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable(String newVariable)
  {
    String oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StatementBody getBody()
  {
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBody(StatementBody newBody, NotificationChain msgs)
  {
    StatementBody oldBody = body;
    body = newBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__BODY, oldBody, newBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBody(StatementBody newBody)
  {
    if (newBody != body)
    {
      NotificationChain msgs = null;
      if (body != null)
        msgs = ((InternalEObject)body).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__BODY, null, msgs);
      if (newBody != null)
        msgs = ((InternalEObject)newBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__BODY, null, msgs);
      msgs = basicSetBody(newBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__BODY, newBody, newBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ElseIfStatementBody> getElseIfBody()
  {
    if (elseIfBody == null)
    {
      elseIfBody = new EObjectContainmentEList<ElseIfStatementBody>(ElseIfStatementBody.class, this, KactorsPackage.IF_STATEMENT__ELSE_IF_BODY);
    }
    return elseIfBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StatementBody getElseCall()
  {
    return elseCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseCall(StatementBody newElseCall, NotificationChain msgs)
  {
    StatementBody oldElseCall = elseCall;
    elseCall = newElseCall;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__ELSE_CALL, oldElseCall, newElseCall);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElseCall(StatementBody newElseCall)
  {
    if (newElseCall != elseCall)
    {
      NotificationChain msgs = null;
      if (elseCall != null)
        msgs = ((InternalEObject)elseCall).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__ELSE_CALL, null, msgs);
      if (newElseCall != null)
        msgs = ((InternalEObject)newElseCall).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.IF_STATEMENT__ELSE_CALL, null, msgs);
      msgs = basicSetElseCall(newElseCall, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.IF_STATEMENT__ELSE_CALL, newElseCall, newElseCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KactorsPackage.IF_STATEMENT__LITERAL:
        return basicSetLiteral(null, msgs);
      case KactorsPackage.IF_STATEMENT__BODY:
        return basicSetBody(null, msgs);
      case KactorsPackage.IF_STATEMENT__ELSE_IF_BODY:
        return ((InternalEList<?>)getElseIfBody()).basicRemove(otherEnd, msgs);
      case KactorsPackage.IF_STATEMENT__ELSE_CALL:
        return basicSetElseCall(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KactorsPackage.IF_STATEMENT__LITERAL:
        return getLiteral();
      case KactorsPackage.IF_STATEMENT__EXPRESSION:
        return getExpression();
      case KactorsPackage.IF_STATEMENT__VARIABLE:
        return getVariable();
      case KactorsPackage.IF_STATEMENT__BODY:
        return getBody();
      case KactorsPackage.IF_STATEMENT__ELSE_IF_BODY:
        return getElseIfBody();
      case KactorsPackage.IF_STATEMENT__ELSE_CALL:
        return getElseCall();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KactorsPackage.IF_STATEMENT__LITERAL:
        setLiteral((Literal)newValue);
        return;
      case KactorsPackage.IF_STATEMENT__EXPRESSION:
        setExpression((String)newValue);
        return;
      case KactorsPackage.IF_STATEMENT__VARIABLE:
        setVariable((String)newValue);
        return;
      case KactorsPackage.IF_STATEMENT__BODY:
        setBody((StatementBody)newValue);
        return;
      case KactorsPackage.IF_STATEMENT__ELSE_IF_BODY:
        getElseIfBody().clear();
        getElseIfBody().addAll((Collection<? extends ElseIfStatementBody>)newValue);
        return;
      case KactorsPackage.IF_STATEMENT__ELSE_CALL:
        setElseCall((StatementBody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.IF_STATEMENT__LITERAL:
        setLiteral((Literal)null);
        return;
      case KactorsPackage.IF_STATEMENT__EXPRESSION:
        setExpression(EXPRESSION_EDEFAULT);
        return;
      case KactorsPackage.IF_STATEMENT__VARIABLE:
        setVariable(VARIABLE_EDEFAULT);
        return;
      case KactorsPackage.IF_STATEMENT__BODY:
        setBody((StatementBody)null);
        return;
      case KactorsPackage.IF_STATEMENT__ELSE_IF_BODY:
        getElseIfBody().clear();
        return;
      case KactorsPackage.IF_STATEMENT__ELSE_CALL:
        setElseCall((StatementBody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.IF_STATEMENT__LITERAL:
        return literal != null;
      case KactorsPackage.IF_STATEMENT__EXPRESSION:
        return EXPRESSION_EDEFAULT == null ? expression != null : !EXPRESSION_EDEFAULT.equals(expression);
      case KactorsPackage.IF_STATEMENT__VARIABLE:
        return VARIABLE_EDEFAULT == null ? variable != null : !VARIABLE_EDEFAULT.equals(variable);
      case KactorsPackage.IF_STATEMENT__BODY:
        return body != null;
      case KactorsPackage.IF_STATEMENT__ELSE_IF_BODY:
        return elseIfBody != null && !elseIfBody.isEmpty();
      case KactorsPackage.IF_STATEMENT__ELSE_CALL:
        return elseCall != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (expression: ");
    result.append(expression);
    result.append(", variable: ");
    result.append(variable);
    result.append(')');
    return result.toString();
  }

} //IfStatementImpl
