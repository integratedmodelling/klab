/**
 * generated by Xtext 2.9.1
 */
package org.integratedmodelling.kim;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import org.eclipse.xtext.resource.IContainer;
import org.eclipse.xtext.resource.containers.StateBasedContainerManager;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.impl.SimpleLocalScopeProvider;
import org.integratedmodelling.kim.scoping.KimGlobalScopeProvider;
import org.integratedmodelling.kim.scoping.KimScopeProvider;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class KimRuntimeModule extends AbstractKimRuntimeModule {
  @Override
  public void configureIScopeProviderDelegate(final Binder binder) {
    binder.<IScopeProvider>bind(IScopeProvider.class).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(SimpleLocalScopeProvider.class);
  }

  @Override
  public Class<? extends IScopeProvider> bindIScopeProvider() {
    return KimScopeProvider.class;
  }

  @Override
  public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
    return KimGlobalScopeProvider.class;
  }

  @Override
  public Class<? extends IContainer.Manager> bindIContainer$Manager() {
    return StateBasedContainerManager.class;
  }

  @Override
  public void configure(final Binder binder) {
    super.configure(binder);
  }
}
