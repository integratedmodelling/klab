module org.integratedmodelling.kim.GenerateKim

import org.eclipse.xtext.generator.*
import org.eclipse.xtext.generator.scoping.*
import org.eclipse.xtext.xtext.generator.ui.refactoring.RefactorElementNameFragment2
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.integratedmodelling.kim"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * Copyright (C) 2009-2016 integratedmodelling.org\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.integratedmodelling.kim.Kim"
			fileExtensions = "k,kim"
			parserGenerator = {
				options = {
					backtrack = true
				}
			}
			serializer = {
				generateStub = true
			}
			validator = {
				generateStub = true
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			// fragment = refactoring.RefactorElementNameFragment {}
//			fragment = web.WebIntegrationFragment {
//				framework = "Ace"
//			}

			//			renameRefactoring = RefactorElementNameFragment2 auto-inject {}
			//			labelProvider = ui.labeling.LabelProviderFragment2 auto-inject {}
			//			outline = ui.outline.OutlineTreeProviderFragment2 auto-inject {}
			quickOutline = ui.outline.QuickOutlineFragment2 auto-inject {}
			//			quickFixProvider = ui.quickfix.QuickfixProviderFragment2 auto-inject {}
			//			contentAssist = ui.contentAssist.ContentAssistFragment2 auto-inject {}
			//			compareEditor = auto-inject {}
			scopeProvider = scoping.ImportNamespacesScopingFragment2 auto-inject {}
			//			qualifiedNamesProvider = exporting.QualifiedNamesFragment2 auto-inject {}
			//			builder = builder.BuilderIntegrationFragment2 auto-inject {}
			//			generator = generator.GeneratorFragment2 auto-inject {}
			formatter = formatting.Formatter2Fragment2 auto-inject {
				generateStub = true
			}
		}

	}
}
