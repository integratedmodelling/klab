/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.33.0
 */
package org.integratedmodelling.kim.kim.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kim.kim.Action;
import org.integratedmodelling.kim.kim.ActionSpecification;
import org.integratedmodelling.kim.kim.ConceptDeclaration;
import org.integratedmodelling.kim.kim.FunctionOrID;
import org.integratedmodelling.kim.kim.KimPackage;
import org.integratedmodelling.kim.kim.List;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Action Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isIntegrated <em>Integrated</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isOver <em>Over</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isTrigger <em>Trigger</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isInitialization <em>Initialization</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isInstantiation <em>Instantiation</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isTermination <em>Termination</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#getEvent <em>Event</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isAnyContextEvent <em>Any Context Event</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#isRelatedEventContext <em>Related Event Context</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#getEventContext <em>Event Context</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ActionSpecificationImpl#getParameters <em>Parameters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActionSpecificationImpl extends MinimalEObjectImpl.Container implements ActionSpecification
{
  /**
   * The default value of the '{@link #isIntegrated() <em>Integrated</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIntegrated()
   * @generated
   * @ordered
   */
  protected static final boolean INTEGRATED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIntegrated() <em>Integrated</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIntegrated()
   * @generated
   * @ordered
   */
  protected boolean integrated = INTEGRATED_EDEFAULT;

  /**
   * The default value of the '{@link #isOver() <em>Over</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOver()
   * @generated
   * @ordered
   */
  protected static final boolean OVER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOver() <em>Over</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOver()
   * @generated
   * @ordered
   */
  protected boolean over = OVER_EDEFAULT;

  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected EList<FunctionOrID> domain;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<Action> actions;

  /**
   * The default value of the '{@link #isTrigger() <em>Trigger</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTrigger()
   * @generated
   * @ordered
   */
  protected static final boolean TRIGGER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTrigger() <em>Trigger</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTrigger()
   * @generated
   * @ordered
   */
  protected boolean trigger = TRIGGER_EDEFAULT;

  /**
   * The default value of the '{@link #isInitialization() <em>Initialization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInitialization()
   * @generated
   * @ordered
   */
  protected static final boolean INITIALIZATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isInitialization() <em>Initialization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInitialization()
   * @generated
   * @ordered
   */
  protected boolean initialization = INITIALIZATION_EDEFAULT;

  /**
   * The default value of the '{@link #isInstantiation() <em>Instantiation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiation()
   * @generated
   * @ordered
   */
  protected static final boolean INSTANTIATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isInstantiation() <em>Instantiation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiation()
   * @generated
   * @ordered
   */
  protected boolean instantiation = INSTANTIATION_EDEFAULT;

  /**
   * The default value of the '{@link #isTermination() <em>Termination</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTermination()
   * @generated
   * @ordered
   */
  protected static final boolean TERMINATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTermination() <em>Termination</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTermination()
   * @generated
   * @ordered
   */
  protected boolean termination = TERMINATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration event;

  /**
   * The default value of the '{@link #isAnyContextEvent() <em>Any Context Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAnyContextEvent()
   * @generated
   * @ordered
   */
  protected static final boolean ANY_CONTEXT_EVENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAnyContextEvent() <em>Any Context Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAnyContextEvent()
   * @generated
   * @ordered
   */
  protected boolean anyContextEvent = ANY_CONTEXT_EVENT_EDEFAULT;

  /**
   * The default value of the '{@link #isRelatedEventContext() <em>Related Event Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRelatedEventContext()
   * @generated
   * @ordered
   */
  protected static final boolean RELATED_EVENT_CONTEXT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRelatedEventContext() <em>Related Event Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRelatedEventContext()
   * @generated
   * @ordered
   */
  protected boolean relatedEventContext = RELATED_EVENT_CONTEXT_EDEFAULT;

  /**
   * The cached value of the '{@link #getEventContext() <em>Event Context</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventContext()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration eventContext;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected List parameters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActionSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KimPackage.Literals.ACTION_SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIntegrated()
  {
    return integrated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntegrated(boolean newIntegrated)
  {
    boolean oldIntegrated = integrated;
    integrated = newIntegrated;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__INTEGRATED, oldIntegrated, integrated));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isOver()
  {
    return over;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOver(boolean newOver)
  {
    boolean oldOver = over;
    over = newOver;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__OVER, oldOver, over));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionOrID> getDomain()
  {
    if (domain == null)
    {
      domain = new EObjectContainmentEList<FunctionOrID>(FunctionOrID.class, this, KimPackage.ACTION_SPECIFICATION__DOMAIN);
    }
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Action> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectContainmentEList<Action>(Action.class, this, KimPackage.ACTION_SPECIFICATION__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTrigger()
  {
    return trigger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrigger(boolean newTrigger)
  {
    boolean oldTrigger = trigger;
    trigger = newTrigger;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__TRIGGER, oldTrigger, trigger));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isInitialization()
  {
    return initialization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitialization(boolean newInitialization)
  {
    boolean oldInitialization = initialization;
    initialization = newInitialization;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__INITIALIZATION, oldInitialization, initialization));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isInstantiation()
  {
    return instantiation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInstantiation(boolean newInstantiation)
  {
    boolean oldInstantiation = instantiation;
    instantiation = newInstantiation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__INSTANTIATION, oldInstantiation, instantiation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTermination()
  {
    return termination;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTermination(boolean newTermination)
  {
    boolean oldTermination = termination;
    termination = newTermination;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__TERMINATION, oldTermination, termination));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptDeclaration getEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEvent(ConceptDeclaration newEvent, NotificationChain msgs)
  {
    ConceptDeclaration oldEvent = event;
    event = newEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__EVENT, oldEvent, newEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvent(ConceptDeclaration newEvent)
  {
    if (newEvent != event)
    {
      NotificationChain msgs = null;
      if (event != null)
        msgs = ((InternalEObject)event).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__EVENT, null, msgs);
      if (newEvent != null)
        msgs = ((InternalEObject)newEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__EVENT, null, msgs);
      msgs = basicSetEvent(newEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__EVENT, newEvent, newEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAnyContextEvent()
  {
    return anyContextEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnyContextEvent(boolean newAnyContextEvent)
  {
    boolean oldAnyContextEvent = anyContextEvent;
    anyContextEvent = newAnyContextEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__ANY_CONTEXT_EVENT, oldAnyContextEvent, anyContextEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isRelatedEventContext()
  {
    return relatedEventContext;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelatedEventContext(boolean newRelatedEventContext)
  {
    boolean oldRelatedEventContext = relatedEventContext;
    relatedEventContext = newRelatedEventContext;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__RELATED_EVENT_CONTEXT, oldRelatedEventContext, relatedEventContext));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptDeclaration getEventContext()
  {
    return eventContext;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEventContext(ConceptDeclaration newEventContext, NotificationChain msgs)
  {
    ConceptDeclaration oldEventContext = eventContext;
    eventContext = newEventContext;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT, oldEventContext, newEventContext);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEventContext(ConceptDeclaration newEventContext)
  {
    if (newEventContext != eventContext)
    {
      NotificationChain msgs = null;
      if (eventContext != null)
        msgs = ((InternalEObject)eventContext).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT, null, msgs);
      if (newEventContext != null)
        msgs = ((InternalEObject)newEventContext).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT, null, msgs);
      msgs = basicSetEventContext(newEventContext, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT, newEventContext, newEventContext));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getParameters()
  {
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameters(List newParameters, NotificationChain msgs)
  {
    List oldParameters = parameters;
    parameters = newParameters;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__PARAMETERS, oldParameters, newParameters);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameters(List newParameters)
  {
    if (newParameters != parameters)
    {
      NotificationChain msgs = null;
      if (parameters != null)
        msgs = ((InternalEObject)parameters).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__PARAMETERS, null, msgs);
      if (newParameters != null)
        msgs = ((InternalEObject)newParameters).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.ACTION_SPECIFICATION__PARAMETERS, null, msgs);
      msgs = basicSetParameters(newParameters, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.ACTION_SPECIFICATION__PARAMETERS, newParameters, newParameters));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KimPackage.ACTION_SPECIFICATION__DOMAIN:
        return ((InternalEList<?>)getDomain()).basicRemove(otherEnd, msgs);
      case KimPackage.ACTION_SPECIFICATION__ACTIONS:
        return ((InternalEList<?>)getActions()).basicRemove(otherEnd, msgs);
      case KimPackage.ACTION_SPECIFICATION__EVENT:
        return basicSetEvent(null, msgs);
      case KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT:
        return basicSetEventContext(null, msgs);
      case KimPackage.ACTION_SPECIFICATION__PARAMETERS:
        return basicSetParameters(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KimPackage.ACTION_SPECIFICATION__INTEGRATED:
        return isIntegrated();
      case KimPackage.ACTION_SPECIFICATION__OVER:
        return isOver();
      case KimPackage.ACTION_SPECIFICATION__DOMAIN:
        return getDomain();
      case KimPackage.ACTION_SPECIFICATION__ACTIONS:
        return getActions();
      case KimPackage.ACTION_SPECIFICATION__TRIGGER:
        return isTrigger();
      case KimPackage.ACTION_SPECIFICATION__INITIALIZATION:
        return isInitialization();
      case KimPackage.ACTION_SPECIFICATION__INSTANTIATION:
        return isInstantiation();
      case KimPackage.ACTION_SPECIFICATION__TERMINATION:
        return isTermination();
      case KimPackage.ACTION_SPECIFICATION__EVENT:
        return getEvent();
      case KimPackage.ACTION_SPECIFICATION__ANY_CONTEXT_EVENT:
        return isAnyContextEvent();
      case KimPackage.ACTION_SPECIFICATION__RELATED_EVENT_CONTEXT:
        return isRelatedEventContext();
      case KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT:
        return getEventContext();
      case KimPackage.ACTION_SPECIFICATION__PARAMETERS:
        return getParameters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KimPackage.ACTION_SPECIFICATION__INTEGRATED:
        setIntegrated((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__OVER:
        setOver((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__DOMAIN:
        getDomain().clear();
        getDomain().addAll((Collection<? extends FunctionOrID>)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends Action>)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__TRIGGER:
        setTrigger((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__INITIALIZATION:
        setInitialization((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__INSTANTIATION:
        setInstantiation((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__TERMINATION:
        setTermination((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__EVENT:
        setEvent((ConceptDeclaration)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__ANY_CONTEXT_EVENT:
        setAnyContextEvent((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__RELATED_EVENT_CONTEXT:
        setRelatedEventContext((Boolean)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT:
        setEventContext((ConceptDeclaration)newValue);
        return;
      case KimPackage.ACTION_SPECIFICATION__PARAMETERS:
        setParameters((List)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.ACTION_SPECIFICATION__INTEGRATED:
        setIntegrated(INTEGRATED_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__OVER:
        setOver(OVER_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__DOMAIN:
        getDomain().clear();
        return;
      case KimPackage.ACTION_SPECIFICATION__ACTIONS:
        getActions().clear();
        return;
      case KimPackage.ACTION_SPECIFICATION__TRIGGER:
        setTrigger(TRIGGER_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__INITIALIZATION:
        setInitialization(INITIALIZATION_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__INSTANTIATION:
        setInstantiation(INSTANTIATION_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__TERMINATION:
        setTermination(TERMINATION_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__EVENT:
        setEvent((ConceptDeclaration)null);
        return;
      case KimPackage.ACTION_SPECIFICATION__ANY_CONTEXT_EVENT:
        setAnyContextEvent(ANY_CONTEXT_EVENT_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__RELATED_EVENT_CONTEXT:
        setRelatedEventContext(RELATED_EVENT_CONTEXT_EDEFAULT);
        return;
      case KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT:
        setEventContext((ConceptDeclaration)null);
        return;
      case KimPackage.ACTION_SPECIFICATION__PARAMETERS:
        setParameters((List)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.ACTION_SPECIFICATION__INTEGRATED:
        return integrated != INTEGRATED_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__OVER:
        return over != OVER_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__DOMAIN:
        return domain != null && !domain.isEmpty();
      case KimPackage.ACTION_SPECIFICATION__ACTIONS:
        return actions != null && !actions.isEmpty();
      case KimPackage.ACTION_SPECIFICATION__TRIGGER:
        return trigger != TRIGGER_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__INITIALIZATION:
        return initialization != INITIALIZATION_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__INSTANTIATION:
        return instantiation != INSTANTIATION_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__TERMINATION:
        return termination != TERMINATION_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__EVENT:
        return event != null;
      case KimPackage.ACTION_SPECIFICATION__ANY_CONTEXT_EVENT:
        return anyContextEvent != ANY_CONTEXT_EVENT_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__RELATED_EVENT_CONTEXT:
        return relatedEventContext != RELATED_EVENT_CONTEXT_EDEFAULT;
      case KimPackage.ACTION_SPECIFICATION__EVENT_CONTEXT:
        return eventContext != null;
      case KimPackage.ACTION_SPECIFICATION__PARAMETERS:
        return parameters != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (integrated: ");
    result.append(integrated);
    result.append(", over: ");
    result.append(over);
    result.append(", trigger: ");
    result.append(trigger);
    result.append(", initialization: ");
    result.append(initialization);
    result.append(", instantiation: ");
    result.append(instantiation);
    result.append(", termination: ");
    result.append(termination);
    result.append(", anyContextEvent: ");
    result.append(anyContextEvent);
    result.append(", relatedEventContext: ");
    result.append(relatedEventContext);
    result.append(')');
    return result.toString();
  }

} //ActionSpecificationImpl
