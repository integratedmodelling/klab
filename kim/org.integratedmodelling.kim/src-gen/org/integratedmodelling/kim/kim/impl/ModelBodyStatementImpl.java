/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.27.0
 */
package org.integratedmodelling.kim.kim.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kim.kim.ActionSpecification;
import org.integratedmodelling.kim.kim.Classification;
import org.integratedmodelling.kim.kim.ConceptDeclaration;
import org.integratedmodelling.kim.kim.Dependency;
import org.integratedmodelling.kim.kim.KimPackage;
import org.integratedmodelling.kim.kim.LookupTableArgument;
import org.integratedmodelling.kim.kim.Map;
import org.integratedmodelling.kim.kim.ModelBodyStatement;
import org.integratedmodelling.kim.kim.ObservableSemantics;
import org.integratedmodelling.kim.kim.Table;
import org.integratedmodelling.kim.kim.Urn;
import org.integratedmodelling.kim.kim.ValueAssignment;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Body Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#isInstantiator <em>Instantiator</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getUrns <em>Urns</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getConcept <em>Concept</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getBoolean <em>Boolean</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getObservables <em>Observables</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getDocstring <em>Docstring</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getDependencies <em>Dependencies</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getContextualizers <em>Contextualizers</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#isDiscretization <em>Discretization</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getClassification <em>Classification</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getClassificationProperty <em>Classification Property</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getLookupTableArgs <em>Lookup Table Args</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getLookupTable <em>Lookup Table</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getLookupTableId <em>Lookup Table Id</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#isTwoway <em>Twoway</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getMetadata <em>Metadata</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelBodyStatementImpl extends MinimalEObjectImpl.Container implements ModelBodyStatement
{
  /**
   * The default value of the '{@link #isInstantiator() <em>Instantiator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiator()
   * @generated
   * @ordered
   */
  protected static final boolean INSTANTIATOR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isInstantiator() <em>Instantiator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiator()
   * @generated
   * @ordered
   */
  protected boolean instantiator = INSTANTIATOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getUrns() <em>Urns</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrns()
   * @generated
   * @ordered
   */
  protected EList<Urn> urns;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected org.integratedmodelling.kim.kim.Number number;

  /**
   * The cached value of the '{@link #getConcept() <em>Concept</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcept()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration concept;

  /**
   * The default value of the '{@link #getBoolean() <em>Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolean()
   * @generated
   * @ordered
   */
  protected static final String BOOLEAN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoolean() <em>Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolean()
   * @generated
   * @ordered
   */
  protected String boolean_ = BOOLEAN_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getObservables() <em>Observables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObservables()
   * @generated
   * @ordered
   */
  protected EList<ObservableSemantics> observables;

  /**
   * The default value of the '{@link #getDocstring() <em>Docstring</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocstring()
   * @generated
   * @ordered
   */
  protected static final String DOCSTRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDocstring() <em>Docstring</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocstring()
   * @generated
   * @ordered
   */
  protected String docstring = DOCSTRING_EDEFAULT;

  /**
   * The cached value of the '{@link #getDependencies() <em>Dependencies</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencies()
   * @generated
   * @ordered
   */
  protected EList<Dependency> dependencies;

  /**
   * The cached value of the '{@link #getContextualizers() <em>Contextualizers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextualizers()
   * @generated
   * @ordered
   */
  protected EList<ValueAssignment> contextualizers;

  /**
   * The default value of the '{@link #isDiscretization() <em>Discretization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscretization()
   * @generated
   * @ordered
   */
  protected static final boolean DISCRETIZATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDiscretization() <em>Discretization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscretization()
   * @generated
   * @ordered
   */
  protected boolean discretization = DISCRETIZATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getClassification() <em>Classification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassification()
   * @generated
   * @ordered
   */
  protected Classification classification;

  /**
   * The default value of the '{@link #getClassificationProperty() <em>Classification Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassificationProperty()
   * @generated
   * @ordered
   */
  protected static final String CLASSIFICATION_PROPERTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClassificationProperty() <em>Classification Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassificationProperty()
   * @generated
   * @ordered
   */
  protected String classificationProperty = CLASSIFICATION_PROPERTY_EDEFAULT;

  /**
   * The cached value of the '{@link #getLookupTableArgs() <em>Lookup Table Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLookupTableArgs()
   * @generated
   * @ordered
   */
  protected EList<LookupTableArgument> lookupTableArgs;

  /**
   * The cached value of the '{@link #getLookupTable() <em>Lookup Table</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLookupTable()
   * @generated
   * @ordered
   */
  protected Table lookupTable;

  /**
   * The default value of the '{@link #getLookupTableId() <em>Lookup Table Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLookupTableId()
   * @generated
   * @ordered
   */
  protected static final String LOOKUP_TABLE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLookupTableId() <em>Lookup Table Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLookupTableId()
   * @generated
   * @ordered
   */
  protected String lookupTableId = LOOKUP_TABLE_ID_EDEFAULT;

  /**
   * The default value of the '{@link #isTwoway() <em>Twoway</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTwoway()
   * @generated
   * @ordered
   */
  protected static final boolean TWOWAY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTwoway() <em>Twoway</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTwoway()
   * @generated
   * @ordered
   */
  protected boolean twoway = TWOWAY_EDEFAULT;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<ActionSpecification> actions;

  /**
   * The cached value of the '{@link #getMetadata() <em>Metadata</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetadata()
   * @generated
   * @ordered
   */
  protected Map metadata;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelBodyStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KimPackage.Literals.MODEL_BODY_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isInstantiator()
  {
    return instantiator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInstantiator(boolean newInstantiator)
  {
    boolean oldInstantiator = instantiator;
    instantiator = newInstantiator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR, oldInstantiator, instantiator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Urn> getUrns()
  {
    if (urns == null)
    {
      urns = new EObjectContainmentEList<Urn>(Urn.class, this, KimPackage.MODEL_BODY_STATEMENT__URNS);
    }
    return urns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.integratedmodelling.kim.kim.Number getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber(org.integratedmodelling.kim.kim.Number newNumber, NotificationChain msgs)
  {
    org.integratedmodelling.kim.kim.Number oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NUMBER, oldNumber, newNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(org.integratedmodelling.kim.kim.Number newNumber)
  {
    if (newNumber != number)
    {
      NotificationChain msgs = null;
      if (number != null)
        msgs = ((InternalEObject)number).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__NUMBER, null, msgs);
      if (newNumber != null)
        msgs = ((InternalEObject)newNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__NUMBER, null, msgs);
      msgs = basicSetNumber(newNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NUMBER, newNumber, newNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptDeclaration getConcept()
  {
    return concept;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConcept(ConceptDeclaration newConcept, NotificationChain msgs)
  {
    ConceptDeclaration oldConcept = concept;
    concept = newConcept;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CONCEPT, oldConcept, newConcept);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConcept(ConceptDeclaration newConcept)
  {
    if (newConcept != concept)
    {
      NotificationChain msgs = null;
      if (concept != null)
        msgs = ((InternalEObject)concept).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CONCEPT, null, msgs);
      if (newConcept != null)
        msgs = ((InternalEObject)newConcept).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CONCEPT, null, msgs);
      msgs = basicSetConcept(newConcept, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CONCEPT, newConcept, newConcept));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBoolean()
  {
    return boolean_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoolean(String newBoolean)
  {
    String oldBoolean = boolean_;
    boolean_ = newBoolean;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__BOOLEAN, oldBoolean, boolean_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ObservableSemantics> getObservables()
  {
    if (observables == null)
    {
      observables = new EObjectContainmentEList<ObservableSemantics>(ObservableSemantics.class, this, KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES);
    }
    return observables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDocstring()
  {
    return docstring;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDocstring(String newDocstring)
  {
    String oldDocstring = docstring;
    docstring = newDocstring;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__DOCSTRING, oldDocstring, docstring));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Dependency> getDependencies()
  {
    if (dependencies == null)
    {
      dependencies = new EObjectContainmentEList<Dependency>(Dependency.class, this, KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES);
    }
    return dependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ValueAssignment> getContextualizers()
  {
    if (contextualizers == null)
    {
      contextualizers = new EObjectContainmentEList<ValueAssignment>(ValueAssignment.class, this, KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS);
    }
    return contextualizers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDiscretization()
  {
    return discretization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDiscretization(boolean newDiscretization)
  {
    boolean oldDiscretization = discretization;
    discretization = newDiscretization;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__DISCRETIZATION, oldDiscretization, discretization));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Classification getClassification()
  {
    return classification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClassification(Classification newClassification, NotificationChain msgs)
  {
    Classification oldClassification = classification;
    classification = newClassification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION, oldClassification, newClassification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClassification(Classification newClassification)
  {
    if (newClassification != classification)
    {
      NotificationChain msgs = null;
      if (classification != null)
        msgs = ((InternalEObject)classification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION, null, msgs);
      if (newClassification != null)
        msgs = ((InternalEObject)newClassification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION, null, msgs);
      msgs = basicSetClassification(newClassification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION, newClassification, newClassification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getClassificationProperty()
  {
    return classificationProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClassificationProperty(String newClassificationProperty)
  {
    String oldClassificationProperty = classificationProperty;
    classificationProperty = newClassificationProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION_PROPERTY, oldClassificationProperty, classificationProperty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LookupTableArgument> getLookupTableArgs()
  {
    if (lookupTableArgs == null)
    {
      lookupTableArgs = new EObjectContainmentEList<LookupTableArgument>(LookupTableArgument.class, this, KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS);
    }
    return lookupTableArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Table getLookupTable()
  {
    return lookupTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLookupTable(Table newLookupTable, NotificationChain msgs)
  {
    Table oldLookupTable = lookupTable;
    lookupTable = newLookupTable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE, oldLookupTable, newLookupTable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLookupTable(Table newLookupTable)
  {
    if (newLookupTable != lookupTable)
    {
      NotificationChain msgs = null;
      if (lookupTable != null)
        msgs = ((InternalEObject)lookupTable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE, null, msgs);
      if (newLookupTable != null)
        msgs = ((InternalEObject)newLookupTable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE, null, msgs);
      msgs = basicSetLookupTable(newLookupTable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE, newLookupTable, newLookupTable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLookupTableId()
  {
    return lookupTableId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLookupTableId(String newLookupTableId)
  {
    String oldLookupTableId = lookupTableId;
    lookupTableId = newLookupTableId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ID, oldLookupTableId, lookupTableId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTwoway()
  {
    return twoway;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTwoway(boolean newTwoway)
  {
    boolean oldTwoway = twoway;
    twoway = newTwoway;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__TWOWAY, oldTwoway, twoway));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ActionSpecification> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectContainmentEList<ActionSpecification>(ActionSpecification.class, this, KimPackage.MODEL_BODY_STATEMENT__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Map getMetadata()
  {
    return metadata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetadata(Map newMetadata, NotificationChain msgs)
  {
    Map oldMetadata = metadata;
    metadata = newMetadata;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__METADATA, oldMetadata, newMetadata);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetadata(Map newMetadata)
  {
    if (newMetadata != metadata)
    {
      NotificationChain msgs = null;
      if (metadata != null)
        msgs = ((InternalEObject)metadata).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__METADATA, null, msgs);
      if (newMetadata != null)
        msgs = ((InternalEObject)newMetadata).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__METADATA, null, msgs);
      msgs = basicSetMetadata(newMetadata, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__METADATA, newMetadata, newMetadata));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__URNS:
        return ((InternalEList<?>)getUrns()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return basicSetNumber(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return basicSetConcept(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return ((InternalEList<?>)getObservables()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return ((InternalEList<?>)getDependencies()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return ((InternalEList<?>)getContextualizers()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION:
        return basicSetClassification(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS:
        return ((InternalEList<?>)getLookupTableArgs()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE:
        return basicSetLookupTable(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return ((InternalEList<?>)getActions()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return basicSetMetadata(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        return isInstantiator();
      case KimPackage.MODEL_BODY_STATEMENT__URNS:
        return getUrns();
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return getNumber();
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return getConcept();
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        return getBoolean();
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        return getName();
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return getObservables();
      case KimPackage.MODEL_BODY_STATEMENT__DOCSTRING:
        return getDocstring();
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return getDependencies();
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return getContextualizers();
      case KimPackage.MODEL_BODY_STATEMENT__DISCRETIZATION:
        return isDiscretization();
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION:
        return getClassification();
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION_PROPERTY:
        return getClassificationProperty();
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS:
        return getLookupTableArgs();
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE:
        return getLookupTable();
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ID:
        return getLookupTableId();
      case KimPackage.MODEL_BODY_STATEMENT__TWOWAY:
        return isTwoway();
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return getActions();
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return getMetadata();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        setInstantiator((Boolean)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__URNS:
        getUrns().clear();
        getUrns().addAll((Collection<? extends Urn>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        setNumber((org.integratedmodelling.kim.kim.Number)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        setConcept((ConceptDeclaration)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        setBoolean((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        setName((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        getObservables().clear();
        getObservables().addAll((Collection<? extends ObservableSemantics>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DOCSTRING:
        setDocstring((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        getDependencies().clear();
        getDependencies().addAll((Collection<? extends Dependency>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        getContextualizers().clear();
        getContextualizers().addAll((Collection<? extends ValueAssignment>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DISCRETIZATION:
        setDiscretization((Boolean)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION:
        setClassification((Classification)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION_PROPERTY:
        setClassificationProperty((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS:
        getLookupTableArgs().clear();
        getLookupTableArgs().addAll((Collection<? extends LookupTableArgument>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE:
        setLookupTable((Table)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ID:
        setLookupTableId((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__TWOWAY:
        setTwoway((Boolean)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends ActionSpecification>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        setMetadata((Map)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        setInstantiator(INSTANTIATOR_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__URNS:
        getUrns().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        setNumber((org.integratedmodelling.kim.kim.Number)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        setConcept((ConceptDeclaration)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        setBoolean(BOOLEAN_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        getObservables().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DOCSTRING:
        setDocstring(DOCSTRING_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        getDependencies().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        getContextualizers().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DISCRETIZATION:
        setDiscretization(DISCRETIZATION_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION:
        setClassification((Classification)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION_PROPERTY:
        setClassificationProperty(CLASSIFICATION_PROPERTY_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS:
        getLookupTableArgs().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE:
        setLookupTable((Table)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ID:
        setLookupTableId(LOOKUP_TABLE_ID_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__TWOWAY:
        setTwoway(TWOWAY_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        getActions().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        setMetadata((Map)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        return instantiator != INSTANTIATOR_EDEFAULT;
      case KimPackage.MODEL_BODY_STATEMENT__URNS:
        return urns != null && !urns.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return number != null;
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return concept != null;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        return BOOLEAN_EDEFAULT == null ? boolean_ != null : !BOOLEAN_EDEFAULT.equals(boolean_);
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return observables != null && !observables.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__DOCSTRING:
        return DOCSTRING_EDEFAULT == null ? docstring != null : !DOCSTRING_EDEFAULT.equals(docstring);
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return dependencies != null && !dependencies.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return contextualizers != null && !contextualizers.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__DISCRETIZATION:
        return discretization != DISCRETIZATION_EDEFAULT;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION:
        return classification != null;
      case KimPackage.MODEL_BODY_STATEMENT__CLASSIFICATION_PROPERTY:
        return CLASSIFICATION_PROPERTY_EDEFAULT == null ? classificationProperty != null : !CLASSIFICATION_PROPERTY_EDEFAULT.equals(classificationProperty);
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ARGS:
        return lookupTableArgs != null && !lookupTableArgs.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE:
        return lookupTable != null;
      case KimPackage.MODEL_BODY_STATEMENT__LOOKUP_TABLE_ID:
        return LOOKUP_TABLE_ID_EDEFAULT == null ? lookupTableId != null : !LOOKUP_TABLE_ID_EDEFAULT.equals(lookupTableId);
      case KimPackage.MODEL_BODY_STATEMENT__TWOWAY:
        return twoway != TWOWAY_EDEFAULT;
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return actions != null && !actions.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return metadata != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (instantiator: ");
    result.append(instantiator);
    result.append(", boolean: ");
    result.append(boolean_);
    result.append(", name: ");
    result.append(name);
    result.append(", docstring: ");
    result.append(docstring);
    result.append(", discretization: ");
    result.append(discretization);
    result.append(", classificationProperty: ");
    result.append(classificationProperty);
    result.append(", lookupTableId: ");
    result.append(lookupTableId);
    result.append(", twoway: ");
    result.append(twoway);
    result.append(')');
    return result.toString();
  }

} //ModelBodyStatementImpl
