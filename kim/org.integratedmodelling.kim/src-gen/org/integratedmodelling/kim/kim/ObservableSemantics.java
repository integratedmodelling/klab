/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.26.0
 */
package org.integratedmodelling.kim.kim;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Observable Semantics</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getValue <em>Value</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#isGeneric <em>Generic</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getDeclaration <em>Declaration</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getAccordingTo <em>According To</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getUnit <em>Unit</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getCurrency <em>Currency</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getValueOperators <em>Value Operators</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#isOptional <em>Optional</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getFrom <em>From</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getTo <em>To</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#isGlobal <em>Global</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#isExclusive <em>Exclusive</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getAnnotations <em>Annotations</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.ObservableSemantics#getCondition <em>Condition</em>}</li>
 * </ul>
 *
 * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics()
 * @model
 * @generated
 */
public interface ObservableSemantics extends EObject
{
  /**
   * Returns the value of the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value</em>' containment reference.
   * @see #setValue(Value)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Value()
   * @model containment="true"
   * @generated
   */
  Value getValue();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getValue <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Value</em>' containment reference.
   * @see #getValue()
   * @generated
   */
  void setValue(Value value);

  /**
   * Returns the value of the '<em><b>Generic</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Generic</em>' attribute.
   * @see #setGeneric(boolean)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Generic()
   * @model
   * @generated
   */
  boolean isGeneric();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#isGeneric <em>Generic</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Generic</em>' attribute.
   * @see #isGeneric()
   * @generated
   */
  void setGeneric(boolean value);

  /**
   * Returns the value of the '<em><b>Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declaration</em>' containment reference.
   * @see #setDeclaration(ConceptDeclaration)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Declaration()
   * @model containment="true"
   * @generated
   */
  ConceptDeclaration getDeclaration();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getDeclaration <em>Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declaration</em>' containment reference.
   * @see #getDeclaration()
   * @generated
   */
  void setDeclaration(ConceptDeclaration value);

  /**
   * Returns the value of the '<em><b>According To</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>According To</em>' attribute.
   * @see #setAccordingTo(String)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_AccordingTo()
   * @model
   * @generated
   */
  String getAccordingTo();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getAccordingTo <em>According To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>According To</em>' attribute.
   * @see #getAccordingTo()
   * @generated
   */
  void setAccordingTo(String value);

  /**
   * Returns the value of the '<em><b>Unit</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Unit</em>' containment reference.
   * @see #setUnit(Unit)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Unit()
   * @model containment="true"
   * @generated
   */
  Unit getUnit();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getUnit <em>Unit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Unit</em>' containment reference.
   * @see #getUnit()
   * @generated
   */
  void setUnit(Unit value);

  /**
   * Returns the value of the '<em><b>Currency</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Currency</em>' containment reference.
   * @see #setCurrency(Currency)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Currency()
   * @model containment="true"
   * @generated
   */
  Currency getCurrency();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getCurrency <em>Currency</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Currency</em>' containment reference.
   * @see #getCurrency()
   * @generated
   */
  void setCurrency(Currency value);

  /**
   * Returns the value of the '<em><b>Value Operators</b></em>' containment reference list.
   * The list contents are of type {@link org.integratedmodelling.kim.kim.ValueOperator}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value Operators</em>' containment reference list.
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_ValueOperators()
   * @model containment="true"
   * @generated
   */
  EList<ValueOperator> getValueOperators();

  /**
   * Returns the value of the '<em><b>Optional</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Optional</em>' attribute.
   * @see #setOptional(boolean)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Optional()
   * @model
   * @generated
   */
  boolean isOptional();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#isOptional <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Optional</em>' attribute.
   * @see #isOptional()
   * @generated
   */
  void setOptional(boolean value);

  /**
   * Returns the value of the '<em><b>From</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>From</em>' containment reference.
   * @see #setFrom(org.integratedmodelling.kim.kim.Number)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_From()
   * @model containment="true"
   * @generated
   */
  org.integratedmodelling.kim.kim.Number getFrom();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getFrom <em>From</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>From</em>' containment reference.
   * @see #getFrom()
   * @generated
   */
  void setFrom(org.integratedmodelling.kim.kim.Number value);

  /**
   * Returns the value of the '<em><b>To</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>To</em>' containment reference.
   * @see #setTo(org.integratedmodelling.kim.kim.Number)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_To()
   * @model containment="true"
   * @generated
   */
  org.integratedmodelling.kim.kim.Number getTo();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getTo <em>To</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>To</em>' containment reference.
   * @see #getTo()
   * @generated
   */
  void setTo(org.integratedmodelling.kim.kim.Number value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Global</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Global</em>' attribute.
   * @see #setGlobal(boolean)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Global()
   * @model
   * @generated
   */
  boolean isGlobal();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#isGlobal <em>Global</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Global</em>' attribute.
   * @see #isGlobal()
   * @generated
   */
  void setGlobal(boolean value);

  /**
   * Returns the value of the '<em><b>Exclusive</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exclusive</em>' attribute.
   * @see #setExclusive(boolean)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Exclusive()
   * @model
   * @generated
   */
  boolean isExclusive();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#isExclusive <em>Exclusive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exclusive</em>' attribute.
   * @see #isExclusive()
   * @generated
   */
  void setExclusive(boolean value);

  /**
   * Returns the value of the '<em><b>Annotations</b></em>' containment reference list.
   * The list contents are of type {@link org.integratedmodelling.kim.kim.Annotation}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Annotations</em>' containment reference list.
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Annotations()
   * @model containment="true"
   * @generated
   */
  EList<Annotation> getAnnotations();

  /**
   * Returns the value of the '<em><b>Condition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' attribute.
   * @see #setCondition(String)
   * @see org.integratedmodelling.kim.kim.KimPackage#getObservableSemantics_Condition()
   * @model
   * @generated
   */
  String getCondition();

  /**
   * Sets the value of the '{@link org.integratedmodelling.kim.kim.ObservableSemantics#getCondition <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' attribute.
   * @see #getCondition()
   * @generated
   */
  void setCondition(String value);

} // ObservableSemantics
