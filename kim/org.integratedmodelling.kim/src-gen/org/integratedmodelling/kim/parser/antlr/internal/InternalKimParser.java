package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LOWERCASE_ID", "RULE_UPPERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_INT", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_UPPERCASE_PATH", "RULE_BACKCASE_ID", "RULE_ANNOTATION_ID", "RULE_TEMPLATE_VAR", "RULE_OPTION_KEY", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'project'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "')'", "'match'", "'metadata'", "'?'", "'*'", "'column'", "'row'", "'='", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'instantiation'", "'termination'", "'context'", "'related'", "'set'", "'integrate'", "'do'", "'then'", "'finally'", "'move'", "'away'", "'for'", "'model'", "'learn'", "'number'", "'object'", "'text'", "'boolean'", "'>'", "'>='", "'<='", "'<'", "'where'", "'=='", "'only'", "'without'", "'!='", "'plus'", "'minus'", "'times'", "'by'", "'namespace'", "'scenario'", "'worldview'", "'language'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'with'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'/'", "'.'", "'observe'", "'extends'", "'children'", "'any'", "'per'", "'optional'", "'required'", "'named'", "'all'", "'down'", "'total'", "'averaged'", "'summed'", "'of'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'linking'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'cooccurrent'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'change'", "'rate'", "'changed'", "'uncertainty'", "'magnitude'", "'level'", "'type'", "'observability'", "'proportion'", "'percentage'", "'ratio'", "'monetary'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'rescaling'", "'is'", "'equals'", "'core'", "'nothing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'emerges'", "'creates'", "'applies'", "'links'", "'affects'", "'implies'", "'uses'", "'exactly'", "'at'", "'least'", "'most'", "'more'", "'contains'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'{'", "'?='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'@'", "'+'", "'-'", "'l'", "'e'", "'E'", "'AD'", "'CE'", "'BC'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int RULE_BACKCASE_ID=14;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__258=258;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__257=257;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__259=259;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__256=256;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__255=255;
    public static final int T__250=250;
    public static final int RULE_ID=12;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=10;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int RULE_TEMPLATE_VAR=16;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__205=205;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=19;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=15;
    public static final int RULE_OPTION_KEY=17;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=5;
    public static final int RULE_ML_COMMENT=18;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=11;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=20;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=21;
    public static final int RULE_LOWERCASE_ID=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_LOWERCASE_ID && LA3_0<=RULE_STRING)||(LA3_0>=RULE_EXPR && LA3_0<=RULE_LOWERCASE_DASHID)||LA3_0==RULE_UPPERCASE_PATH||(LA3_0>=30 && LA3_0<=31)||LA3_0==40||LA3_0==118||(LA3_0>=137 && LA3_0<=138)||(LA3_0>=146 && LA3_0<=147)||(LA3_0>=149 && LA3_0<=154)||(LA3_0>=156 && LA3_0<=167)||(LA3_0>=251 && LA3_0<=252)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=23 && LA3_0<=26)||(LA3_0>=76 && LA3_0<=81)||(LA3_0>=95 && LA3_0<=97)||LA3_0==101||LA3_0==115||(LA3_0>=171 && LA3_0<=179)||LA3_0==195||(LA3_0>=212 && LA3_0<=215)||(LA3_0>=218 && LA3_0<=249)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=23 && LA2_0<=26)||(LA2_0>=76 && LA2_0<=81)||LA2_0==101||LA2_0==115||(LA2_0>=171 && LA2_0<=179)||LA2_0==195||(LA2_0>=212 && LA2_0<=215)||(LA2_0>=218 && LA2_0<=249)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_6_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )?
            int alt9=2;
            switch ( input.LA(1) ) {
                case 23:
                case 24:
                case 25:
                    {
                    alt9=1;
                    }
                    break;
                case 76:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 77:
                    {
                    int LA9_3 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 78:
                    {
                    int LA9_4 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 79:
                    {
                    int LA9_5 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 80:
                    {
                    int LA9_6 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 81:
                    {
                    int LA9_7 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
            }

            switch (alt9) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    loop8:
                    do {
                        int alt8=3;
                        int LA8_0 = input.LA(1);

                        if ( LA8_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt8=1;
                        }
                        else if ( LA8_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }
                        else if ( LA8_0 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", lv_inactive_3_0 != null, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
                    	    {
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
                    	    int alt7=2;
                    	    int LA7_0 = input.LA(1);

                    	    if ( (LA7_0==24) ) {
                    	        alt7=1;
                    	    }
                    	    switch (alt7) {
                    	        case 1 :
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            {
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                    	            {
                    	            lv_projectPrivate_4_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
                    	              										
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              											if (current==null) {
                    	              												current = createModelElement(grammarAccess.getModelStatementRule());
                    	              											}
                    	              											setWithLastConsumed(current, "projectPrivate", lv_projectPrivate_4_0 != null, "project");
                    	              										
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    {
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    // InternalKim.g:416:11: lv_private_5_0= 'private'
                    	    {
                    	    lv_private_5_0=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
                    	      										
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElement(grammarAccess.getModelStatementRule());
                    	      											}
                    	      											setWithLastConsumed(current, "private", lv_private_5_0 != null, "private");
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:441:3: ( (lv_model_6_0= ruleMODEL_TYPE ) )
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            // InternalKim.g:443:5: lv_model_6_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_model_6_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_6_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:460:3: ( (lv_body_7_0= ruleModelBodyStatement ) )
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            {
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            // InternalKim.g:462:5: lv_body_7_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:486:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:486:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:487:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:493:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:499:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ANNOTATION_ID) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:504:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:521:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:523:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,26,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:545:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:547:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:568:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:568:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:569:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:575:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_defineClass_0_0=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token otherlv_2=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:581:2: ( ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) )
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            {
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) )
            {
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LOWERCASE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( ((LA12_1>=RULE_LOWERCASE_ID && LA12_1<=RULE_UPPERCASE_ID)) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:585:5: lv_defineClass_0_0= RULE_LOWERCASE_ID
                    {
                    lv_defineClass_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_defineClass_0_0, grammarAccess.getDefinitionBodyAccess().getDefineClassLOWERCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"defineClass",
                      						lv_defineClass_0_0,
                      						"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:601:3: ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_UPPERCASE_ID) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_LOWERCASE_ID) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalKim.g:604:6: lv_name_1_1= RULE_UPPERCASE_ID
                    {
                    lv_name_1_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_1, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_1,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:619:6: lv_name_1_2= RULE_LOWERCASE_ID
                    {
                    lv_name_1_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_2, grammarAccess.getDefinitionBodyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefinitionBodyAccess().getAsKeyword_2());
              		
            }
            // InternalKim.g:640:3: ( (lv_value_3_0= ruleValue ) )
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            {
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            // InternalKim.g:642:5: lv_value_3_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:663:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:663:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:664:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:670:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        Token lv_name_8_0=null;
        Token otherlv_10=null;
        Token lv_docstring_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_discretization_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token lv_lookupTableId_36_0=null;
        Token lv_twoway_37_0=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_lookupTableId_45_0=null;
        Token otherlv_47=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;

        EObject lv_observables_9_0 = null;

        EObject lv_observables_11_0 = null;

        EObject lv_dependencies_14_0 = null;

        EObject lv_dependencies_16_0 = null;

        EObject lv_contextualizers_18_0 = null;

        EObject lv_contextualizers_20_0 = null;

        EObject lv_classification_24_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_27_0 = null;

        EObject lv_lookupTableArgs_30_0 = null;

        EObject lv_lookupTableArgs_32_0 = null;

        EObject lv_lookupTable_35_0 = null;

        EObject lv_lookupTableArgs_39_0 = null;

        EObject lv_lookupTableArgs_41_0 = null;

        EObject lv_lookupTable_44_0 = null;

        EObject lv_actions_46_0 = null;

        EObject lv_metadata_48_0 = null;



        	enterRule();

        try {
            // InternalKim.g:676:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? ) )
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? )
            {
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? )
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )?
            {
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==28) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:680:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,28,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", lv_instantiator_0_0 != null, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
                    {
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
                    int alt17=4;
                    alt17 = dfa17.predict(input);
                    switch (alt17) {
                        case 1 :
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_13);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( (LA15_0==29) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,29,FOLLOW_14); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_13);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            {
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            {
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_number_4_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_4_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_concept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt16=2;
                            int LA16_0 = input.LA(1);

                            if ( (LA16_0==30) ) {
                                alt16=1;
                            }
                            else if ( (LA16_0==31) ) {
                                alt16=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 16, 0, input);

                                throw nvae;
                            }
                            switch (alt16) {
                                case 1 :
                                    // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,30,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,31,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:814:3: ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_LOWERCASE_ID) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==EOF||LA20_1==RULE_STRING||LA20_1==22||(LA20_1>=32 && LA20_1<=35)||LA20_1==39||(LA20_1>=42 && LA20_1<=43)||(LA20_1>=60 && LA20_1<=62)||(LA20_1>=68 && LA20_1<=73)) ) {
                    alt20=1;
                }
                else if ( (LA20_1==27||LA20_1==40||LA20_1==111||LA20_1==114) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA20_0>=RULE_UPPERCASE_ID && LA20_0<=RULE_STRING)||(LA20_0>=RULE_EXPR && LA20_0<=RULE_UPPERCASE_PATH)||LA20_0==RULE_ANNOTATION_ID||(LA20_0>=29 && LA20_0<=31)||LA20_0==40||(LA20_0>=55 && LA20_0<=56)||LA20_0==118||(LA20_0>=137 && LA20_0<=138)||(LA20_0>=146 && LA20_0<=147)||(LA20_0>=149 && LA20_0<=154)||(LA20_0>=156 && LA20_0<=167)||LA20_0==216||(LA20_0>=251 && LA20_0<=252)) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:817:6: lv_name_8_0= RULE_LOWERCASE_ID
                    {
                    lv_name_8_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_8_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_8_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    {
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) )
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    {
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    // InternalKim.g:837:7: lv_observables_9_0= ruleAnnotatedObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_observables_9_0=ruleAnnotatedObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_9_0,
                      								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:854:5: (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==29) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalKim.g:855:6: otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    {
                    	    otherlv_10=(Token)match(input,29,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:859:6: ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    {
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    // InternalKim.g:861:8: lv_observables_11_0= ruleAnnotatedObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_observables_11_0=ruleAnnotatedObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_11_0,
                    	      									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:881:3: ( (lv_docstring_12_0= RULE_STRING ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_STRING) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    {
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    // InternalKim.g:883:5: lv_docstring_12_0= RULE_STRING
                    {
                    lv_docstring_12_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_12_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:899:3: (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==32) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKim.g:900:4: otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    {
                    otherlv_13=(Token)match(input,32,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:904:4: ( (lv_dependencies_14_0= ruleDependency ) )
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    {
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    // InternalKim.g:906:6: lv_dependencies_14_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_dependencies_14_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_14_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:923:4: (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==29) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalKim.g:924:5: otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) )
                    	    {
                    	    otherlv_15=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:928:5: ( (lv_dependencies_16_0= ruleDependency ) )
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    // InternalKim.g:930:7: lv_dependencies_16_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_dependencies_16_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_16_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:949:3: (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==33) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:950:4: otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    {
                    otherlv_17=(Token)match(input,33,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:954:4: ( (lv_contextualizers_18_0= ruleValueExecution ) )
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    {
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    // InternalKim.g:956:6: lv_contextualizers_18_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_contextualizers_18_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_18_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:973:4: (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==29) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // InternalKim.g:974:5: otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_19=(Token)match(input,29,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:978:5: ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    // InternalKim.g:980:7: lv_contextualizers_20_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_contextualizers_20_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_20_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:999:3: ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=34 && LA28_0<=35)) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==34) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==35) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalKim.g:1001:5: otherlv_21= 'classified'
                            {
                            otherlv_21=(Token)match(input,34,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            {
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            {
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            // InternalKim.g:1008:7: lv_discretization_22_0= 'discretized'
                            {
                            lv_discretization_22_0=(Token)match(input,35,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_22_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", lv_discretization_22_0 != null, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1021:4: ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==36) ) {
                        alt27=1;
                    }
                    else if ( (LA27_0==37) ) {
                        alt27=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 27, 0, input);

                        throw nvae;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            // InternalKim.g:1023:6: otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) )
                            {
                            otherlv_23=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:1027:6: ( (lv_classification_24_0= ruleClassification ) )
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            {
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            // InternalKim.g:1029:8: lv_classification_24_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classification_24_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_24_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            // InternalKim.g:1049:6: otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            {
                            otherlv_25=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_26=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1057:6: ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            {
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            // InternalKim.g:1059:8: lv_classificationProperty_27_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classificationProperty_27_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_27_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1079:3: ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )?
            int alt34=3;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==39) ) {
                alt34=1;
            }
            else if ( (LA34_0==42) ) {
                alt34=2;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1080:4: (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:1080:4: (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )
                    // InternalKim.g:1081:5: otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    {
                    otherlv_28=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0_0());
                      				
                    }
                    // InternalKim.g:1085:5: (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==40) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1086:6: otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')'
                            {
                            otherlv_29=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_0_1_0());
                              					
                            }
                            // InternalKim.g:1090:6: ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) )
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_0= ruleLookupTableArgument )
                            {
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_0= ruleLookupTableArgument )
                            // InternalKim.g:1092:8: lv_lookupTableArgs_30_0= ruleLookupTableArgument
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_29);
                            lv_lookupTableArgs_30_0=ruleLookupTableArgument();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_30_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgument");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:1109:6: (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )*
                            loop29:
                            do {
                                int alt29=2;
                                int LA29_0 = input.LA(1);

                                if ( (LA29_0==29) ) {
                                    alt29=1;
                                }


                                switch (alt29) {
                            	case 1 :
                            	    // InternalKim.g:1110:7: otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) )
                            	    {
                            	    otherlv_31=(Token)match(input,29,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_31, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_0_1_2_0());
                            	      						
                            	    }
                            	    // InternalKim.g:1114:7: ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) )
                            	    // InternalKim.g:1115:8: (lv_lookupTableArgs_32_0= ruleLookupTableArgument )
                            	    {
                            	    // InternalKim.g:1115:8: (lv_lookupTableArgs_32_0= ruleLookupTableArgument )
                            	    // InternalKim.g:1116:9: lv_lookupTableArgs_32_0= ruleLookupTableArgument
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_lookupTableArgs_32_0=ruleLookupTableArgument();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"lookupTableArgs",
                            	      										lv_lookupTableArgs_32_0,
                            	      										"org.integratedmodelling.kim.Kim.LookupTableArgument");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop29;
                                }
                            } while (true);

                            otherlv_33=(Token)match(input,41,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_0_1_3());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_34=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_0_2());
                      				
                    }
                    // InternalKim.g:1143:5: ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==RULE_LOWERCASE_ID||LA31_0==RULE_STRING||(LA31_0>=RULE_EXPR && LA31_0<=RULE_LOWERCASE_DASHID)||LA31_0==RULE_UPPERCASE_PATH||(LA31_0>=30 && LA31_0<=31)||LA31_0==40||LA31_0==45||LA31_0==48||(LA31_0>=54 && LA31_0<=55)||LA31_0==59||(LA31_0>=82 && LA31_0<=85)||LA31_0==90||(LA31_0>=137 && LA31_0<=138)||(LA31_0>=146 && LA31_0<=147)||(LA31_0>=149 && LA31_0<=154)||(LA31_0>=156 && LA31_0<=167)||(LA31_0>=251 && LA31_0<=252)) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==RULE_UPPERCASE_ID) ) {
                        int LA31_2 = input.LA(2);

                        if ( (LA31_2==111||LA31_2==114) ) {
                            alt31=1;
                        }
                        else if ( (LA31_2==EOF||LA31_2==22||LA31_2==43||(LA31_2>=60 && LA31_2<=62)||(LA31_2>=68 && LA31_2<=73)) ) {
                            alt31=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 31, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalKim.g:1144:6: ( (lv_lookupTable_35_0= ruleTable ) )
                            {
                            // InternalKim.g:1144:6: ( (lv_lookupTable_35_0= ruleTable ) )
                            // InternalKim.g:1145:7: (lv_lookupTable_35_0= ruleTable )
                            {
                            // InternalKim.g:1145:7: (lv_lookupTable_35_0= ruleTable )
                            // InternalKim.g:1146:8: lv_lookupTable_35_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_0_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_35_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"lookupTable",
                              									lv_lookupTable_35_0,
                              									"org.integratedmodelling.kim.Kim.Table");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1164:6: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1164:6: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1165:7: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1165:7: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1166:8: lv_lookupTableId_36_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_36_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_lookupTableId_36_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_0_3_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"lookupTableId",
                              									lv_lookupTableId_36_0,
                              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1185:4: ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:1185:4: ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) )
                    // InternalKim.g:1186:5: ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) )
                    {
                    // InternalKim.g:1186:5: ( (lv_twoway_37_0= 'match' ) )
                    // InternalKim.g:1187:6: (lv_twoway_37_0= 'match' )
                    {
                    // InternalKim.g:1187:6: (lv_twoway_37_0= 'match' )
                    // InternalKim.g:1188:7: lv_twoway_37_0= 'match'
                    {
                    lv_twoway_37_0=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_twoway_37_0, grammarAccess.getModelBodyStatementAccess().getTwowayMatchKeyword_7_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      							}
                      							setWithLastConsumed(current, "twoway", lv_twoway_37_0 != null, "match");
                      						
                    }

                    }


                    }

                    // InternalKim.g:1200:5: (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==40) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalKim.g:1201:6: otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')'
                            {
                            otherlv_38=(Token)match(input,40,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_38, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_1_0());
                              					
                            }
                            // InternalKim.g:1205:6: ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) )
                            // InternalKim.g:1206:7: (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified )
                            {
                            // InternalKim.g:1206:7: (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified )
                            // InternalKim.g:1207:8: lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_35);
                            lv_lookupTableArgs_39_0=ruleLookupTableArgumentQualified();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_39_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_40=(Token)match(input,29,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_40, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_1_2());
                              					
                            }
                            // InternalKim.g:1228:6: ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) )
                            // InternalKim.g:1229:7: (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified )
                            {
                            // InternalKim.g:1229:7: (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified )
                            // InternalKim.g:1230:8: lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_3_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_lookupTableArgs_41_0=ruleLookupTableArgumentQualified();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_41_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_42=(Token)match(input,41,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_1_4());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_43=(Token)match(input,38,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_43, grammarAccess.getModelBodyStatementAccess().getToKeyword_7_1_2());
                      				
                    }
                    // InternalKim.g:1256:5: ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==RULE_LOWERCASE_ID||LA33_0==RULE_STRING||(LA33_0>=RULE_EXPR && LA33_0<=RULE_LOWERCASE_DASHID)||LA33_0==RULE_UPPERCASE_PATH||(LA33_0>=30 && LA33_0<=31)||LA33_0==40||LA33_0==45||LA33_0==48||(LA33_0>=54 && LA33_0<=55)||LA33_0==59||(LA33_0>=82 && LA33_0<=85)||LA33_0==90||(LA33_0>=137 && LA33_0<=138)||(LA33_0>=146 && LA33_0<=147)||(LA33_0>=149 && LA33_0<=154)||(LA33_0>=156 && LA33_0<=167)||(LA33_0>=251 && LA33_0<=252)) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==RULE_UPPERCASE_ID) ) {
                        int LA33_2 = input.LA(2);

                        if ( (LA33_2==111||LA33_2==114) ) {
                            alt33=1;
                        }
                        else if ( (LA33_2==EOF||LA33_2==22||LA33_2==43||(LA33_2>=60 && LA33_2<=62)||(LA33_2>=68 && LA33_2<=73)) ) {
                            alt33=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 33, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1257:6: ( (lv_lookupTable_44_0= ruleTwoWayTable ) )
                            {
                            // InternalKim.g:1257:6: ( (lv_lookupTable_44_0= ruleTwoWayTable ) )
                            // InternalKim.g:1258:7: (lv_lookupTable_44_0= ruleTwoWayTable )
                            {
                            // InternalKim.g:1258:7: (lv_lookupTable_44_0= ruleTwoWayTable )
                            // InternalKim.g:1259:8: lv_lookupTable_44_0= ruleTwoWayTable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTwoWayTableParserRuleCall_7_1_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_44_0=ruleTwoWayTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"lookupTable",
                              									lv_lookupTable_44_0,
                              									"org.integratedmodelling.kim.Kim.TwoWayTable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1277:6: ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1277:6: ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1278:7: (lv_lookupTableId_45_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1278:7: (lv_lookupTableId_45_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1279:8: lv_lookupTableId_45_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_45_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_lookupTableId_45_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_1_3_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"lookupTableId",
                              									lv_lookupTableId_45_0,
                              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:1298:3: ( (lv_actions_46_0= ruleActionSpecification ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( ((LA35_0>=60 && LA35_0<=62)||(LA35_0>=68 && LA35_0<=73)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1299:4: (lv_actions_46_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1299:4: (lv_actions_46_0= ruleActionSpecification )
            	    // InternalKim.g:1300:5: lv_actions_46_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_actions_46_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_46_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            // InternalKim.g:1317:3: (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==43) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalKim.g:1318:4: otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) )
                    {
                    otherlv_47=(Token)match(input,43,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
                      			
                    }
                    // InternalKim.g:1322:4: ( (lv_metadata_48_0= ruleMap ) )
                    // InternalKim.g:1323:5: (lv_metadata_48_0= ruleMap )
                    {
                    // InternalKim.g:1323:5: (lv_metadata_48_0= ruleMap )
                    // InternalKim.g:1324:6: lv_metadata_48_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMapParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_metadata_48_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_48_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleLookupTableArgument"
    // InternalKim.g:1346:1: entryRuleLookupTableArgument returns [EObject current=null] : iv_ruleLookupTableArgument= ruleLookupTableArgument EOF ;
    public final EObject entryRuleLookupTableArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTableArgument = null;


        try {
            // InternalKim.g:1346:60: (iv_ruleLookupTableArgument= ruleLookupTableArgument EOF )
            // InternalKim.g:1347:2: iv_ruleLookupTableArgument= ruleLookupTableArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTableArgument=ruleLookupTableArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTableArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTableArgument"


    // $ANTLR start "ruleLookupTableArgument"
    // InternalKim.g:1353:1: ruleLookupTableArgument returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) ) ;
    public final EObject ruleLookupTableArgument() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        EObject lv_concept_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1359:2: ( ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) ) )
            // InternalKim.g:1360:2: ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
            {
            // InternalKim.g:1360:2: ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
            int alt38=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==111||LA38_1==114) ) {
                    alt38=2;
                }
                else if ( (LA38_1==EOF||LA38_1==29||LA38_1==41) ) {
                    alt38=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;
                }
                }
                break;
            case 44:
            case 45:
                {
                alt38=1;
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 40:
            case 137:
            case 138:
            case 146:
            case 147:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
                {
                alt38=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalKim.g:1361:3: ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) )
                    {
                    // InternalKim.g:1361:3: ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) )
                    // InternalKim.g:1362:4: ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) )
                    {
                    // InternalKim.g:1362:4: ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) )
                    // InternalKim.g:1363:5: (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' )
                    {
                    // InternalKim.g:1363:5: (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' )
                    int alt37=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt37=1;
                        }
                        break;
                    case 44:
                        {
                        alt37=2;
                        }
                        break;
                    case 45:
                        {
                        alt37=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }

                    switch (alt37) {
                        case 1 :
                            // InternalKim.g:1364:6: lv_id_0_1= RULE_LOWERCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getLookupTableArgumentAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1379:6: lv_id_0_2= '?'
                            {
                            lv_id_0_2=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getLookupTableArgumentAccess().getIdQuestionMarkKeyword_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(current, "id", lv_id_0_2, null);
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:1390:6: lv_id_0_3= '*'
                            {
                            lv_id_0_3=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getLookupTableArgumentAccess().getIdAsteriskKeyword_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(current, "id", lv_id_0_3, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1404:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1404:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1405:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1405:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:1406:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableArgumentAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableArgumentRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTableArgument"


    // $ANTLR start "entryRuleLookupTableArgumentQualified"
    // InternalKim.g:1427:1: entryRuleLookupTableArgumentQualified returns [EObject current=null] : iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF ;
    public final EObject entryRuleLookupTableArgumentQualified() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTableArgumentQualified = null;


        try {
            // InternalKim.g:1427:69: (iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF )
            // InternalKim.g:1428:2: iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTableArgumentQualified=ruleLookupTableArgumentQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTableArgumentQualified; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTableArgumentQualified"


    // $ANTLR start "ruleLookupTableArgumentQualified"
    // InternalKim.g:1434:1: ruleLookupTableArgumentQualified returns [EObject current=null] : ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) ) ;
    public final EObject ruleLookupTableArgumentQualified() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_1=null;
        Token lv_key_0_2=null;
        Token otherlv_1=null;
        Token lv_id_2_0=null;
        Token lv_key_3_1=null;
        Token lv_key_3_2=null;
        Token otherlv_4=null;
        EObject lv_concept_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1440:2: ( ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) ) )
            // InternalKim.g:1441:2: ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) )
            {
            // InternalKim.g:1441:2: ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) )
            int alt43=2;
            switch ( input.LA(1) ) {
            case 46:
                {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==48) ) {
                    int LA43_5 = input.LA(3);

                    if ( (LA43_5==RULE_LOWERCASE_ID) ) {
                        int LA43_3 = input.LA(4);

                        if ( (LA43_3==111||LA43_3==114) ) {
                            alt43=2;
                        }
                        else if ( (LA43_3==EOF||LA43_3==29||LA43_3==41) ) {
                            alt43=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA43_5==RULE_UPPERCASE_ID||LA43_5==RULE_CAMELCASE_ID||LA43_5==RULE_LOWERCASE_DASHID||LA43_5==RULE_UPPERCASE_PATH||LA43_5==40||(LA43_5>=137 && LA43_5<=138)||(LA43_5>=146 && LA43_5<=147)||(LA43_5>=149 && LA43_5<=154)||(LA43_5>=156 && LA43_5<=167)) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
                }
                break;
            case 47:
                {
                int LA43_2 = input.LA(2);

                if ( (LA43_2==48) ) {
                    int LA43_5 = input.LA(3);

                    if ( (LA43_5==RULE_LOWERCASE_ID) ) {
                        int LA43_3 = input.LA(4);

                        if ( (LA43_3==111||LA43_3==114) ) {
                            alt43=2;
                        }
                        else if ( (LA43_3==EOF||LA43_3==29||LA43_3==41) ) {
                            alt43=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA43_5==RULE_UPPERCASE_ID||LA43_5==RULE_CAMELCASE_ID||LA43_5==RULE_LOWERCASE_DASHID||LA43_5==RULE_UPPERCASE_PATH||LA43_5==40||(LA43_5>=137 && LA43_5<=138)||(LA43_5>=146 && LA43_5<=147)||(LA43_5>=149 && LA43_5<=154)||(LA43_5>=156 && LA43_5<=167)) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                int LA43_3 = input.LA(2);

                if ( (LA43_3==111||LA43_3==114) ) {
                    alt43=2;
                }
                else if ( (LA43_3==EOF||LA43_3==29||LA43_3==41) ) {
                    alt43=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 40:
            case 137:
            case 138:
            case 146:
            case 147:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
                {
                alt43=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalKim.g:1442:3: ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:1442:3: ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:1443:4: ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:1443:4: ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( ((LA40_0>=46 && LA40_0<=47)) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1444:5: ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '='
                            {
                            // InternalKim.g:1444:5: ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) )
                            // InternalKim.g:1445:6: ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) )
                            {
                            // InternalKim.g:1445:6: ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) )
                            // InternalKim.g:1446:7: (lv_key_0_1= 'column' | lv_key_0_2= 'row' )
                            {
                            // InternalKim.g:1446:7: (lv_key_0_1= 'column' | lv_key_0_2= 'row' )
                            int alt39=2;
                            int LA39_0 = input.LA(1);

                            if ( (LA39_0==46) ) {
                                alt39=1;
                            }
                            else if ( (LA39_0==47) ) {
                                alt39=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 39, 0, input);

                                throw nvae;
                            }
                            switch (alt39) {
                                case 1 :
                                    // InternalKim.g:1447:8: lv_key_0_1= 'column'
                                    {
                                    lv_key_0_1=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_0_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_0_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_0_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1458:8: lv_key_0_2= 'row'
                                    {
                                    lv_key_0_2=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_0_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_0_0_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_0_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_1=(Token)match(input,48,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_0_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1476:4: ( (lv_id_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:1477:5: (lv_id_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:1477:5: (lv_id_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:1478:6: lv_id_2_0= RULE_LOWERCASE_ID
                    {
                    lv_id_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_2_0, grammarAccess.getLookupTableArgumentQualifiedAccess().getIdLOWERCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1496:3: ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:1496:3: ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
                    // InternalKim.g:1497:4: ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1497:4: ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( ((LA42_0>=46 && LA42_0<=47)) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalKim.g:1498:5: ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '='
                            {
                            // InternalKim.g:1498:5: ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) )
                            // InternalKim.g:1499:6: ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) )
                            {
                            // InternalKim.g:1499:6: ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) )
                            // InternalKim.g:1500:7: (lv_key_3_1= 'column' | lv_key_3_2= 'row' )
                            {
                            // InternalKim.g:1500:7: (lv_key_3_1= 'column' | lv_key_3_2= 'row' )
                            int alt41=2;
                            int LA41_0 = input.LA(1);

                            if ( (LA41_0==46) ) {
                                alt41=1;
                            }
                            else if ( (LA41_0==47) ) {
                                alt41=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 41, 0, input);

                                throw nvae;
                            }
                            switch (alt41) {
                                case 1 :
                                    // InternalKim.g:1501:8: lv_key_3_1= 'column'
                                    {
                                    lv_key_3_1=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_3_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_3_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1512:8: lv_key_3_2= 'row'
                                    {
                                    lv_key_3_2=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_3_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_1_0_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_3_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_4=(Token)match(input,48,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1530:4: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1531:5: (lv_concept_5_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1531:5: (lv_concept_5_0= ruleConceptDeclaration )
                    // InternalKim.g:1532:6: lv_concept_5_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedAccess().getConceptConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_5_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLookupTableArgumentQualifiedRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_5_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTableArgumentQualified"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1554:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1554:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1555:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1561:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1567:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1568:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1568:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1569:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1569:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1570:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1570:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1571:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1588:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==29) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalKim.g:1589:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1589:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1590:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1596:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1597:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1597:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1598:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1620:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1620:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1621:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1627:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1633:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1634:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1634:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1635:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1635:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1636:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1636:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1637:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1654:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt46=3;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==49) ) {
                alt46=1;
            }
            else if ( ((LA46_0>=50 && LA46_0<=51)) ) {
                alt46=2;
            }
            switch (alt46) {
                case 1 :
                    // InternalKim.g:1655:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1655:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1656:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1656:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1657:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", lv_otherwise_1_0 != null, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1670:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1670:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1671:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1671:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==50) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==51) ) {
                        alt45=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1672:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1677:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1677:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1678:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1678:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1679:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,51,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", lv_negated_3_0 != null, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1692:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1693:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1693:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1694:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1717:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1717:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1718:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1724:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1730:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt51=10;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalKim.g:1732:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1732:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==30) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==31) ) {
                        alt47=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalKim.g:1733:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1733:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1734:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1734:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1735:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1748:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1748:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1749:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1749:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1750:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1767:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1784:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt48=3;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==52) ) {
                        alt48=1;
                    }
                    else if ( (LA48_0==53) ) {
                        alt48=2;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1787:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1800:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,53,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1805:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1806:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1812:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1813:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1817:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1818:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1835:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt49=3;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==52) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==53) ) {
                        alt49=2;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1838:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1851:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1860:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1878:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1878:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1879:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,54,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1883:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1884:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1884:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1885:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1904:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1904:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1905:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1905:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1906:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1925:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1944:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1948:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1950:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1967:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==29) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1969:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1975:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1977:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2001:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2001:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:2002:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:2002:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2003:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2003:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:2004:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2021:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:2022:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:2022:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:2023:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2042:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:2042:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:2043:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:2043:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:2044:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2057:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:2057:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:2058:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:2058:4: (lv_star_22_0= '*' )
                    // InternalKim.g:2059:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_22_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithIdNoSet"
    // InternalKim.g:2075:1: entryRuleClassifierRHSWithIdNoSet returns [EObject current=null] : iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF ;
    public final EObject entryRuleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithIdNoSet = null;


        try {
            // InternalKim.g:2075:65: (iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF )
            // InternalKim.g:2076:2: iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithIdNoSet=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithIdNoSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithIdNoSet"


    // $ANTLR start "ruleClassifierRHSWithIdNoSet"
    // InternalKim.g:2082:1: ruleClassifierRHSWithIdNoSet returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token lv_string_10_0=null;
        Token lv_id_12_1=null;
        Token lv_nodata_15_0=null;
        Token lv_star_16_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_concept_11_0 = null;

        AntlrDatatypeRuleToken lv_id_12_2 = null;

        EObject lv_op_13_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2088:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) )
            // InternalKim.g:2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            {
            // InternalKim.g:2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            int alt56=9;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalKim.g:2090:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2090:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==30) ) {
                        alt52=1;
                    }
                    else if ( (LA52_0==31) ) {
                        alt52=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 52, 0, input);

                        throw nvae;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalKim.g:2091:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2091:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2092:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2092:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2093:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2106:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2106:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2107:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2107:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2108:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2122:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2122:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2123:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2123:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2124:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2124:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2125:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2142:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt53=3;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==52) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==53) ) {
                        alt53=2;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalKim.g:2143:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2143:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2144:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2144:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2145:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2158:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,53,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2163:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2164:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdNoSetAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2170:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2171:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2175:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2176:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2193:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt54=3;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==52) ) {
                        alt54=1;
                    }
                    else if ( (LA54_0==53) ) {
                        alt54=2;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalKim.g:2194:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2194:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2195:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2195:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2196:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2209:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2216:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2216:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2217:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2217:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2218:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2236:3: ( (lv_string_10_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2236:3: ( (lv_string_10_0= RULE_STRING ) )
                    // InternalKim.g:2237:4: (lv_string_10_0= RULE_STRING )
                    {
                    // InternalKim.g:2237:4: (lv_string_10_0= RULE_STRING )
                    // InternalKim.g:2238:5: lv_string_10_0= RULE_STRING
                    {
                    lv_string_10_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_10_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
                    // InternalKim.g:2257:5: lv_concept_11_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_11_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_11_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    {
                    // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    {
                    // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    int alt55=2;
                    alt55 = dfa55.predict(input);
                    switch (alt55) {
                        case 1 :
                            // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
                            {
                            lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_12_1, grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdLOWERCASE_IDTerminalRuleCall_5_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_12_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2293:6: lv_id_12_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_12_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_12_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2312:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2312:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    // InternalKim.g:2313:4: ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) )
                    {
                    // InternalKim.g:2313:4: ( (lv_op_13_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2314:5: (lv_op_13_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2314:5: (lv_op_13_0= ruleREL_OPERATOR )
                    // InternalKim.g:2315:6: lv_op_13_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_13_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_13_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2332:4: ( (lv_expression_14_0= ruleNumber ) )
                    // InternalKim.g:2333:5: (lv_expression_14_0= ruleNumber )
                    {
                    // InternalKim.g:2333:5: (lv_expression_14_0= ruleNumber )
                    // InternalKim.g:2334:6: lv_expression_14_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_14_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_14_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2353:3: ( (lv_nodata_15_0= 'unknown' ) )
                    {
                    // InternalKim.g:2353:3: ( (lv_nodata_15_0= 'unknown' ) )
                    // InternalKim.g:2354:4: (lv_nodata_15_0= 'unknown' )
                    {
                    // InternalKim.g:2354:4: (lv_nodata_15_0= 'unknown' )
                    // InternalKim.g:2355:5: lv_nodata_15_0= 'unknown'
                    {
                    lv_nodata_15_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_15_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getNodataUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_15_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2368:3: ( (lv_star_16_0= '*' ) )
                    {
                    // InternalKim.g:2368:3: ( (lv_star_16_0= '*' ) )
                    // InternalKim.g:2369:4: (lv_star_16_0= '*' )
                    {
                    // InternalKim.g:2369:4: (lv_star_16_0= '*' )
                    // InternalKim.g:2370:5: lv_star_16_0= '*'
                    {
                    lv_star_16_0=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_16_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStarAsteriskKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_16_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithIdNoSet"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2386:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2386:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2387:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2393:1: ruleUrn returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_strings_1_0=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_2 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2399:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) )
            // InternalKim.g:2400:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            {
            // InternalKim.g:2400:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_LOWERCASE_ID && LA59_0<=RULE_UPPERCASE_ID)||LA59_0==RULE_CAMELCASE_ID||LA59_0==RULE_LOWERCASE_DASHID||LA59_0==110) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_STRING) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2401:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    {
                    // InternalKim.g:2401:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    // InternalKim.g:2402:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    {
                    // InternalKim.g:2402:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    // InternalKim.g:2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    {
                    // InternalKim.g:2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    int alt57=3;
                    alt57 = dfa57.predict(input);
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2404:6: lv_name_0_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2420:6: lv_name_0_2= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_2=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_2,
                              							"org.integratedmodelling.kim.Kim.UrnId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:2436:6: lv_name_0_3= ruleLocalFilePath
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_0_2());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_3=ruleLocalFilePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_3,
                              							"org.integratedmodelling.kim.Kim.LocalFilePath");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2455:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    {
                    // InternalKim.g:2455:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==RULE_STRING) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalKim.g:2456:4: (lv_strings_1_0= RULE_STRING )
                    	    {
                    	    // InternalKim.g:2456:4: (lv_strings_1_0= RULE_STRING )
                    	    // InternalKim.g:2457:5: lv_strings_1_0= RULE_STRING
                    	    {
                    	    lv_strings_1_0=(Token)match(input,RULE_STRING,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(lv_strings_1_0, grammarAccess.getUrnAccess().getStringsSTRINGTerminalRuleCall_1_0());
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getUrnRule());
                    	      					}
                    	      					addWithLastConsumed(
                    	      						current,
                    	      						"strings",
                    	      						lv_strings_1_0,
                    	      						"org.eclipse.xtext.common.Terminals.STRING");
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2477:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2477:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2478:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2484:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_1 = null;

        EObject lv_table_2_2 = null;



        	enterRule();

        try {
            // InternalKim.g:2490:2: ( ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2491:2: ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2491:2: ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' )
            // InternalKim.g:2492:3: () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2492:3: ()
            // InternalKim.g:2493:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,56,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2506:3: ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=RULE_LOWERCASE_ID && LA61_0<=RULE_STRING)||(LA61_0>=RULE_EXPR && LA61_0<=RULE_LOWERCASE_DASHID)||LA61_0==RULE_UPPERCASE_PATH||(LA61_0>=30 && LA61_0<=31)||LA61_0==40||LA61_0==45||LA61_0==48||(LA61_0>=54 && LA61_0<=55)||LA61_0==59||(LA61_0>=82 && LA61_0<=85)||LA61_0==90||(LA61_0>=137 && LA61_0<=138)||(LA61_0>=146 && LA61_0<=147)||(LA61_0>=149 && LA61_0<=154)||(LA61_0>=156 && LA61_0<=167)||(LA61_0>=251 && LA61_0<=252)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalKim.g:2507:4: ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) )
                    {
                    // InternalKim.g:2507:4: ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) )
                    // InternalKim.g:2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )
                    {
                    // InternalKim.g:2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )
                    int alt60=2;
                    alt60 = dfa60.predict(input);
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2509:6: lv_table_2_1= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0_0());
                              					
                            }
                            pushFollow(FOLLOW_49);
                            lv_table_2_1=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getLookupTableRule());
                              						}
                              						set(
                              							current,
                              							"table",
                              							lv_table_2_1,
                              							"org.integratedmodelling.kim.Kim.Table");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2525:6: lv_table_2_2= ruleTwoWayTable
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTwoWayTableParserRuleCall_2_0_1());
                              					
                            }
                            pushFollow(FOLLOW_49);
                            lv_table_2_2=ruleTwoWayTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getLookupTableRule());
                              						}
                              						set(
                              							current,
                              							"table",
                              							lv_table_2_2,
                              							"org.integratedmodelling.kim.Kim.TwoWayTable");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2551:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2551:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2552:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2558:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2564:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2565:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2565:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalKim.g:2567:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2567:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2568:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2568:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2569:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2591:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2592:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2592:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2593:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2610:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==29) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalKim.g:2611:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,29,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2615:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2616:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2616:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2617:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleTwoWayTable"
    // InternalKim.g:2639:1: entryRuleTwoWayTable returns [EObject current=null] : iv_ruleTwoWayTable= ruleTwoWayTable EOF ;
    public final EObject entryRuleTwoWayTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTwoWayTable = null;


        try {
            // InternalKim.g:2639:52: (iv_ruleTwoWayTable= ruleTwoWayTable EOF )
            // InternalKim.g:2640:2: iv_ruleTwoWayTable= ruleTwoWayTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTwoWayTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTwoWayTable=ruleTwoWayTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTwoWayTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTwoWayTable"


    // $ANTLR start "ruleTwoWayTable"
    // InternalKim.g:2646:1: ruleTwoWayTable returns [EObject current=null] : ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTwoWayTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_columnClassifiers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2652:2: ( ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2653:2: ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2653:2: ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2654:3: ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2654:3: ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) )
            // InternalKim.g:2655:4: (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow )
            {
            // InternalKim.g:2655:4: (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow )
            // InternalKim.g:2656:5: lv_columnClassifiers_0_0= ruleTwoWayHeaderRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTwoWayTableAccess().getColumnClassifiersTwoWayHeaderRowParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_columnClassifiers_0_0=ruleTwoWayHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
              					}
              					set(
              						current,
              						"columnClassifiers",
              						lv_columnClassifiers_0_0,
              						"org.integratedmodelling.kim.Kim.TwoWayHeaderRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_SEPARATOR_1, grammarAccess.getTwoWayTableAccess().getSEPARATORTerminalRuleCall_1());
              		
            }
            // InternalKim.g:2677:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2678:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2678:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2679:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2696:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==29) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalKim.g:2697:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,29,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTwoWayTableAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKim.g:2701:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2702:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2702:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2703:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTwoWayTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2725:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2725:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2726:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2732:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2738:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2739:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2739:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2740:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2740:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2741:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2741:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2742:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2742:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_LOWERCASE_ID) ) {
                alt65=1;
            }
            else if ( (LA65_0==RULE_STRING) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalKim.g:2743:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2758:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2775:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==58) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalKim.g:2776:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,58,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2780:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2781:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2781:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2782:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2782:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt66=2;
            	    int LA66_0 = input.LA(1);

            	    if ( (LA66_0==RULE_LOWERCASE_ID) ) {
            	        alt66=1;
            	    }
            	    else if ( (LA66_0==RULE_STRING) ) {
            	        alt66=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt66) {
            	        case 1 :
            	            // InternalKim.g:2783:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_51); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2798:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_51); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2820:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2820:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2821:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2827:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2833:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2834:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2834:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2835:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2835:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2836:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2836:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2837:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2854:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==58) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalKim.g:2855:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,58,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2859:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2860:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2860:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2861:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTwoWayHeaderRow"
    // InternalKim.g:2883:1: entryRuleTwoWayHeaderRow returns [EObject current=null] : iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF ;
    public final EObject entryRuleTwoWayHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTwoWayHeaderRow = null;


        try {
            // InternalKim.g:2883:56: (iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF )
            // InternalKim.g:2884:2: iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTwoWayHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTwoWayHeaderRow=ruleTwoWayHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTwoWayHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTwoWayHeaderRow"


    // $ANTLR start "ruleTwoWayHeaderRow"
    // InternalKim.g:2890:1: ruleTwoWayHeaderRow returns [EObject current=null] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ ) ;
    public final EObject ruleTwoWayHeaderRow() throws RecognitionException {
        EObject current = null;

        Token this_LOWERCASE_ID_0=null;
        Token otherlv_2=null;
        EObject this_TableClassifier_1 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2896:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ ) )
            // InternalKim.g:2897:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ )
            {
            // InternalKim.g:2897:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ )
            // InternalKim.g:2898:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+
            {
            // InternalKim.g:2898:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_LOWERCASE_ID) ) {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==111||LA69_1==114) ) {
                    alt69=2;
                }
                else if ( (LA69_1==58) ) {
                    alt69=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA69_0>=RULE_UPPERCASE_ID && LA69_0<=RULE_STRING)||(LA69_0>=RULE_EXPR && LA69_0<=RULE_LOWERCASE_DASHID)||LA69_0==RULE_UPPERCASE_PATH||(LA69_0>=30 && LA69_0<=31)||LA69_0==40||LA69_0==45||LA69_0==48||(LA69_0>=54 && LA69_0<=55)||LA69_0==59||(LA69_0>=82 && LA69_0<=85)||LA69_0==90||(LA69_0>=137 && LA69_0<=138)||(LA69_0>=146 && LA69_0<=147)||(LA69_0>=149 && LA69_0<=154)||(LA69_0>=156 && LA69_0<=167)||(LA69_0>=251 && LA69_0<=252)) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalKim.g:2899:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getTwoWayHeaderRowAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2904:4: this_TableClassifier_1= ruleTableClassifier
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getTableClassifierParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_53);
                    this_TableClassifier_1=ruleTableClassifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TableClassifier_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2916:3: (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+
            int cnt70=0;
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==58) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalKim.g:2917:4: otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) )
            	    {
            	    otherlv_2=(Token)match(input,58,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTwoWayHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2921:4: ( (lv_elements_3_0= ruleTableClassifier ) )
            	    // InternalKim.g:2922:5: (lv_elements_3_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2922:5: (lv_elements_3_0= ruleTableClassifier )
            	    // InternalKim.g:2923:6: lv_elements_3_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_elements_3_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTwoWayHeaderRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt70 >= 1 ) break loop70;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(70, input);
                        throw eee;
                }
                cnt70++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTwoWayHeaderRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2945:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2945:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2946:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2952:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token lv_string_14_0=null;
        Token lv_expr_18_0=null;
        Token lv_nodata_19_0=null;
        Token lv_star_20_0=null;
        Token lv_anything_21_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_date_11_0 = null;

        EObject lv_set_13_0 = null;

        EObject lv_concept_15_0 = null;

        EObject lv_op_16_0 = null;

        EObject lv_expression_17_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2958:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) )
            // InternalKim.g:2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            {
            // InternalKim.g:2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            int alt74=13;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalKim.g:2960:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2960:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==30) ) {
                        alt71=1;
                    }
                    else if ( (LA71_0==31) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:2961:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2961:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2962:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2962:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2963:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2976:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2976:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2977:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2977:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2978:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2992:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2992:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2993:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2993:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2994:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2994:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2995:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3012:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt72=3;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==52) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==53) ) {
                        alt72=2;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKim.g:3013:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:3013:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:3014:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:3014:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:3015:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3028:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,53,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:3033:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:3034:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:3040:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:3041:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:3045:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:3046:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3063:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt73=3;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==52) ) {
                        alt73=1;
                    }
                    else if ( (LA73_0==53) ) {
                        alt73=2;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3064:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:3064:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:3065:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:3065:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:3066:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3079:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3086:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:3086:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:3087:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:3087:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:3088:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3106:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:3106:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:3107:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:3107:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:3108:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3126:3: ( (lv_date_11_0= ruleDate ) )
                    {
                    // InternalKim.g:3126:3: ( (lv_date_11_0= ruleDate ) )
                    // InternalKim.g:3127:4: (lv_date_11_0= ruleDate )
                    {
                    // InternalKim.g:3127:4: (lv_date_11_0= ruleDate )
                    // InternalKim.g:3128:5: lv_date_11_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_11_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_11_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3146:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    {
                    // InternalKim.g:3146:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    // InternalKim.g:3147:4: otherlv_12= 'in' ( (lv_set_13_0= ruleList ) )
                    {
                    otherlv_12=(Token)match(input,54,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTableClassifierAccess().getInKeyword_5_0());
                      			
                    }
                    // InternalKim.g:3151:4: ( (lv_set_13_0= ruleList ) )
                    // InternalKim.g:3152:5: (lv_set_13_0= ruleList )
                    {
                    // InternalKim.g:3152:5: (lv_set_13_0= ruleList )
                    // InternalKim.g:3153:6: lv_set_13_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_13_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_13_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:3172:3: ( (lv_string_14_0= RULE_STRING ) )
                    {
                    // InternalKim.g:3172:3: ( (lv_string_14_0= RULE_STRING ) )
                    // InternalKim.g:3173:4: (lv_string_14_0= RULE_STRING )
                    {
                    // InternalKim.g:3173:4: (lv_string_14_0= RULE_STRING )
                    // InternalKim.g:3174:5: lv_string_14_0= RULE_STRING
                    {
                    lv_string_14_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_14_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_14_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:3191:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:3191:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:3192:4: (lv_concept_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:3192:4: (lv_concept_15_0= ruleConceptDeclaration )
                    // InternalKim.g:3193:5: lv_concept_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_15_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:3211:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:3211:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    // InternalKim.g:3212:4: ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) )
                    {
                    // InternalKim.g:3212:4: ( (lv_op_16_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:3213:5: (lv_op_16_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:3213:5: (lv_op_16_0= ruleREL_OPERATOR )
                    // InternalKim.g:3214:6: lv_op_16_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_16_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_16_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3231:4: ( (lv_expression_17_0= ruleNumber ) )
                    // InternalKim.g:3232:5: (lv_expression_17_0= ruleNumber )
                    {
                    // InternalKim.g:3232:5: (lv_expression_17_0= ruleNumber )
                    // InternalKim.g:3233:6: lv_expression_17_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_17_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_17_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:3252:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:3252:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    // InternalKim.g:3253:4: (lv_expr_18_0= RULE_EXPR )
                    {
                    // InternalKim.g:3253:4: (lv_expr_18_0= RULE_EXPR )
                    // InternalKim.g:3254:5: lv_expr_18_0= RULE_EXPR
                    {
                    lv_expr_18_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_18_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:3271:3: ( (lv_nodata_19_0= 'unknown' ) )
                    {
                    // InternalKim.g:3271:3: ( (lv_nodata_19_0= 'unknown' ) )
                    // InternalKim.g:3272:4: (lv_nodata_19_0= 'unknown' )
                    {
                    // InternalKim.g:3272:4: (lv_nodata_19_0= 'unknown' )
                    // InternalKim.g:3273:5: lv_nodata_19_0= 'unknown'
                    {
                    lv_nodata_19_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_19_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:3286:3: ( (lv_star_20_0= '*' ) )
                    {
                    // InternalKim.g:3286:3: ( (lv_star_20_0= '*' ) )
                    // InternalKim.g:3287:4: (lv_star_20_0= '*' )
                    {
                    // InternalKim.g:3287:4: (lv_star_20_0= '*' )
                    // InternalKim.g:3288:5: lv_star_20_0= '*'
                    {
                    lv_star_20_0=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_20_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:3301:3: ( (lv_anything_21_0= '#' ) )
                    {
                    // InternalKim.g:3301:3: ( (lv_anything_21_0= '#' ) )
                    // InternalKim.g:3302:4: (lv_anything_21_0= '#' )
                    {
                    // InternalKim.g:3302:4: (lv_anything_21_0= '#' )
                    // InternalKim.g:3303:5: lv_anything_21_0= '#'
                    {
                    lv_anything_21_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", lv_anything_21_0 != null, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:3319:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:3319:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:3320:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:3326:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token lv_over_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_instantiation_10_0=null;
        Token lv_termination_11_0=null;
        Token otherlv_13=null;
        Token lv_anyContextEvent_14_0=null;
        Token lv_relatedEventContext_15_0=null;
        Token otherlv_19=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_12_0 = null;

        EObject lv_eventContext_16_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_actions_18_0 = null;

        EObject lv_actions_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3332:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) )
            // InternalKim.g:3333:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            {
            // InternalKim.g:3333:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=60 && LA85_0<=61)) ) {
                alt85=1;
            }
            else if ( (LA85_0==62||(LA85_0>=68 && LA85_0<=73)) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalKim.g:3334:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:3334:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:3335:4: ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:3335:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==60) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3336:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:3336:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:3337:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,60,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", lv_integrated_0_0 != null, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3349:4: ( (lv_over_1_0= 'over' ) )
                    // InternalKim.g:3350:5: (lv_over_1_0= 'over' )
                    {
                    // InternalKim.g:3350:5: (lv_over_1_0= 'over' )
                    // InternalKim.g:3351:6: lv_over_1_0= 'over'
                    {
                    lv_over_1_0=(Token)match(input,61,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "over", lv_over_1_0 != null, "over");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3363:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:3364:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:3364:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:3365:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3382:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==29) ) {
                            alt76=1;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalKim.g:3383:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:3383:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:3384:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3390:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:3391:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:3391:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:3392:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop76;
                        }
                    } while (true);

                    // InternalKim.g:3410:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt78=2;
                    alt78 = dfa78.predict(input);
                    switch (alt78) {
                        case 1 :
                            // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:3413:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_40);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:3430:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==29) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:3432:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,29,FOLLOW_56); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:3438:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:3440:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_40);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3461:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    {
                    // InternalKim.g:3461:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    // InternalKim.g:3462:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    {
                    // InternalKim.g:3462:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==62) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3463:5: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )?
                            {
                            // InternalKim.g:3463:5: ( (lv_trigger_8_0= 'on' ) )
                            // InternalKim.g:3464:6: (lv_trigger_8_0= 'on' )
                            {
                            // InternalKim.g:3464:6: (lv_trigger_8_0= 'on' )
                            // InternalKim.g:3465:7: lv_trigger_8_0= 'on'
                            {
                            lv_trigger_8_0=(Token)match(input,62,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "trigger", lv_trigger_8_0 != null, "on");
                              						
                            }

                            }


                            }

                            // InternalKim.g:3477:5: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) )
                            int alt81=4;
                            switch ( input.LA(1) ) {
                            case 63:
                                {
                                alt81=1;
                                }
                                break;
                            case 64:
                                {
                                alt81=2;
                                }
                                break;
                            case 65:
                                {
                                alt81=3;
                                }
                                break;
                            case RULE_LOWERCASE_ID:
                            case RULE_UPPERCASE_ID:
                            case RULE_CAMELCASE_ID:
                            case RULE_LOWERCASE_DASHID:
                            case RULE_UPPERCASE_PATH:
                            case 40:
                            case 137:
                            case 138:
                            case 146:
                            case 147:
                            case 149:
                            case 150:
                            case 151:
                            case 152:
                            case 153:
                            case 154:
                            case 156:
                            case 157:
                            case 158:
                            case 159:
                            case 160:
                            case 161:
                            case 162:
                            case 163:
                            case 164:
                            case 165:
                            case 166:
                            case 167:
                                {
                                alt81=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }

                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3478:6: ( (lv_initialization_9_0= 'definition' ) )
                                    {
                                    // InternalKim.g:3478:6: ( (lv_initialization_9_0= 'definition' ) )
                                    // InternalKim.g:3479:7: (lv_initialization_9_0= 'definition' )
                                    {
                                    // InternalKim.g:3479:7: (lv_initialization_9_0= 'definition' )
                                    // InternalKim.g:3480:8: lv_initialization_9_0= 'definition'
                                    {
                                    lv_initialization_9_0=(Token)match(input,63,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "initialization", lv_initialization_9_0 != null, "definition");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3493:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    {
                                    // InternalKim.g:3493:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    // InternalKim.g:3494:7: (lv_instantiation_10_0= 'instantiation' )
                                    {
                                    // InternalKim.g:3494:7: (lv_instantiation_10_0= 'instantiation' )
                                    // InternalKim.g:3495:8: lv_instantiation_10_0= 'instantiation'
                                    {
                                    lv_instantiation_10_0=(Token)match(input,64,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "instantiation", lv_instantiation_10_0 != null, "instantiation");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3508:6: ( (lv_termination_11_0= 'termination' ) )
                                    {
                                    // InternalKim.g:3508:6: ( (lv_termination_11_0= 'termination' ) )
                                    // InternalKim.g:3509:7: (lv_termination_11_0= 'termination' )
                                    {
                                    // InternalKim.g:3509:7: (lv_termination_11_0= 'termination' )
                                    // InternalKim.g:3510:8: lv_termination_11_0= 'termination'
                                    {
                                    lv_termination_11_0=(Token)match(input,65,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "termination", lv_termination_11_0 != null, "termination");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:3523:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    {
                                    // InternalKim.g:3523:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    // InternalKim.g:3524:7: ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    {
                                    // InternalKim.g:3524:7: ( (lv_event_12_0= ruleConceptDeclaration ) )
                                    // InternalKim.g:3525:8: (lv_event_12_0= ruleConceptDeclaration )
                                    {
                                    // InternalKim.g:3525:8: (lv_event_12_0= ruleConceptDeclaration )
                                    // InternalKim.g:3526:9: lv_event_12_0= ruleConceptDeclaration
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_59);
                                    lv_event_12_0=ruleConceptDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      									}
                                      									set(
                                      										current,
                                      										"event",
                                      										lv_event_12_0,
                                      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:3543:7: (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    int alt80=2;
                                    int LA80_0 = input.LA(1);

                                    if ( (LA80_0==54) ) {
                                        alt80=1;
                                    }
                                    switch (alt80) {
                                        case 1 :
                                            // InternalKim.g:3544:8: otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            {
                                            otherlv_13=(Token)match(input,54,FOLLOW_60); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
                                              							
                                            }
                                            // InternalKim.g:3548:8: ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) )
                                            int alt79=2;
                                            int LA79_0 = input.LA(1);

                                            if ( (LA79_0==66) ) {
                                                alt79=1;
                                            }
                                            else if ( (LA79_0==67) ) {
                                                alt79=2;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return current;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 79, 0, input);

                                                throw nvae;
                                            }
                                            switch (alt79) {
                                                case 1 :
                                                    // InternalKim.g:3549:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    {
                                                    // InternalKim.g:3549:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    // InternalKim.g:3550:10: (lv_anyContextEvent_14_0= 'context' )
                                                    {
                                                    // InternalKim.g:3550:10: (lv_anyContextEvent_14_0= 'context' )
                                                    // InternalKim.g:3551:11: lv_anyContextEvent_14_0= 'context'
                                                    {
                                                    lv_anyContextEvent_14_0=(Token)match(input,66,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "anyContextEvent", lv_anyContextEvent_14_0 != null, "context");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;
                                                case 2 :
                                                    // InternalKim.g:3564:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    {
                                                    // InternalKim.g:3564:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    // InternalKim.g:3565:10: (lv_relatedEventContext_15_0= 'related' )
                                                    {
                                                    // InternalKim.g:3565:10: (lv_relatedEventContext_15_0= 'related' )
                                                    // InternalKim.g:3566:11: lv_relatedEventContext_15_0= 'related'
                                                    {
                                                    lv_relatedEventContext_15_0=(Token)match(input,67,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "relatedEventContext", lv_relatedEventContext_15_0 != null, "related");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;

                                            }

                                            // InternalKim.g:3579:8: ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3580:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3580:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            // InternalKim.g:3581:10: lv_eventContext_16_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_58);
                                            lv_eventContext_16_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										set(
                                              											current,
                                              											"eventContext",
                                              											lv_eventContext_16_0,
                                              											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:3601:5: ( (lv_parameters_17_0= ruleList ) )?
                            int alt82=2;
                            int LA82_0 = input.LA(1);

                            if ( (LA82_0==40) ) {
                                alt82=1;
                            }
                            switch (alt82) {
                                case 1 :
                                    // InternalKim.g:3602:6: (lv_parameters_17_0= ruleList )
                                    {
                                    // InternalKim.g:3602:6: (lv_parameters_17_0= ruleList )
                                    // InternalKim.g:3603:7: lv_parameters_17_0= ruleList
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
                                      						
                                    }
                                    pushFollow(FOLLOW_56);
                                    lv_parameters_17_0=ruleList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"parameters",
                                      								lv_parameters_17_0,
                                      								"org.integratedmodelling.kim.Kim.List");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3621:4: ( (lv_actions_18_0= ruleAction ) )
                    // InternalKim.g:3622:5: (lv_actions_18_0= ruleAction )
                    {
                    // InternalKim.g:3622:5: (lv_actions_18_0= ruleAction )
                    // InternalKim.g:3623:6: lv_actions_18_0= ruleAction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_actions_18_0=ruleAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"actions",
                      							lv_actions_18_0,
                      							"org.integratedmodelling.kim.Kim.Action");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3640:4: ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==29) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalKim.g:3641:5: ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) )
                    	    {
                    	    // InternalKim.g:3641:5: ( ( ',' )=>otherlv_19= ',' )
                    	    // InternalKim.g:3642:6: ( ',' )=>otherlv_19= ','
                    	    {
                    	    otherlv_19=(Token)match(input,29,FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3648:5: ( (lv_actions_20_0= ruleAction ) )
                    	    // InternalKim.g:3649:6: (lv_actions_20_0= ruleAction )
                    	    {
                    	    // InternalKim.g:3649:6: (lv_actions_20_0= ruleAction )
                    	    // InternalKim.g:3650:7: lv_actions_20_0= ruleAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_actions_20_0=ruleAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"org.integratedmodelling.kim.Kim.Action");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3673:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3673:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3674:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3680:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3686:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3687:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3687:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt87=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA87_1 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA87_2 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                int LA87_3 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3690:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3708:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3708:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3709:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3709:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3710:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3710:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==RULE_LOWERCASE_ID) ) {
                        int LA86_1 = input.LA(2);

                        if ( (LA86_1==EOF||(LA86_1>=RULE_LOWERCASE_ID && LA86_1<=RULE_STRING)||LA86_1==RULE_CAMELCASE_ID||LA86_1==RULE_LOWERCASE_DASHID||LA86_1==RULE_UPPERCASE_PATH||LA86_1==22||LA86_1==29||LA86_1==33||(LA86_1>=40 && LA86_1<=41)||LA86_1==43||(LA86_1>=60 && LA86_1<=62)||(LA86_1>=68 && LA86_1<=73)||LA86_1==110||(LA86_1>=137 && LA86_1<=138)||(LA86_1>=146 && LA86_1<=147)||(LA86_1>=149 && LA86_1<=154)||(LA86_1>=156 && LA86_1<=167)) ) {
                            alt86=1;
                        }
                        else if ( (LA86_1==111||LA86_1==114) ) {
                            alt86=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 86, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA86_0==RULE_UPPERCASE_ID||LA86_0==RULE_LOWERCASE_DASHID) ) {
                        alt86=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 86, 0, input);

                        throw nvae;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3711:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3726:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3748:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3748:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3749:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3755:1: ruleAction returns [EObject current=null] : ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_set_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_conditionNegative_5_0=null;
        Token lv_integrate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_conditionNegative_12_0=null;
        Token lv_do_14_1=null;
        Token lv_do_14_2=null;
        Token lv_do_14_3=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_conditionNegative_19_0=null;
        Token lv_move_21_0=null;
        Token lv_away_23_0=null;
        EObject lv_assignments_1_0 = null;

        EObject lv_assignments_3_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_assignments_8_0 = null;

        EObject lv_assignments_10_0 = null;

        EObject lv_condition_13_0 = null;

        EObject lv_executed_15_0 = null;

        EObject lv_executed_17_0 = null;

        EObject lv_condition_20_0 = null;

        EObject lv_where_22_0 = null;

        EObject lv_condition_24_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3761:2: ( ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) )
            // InternalKim.g:3762:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3762:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            int alt100=4;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt100=1;
                }
                break;
            case 69:
                {
                alt100=2;
                }
                break;
            case 70:
            case 71:
            case 72:
                {
                alt100=3;
                }
                break;
            case 73:
                {
                alt100=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalKim.g:3763:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3763:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    // InternalKim.g:3764:4: ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3764:4: ( (lv_set_0_0= 'set' ) )
                    // InternalKim.g:3765:5: (lv_set_0_0= 'set' )
                    {
                    // InternalKim.g:3765:5: (lv_set_0_0= 'set' )
                    // InternalKim.g:3766:6: lv_set_0_0= 'set'
                    {
                    lv_set_0_0=(Token)match(input,68,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "set", lv_set_0_0 != null, "set");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3778:4: ( (lv_assignments_1_0= ruleValueAssignment ) )
                    // InternalKim.g:3779:5: (lv_assignments_1_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3779:5: (lv_assignments_1_0= ruleValueAssignment )
                    // InternalKim.g:3780:6: lv_assignments_1_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_assignments_1_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_1_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3797:4: (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==29) ) {
                            int LA88_2 = input.LA(2);

                            if ( ((LA88_2>=RULE_LOWERCASE_ID && LA88_2<=RULE_STRING)||(LA88_2>=RULE_EXPR && LA88_2<=RULE_ID)||(LA88_2>=29 && LA88_2<=31)||LA88_2==38||LA88_2==40||LA88_2==55||(LA88_2>=251 && LA88_2<=252)) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalKim.g:3798:5: otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_2=(Token)match(input,29,FOLLOW_61); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3802:5: ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3803:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3803:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    // InternalKim.g:3804:7: lv_assignments_3_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_assignments_3_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    // InternalKim.g:3822:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( ((LA90_0>=50 && LA90_0<=51)) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3823:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) )
                            {
                            // InternalKim.g:3823:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) )
                            // InternalKim.g:3824:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3834:6: (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            int alt89=2;
                            int LA89_0 = input.LA(1);

                            if ( (LA89_0==50) ) {
                                alt89=1;
                            }
                            else if ( (LA89_0==51) ) {
                                alt89=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 89, 0, input);

                                throw nvae;
                            }
                            switch (alt89) {
                                case 1 :
                                    // InternalKim.g:3835:7: otherlv_4= 'if'
                                    {
                                    otherlv_4=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3840:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3840:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    // InternalKim.g:3841:8: (lv_conditionNegative_5_0= 'unless' )
                                    {
                                    // InternalKim.g:3841:8: (lv_conditionNegative_5_0= 'unless' )
                                    // InternalKim.g:3842:9: lv_conditionNegative_5_0= 'unless'
                                    {
                                    lv_conditionNegative_5_0=(Token)match(input,51,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_5_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3856:5: ( (lv_condition_6_0= ruleValue ) )
                            // InternalKim.g:3857:6: (lv_condition_6_0= ruleValue )
                            {
                            // InternalKim.g:3857:6: (lv_condition_6_0= ruleValue )
                            // InternalKim.g:3858:7: lv_condition_6_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_6_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_6_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3878:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3878:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    // InternalKim.g:3879:4: ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3879:4: ( (lv_integrate_7_0= 'integrate' ) )
                    // InternalKim.g:3880:5: (lv_integrate_7_0= 'integrate' )
                    {
                    // InternalKim.g:3880:5: (lv_integrate_7_0= 'integrate' )
                    // InternalKim.g:3881:6: lv_integrate_7_0= 'integrate'
                    {
                    lv_integrate_7_0=(Token)match(input,69,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", lv_integrate_7_0 != null, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3893:4: ( (lv_assignments_8_0= ruleValueAssignment ) )
                    // InternalKim.g:3894:5: (lv_assignments_8_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3894:5: (lv_assignments_8_0= ruleValueAssignment )
                    // InternalKim.g:3895:6: lv_assignments_8_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_assignments_8_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_8_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3912:4: (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )*
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==29) ) {
                            int LA91_2 = input.LA(2);

                            if ( ((LA91_2>=RULE_LOWERCASE_ID && LA91_2<=RULE_STRING)||(LA91_2>=RULE_EXPR && LA91_2<=RULE_ID)||(LA91_2>=29 && LA91_2<=31)||LA91_2==38||LA91_2==40||LA91_2==55||(LA91_2>=251 && LA91_2<=252)) ) {
                                alt91=1;
                            }


                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalKim.g:3913:5: otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_9=(Token)match(input,29,FOLLOW_61); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3917:5: ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3918:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3918:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    // InternalKim.g:3919:7: lv_assignments_10_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_assignments_10_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_10_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop91;
                        }
                    } while (true);

                    // InternalKim.g:3937:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( ((LA93_0>=50 && LA93_0<=51)) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalKim.g:3938:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) )
                            {
                            // InternalKim.g:3938:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) )
                            // InternalKim.g:3939:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3949:6: (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            int alt92=2;
                            int LA92_0 = input.LA(1);

                            if ( (LA92_0==50) ) {
                                alt92=1;
                            }
                            else if ( (LA92_0==51) ) {
                                alt92=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 92, 0, input);

                                throw nvae;
                            }
                            switch (alt92) {
                                case 1 :
                                    // InternalKim.g:3950:7: otherlv_11= 'if'
                                    {
                                    otherlv_11=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3955:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3955:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    // InternalKim.g:3956:8: (lv_conditionNegative_12_0= 'unless' )
                                    {
                                    // InternalKim.g:3956:8: (lv_conditionNegative_12_0= 'unless' )
                                    // InternalKim.g:3957:9: lv_conditionNegative_12_0= 'unless'
                                    {
                                    lv_conditionNegative_12_0=(Token)match(input,51,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_12_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3971:5: ( (lv_condition_13_0= ruleValue ) )
                            // InternalKim.g:3972:6: (lv_condition_13_0= ruleValue )
                            {
                            // InternalKim.g:3972:6: (lv_condition_13_0= ruleValue )
                            // InternalKim.g:3973:7: lv_condition_13_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_13_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_13_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3993:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3993:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    // InternalKim.g:3994:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3994:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) )
                    // InternalKim.g:3995:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    {
                    // InternalKim.g:3995:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    // InternalKim.g:3996:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    {
                    // InternalKim.g:3996:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    int alt94=3;
                    switch ( input.LA(1) ) {
                    case 70:
                        {
                        alt94=1;
                        }
                        break;
                    case 71:
                        {
                        alt94=2;
                        }
                        break;
                    case 72:
                        {
                        alt94=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }

                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:3997:7: lv_do_14_1= 'do'
                            {
                            lv_do_14_1=(Token)match(input,70,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_1 != null, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4008:7: lv_do_14_2= 'then'
                            {
                            lv_do_14_2=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_2 != null, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:4019:7: lv_do_14_3= 'finally'
                            {
                            lv_do_14_3=(Token)match(input,72,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_3 != null, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:4032:4: ( (lv_executed_15_0= ruleValueExecution ) )
                    // InternalKim.g:4033:5: (lv_executed_15_0= ruleValueExecution )
                    {
                    // InternalKim.g:4033:5: (lv_executed_15_0= ruleValueExecution )
                    // InternalKim.g:4034:6: lv_executed_15_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_executed_15_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_15_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4051:4: (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )*
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==29) ) {
                            int LA95_2 = input.LA(2);

                            if ( ((LA95_2>=RULE_LOWERCASE_ID && LA95_2<=RULE_STRING)||LA95_2==RULE_EXPR||LA95_2==RULE_LOWERCASE_DASHID||LA95_2==110) ) {
                                alt95=1;
                            }


                        }


                        switch (alt95) {
                    	case 1 :
                    	    // InternalKim.g:4052:5: otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_16=(Token)match(input,29,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:4056:5: ( (lv_executed_17_0= ruleValueExecution ) )
                    	    // InternalKim.g:4057:6: (lv_executed_17_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:4057:6: (lv_executed_17_0= ruleValueExecution )
                    	    // InternalKim.g:4058:7: lv_executed_17_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_executed_17_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    // InternalKim.g:4076:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( ((LA97_0>=50 && LA97_0<=51)) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalKim.g:4077:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) )
                            {
                            // InternalKim.g:4077:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) )
                            // InternalKim.g:4078:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            {
                            // InternalKim.g:4088:6: (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            int alt96=2;
                            int LA96_0 = input.LA(1);

                            if ( (LA96_0==50) ) {
                                alt96=1;
                            }
                            else if ( (LA96_0==51) ) {
                                alt96=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 96, 0, input);

                                throw nvae;
                            }
                            switch (alt96) {
                                case 1 :
                                    // InternalKim.g:4089:7: otherlv_18= 'if'
                                    {
                                    otherlv_18=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4094:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    {
                                    // InternalKim.g:4094:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    // InternalKim.g:4095:8: (lv_conditionNegative_19_0= 'unless' )
                                    {
                                    // InternalKim.g:4095:8: (lv_conditionNegative_19_0= 'unless' )
                                    // InternalKim.g:4096:9: lv_conditionNegative_19_0= 'unless'
                                    {
                                    lv_conditionNegative_19_0=(Token)match(input,51,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_19_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:4110:5: ( (lv_condition_20_0= ruleValue ) )
                            // InternalKim.g:4111:6: (lv_condition_20_0= ruleValue )
                            {
                            // InternalKim.g:4111:6: (lv_condition_20_0= ruleValue )
                            // InternalKim.g:4112:7: lv_condition_20_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_20_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_20_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:4132:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    {
                    // InternalKim.g:4132:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    // InternalKim.g:4133:4: ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    {
                    // InternalKim.g:4133:4: ( (lv_move_21_0= 'move' ) )
                    // InternalKim.g:4134:5: (lv_move_21_0= 'move' )
                    {
                    // InternalKim.g:4134:5: (lv_move_21_0= 'move' )
                    // InternalKim.g:4135:6: lv_move_21_0= 'move'
                    {
                    lv_move_21_0=(Token)match(input,73,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", lv_move_21_0 != null, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4147:4: ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) )
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( ((LA98_0>=RULE_LOWERCASE_ID && LA98_0<=RULE_STRING)||(LA98_0>=RULE_EXPR && LA98_0<=RULE_ID)||(LA98_0>=29 && LA98_0<=31)||LA98_0==40||(LA98_0>=55 && LA98_0<=56)||LA98_0==216||(LA98_0>=251 && LA98_0<=252)) ) {
                        alt98=1;
                    }
                    else if ( (LA98_0==74) ) {
                        alt98=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                        throw nvae;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalKim.g:4148:5: ( (lv_where_22_0= ruleValue ) )
                            {
                            // InternalKim.g:4148:5: ( (lv_where_22_0= ruleValue ) )
                            // InternalKim.g:4149:6: (lv_where_22_0= ruleValue )
                            {
                            // InternalKim.g:4149:6: (lv_where_22_0= ruleValue )
                            // InternalKim.g:4150:7: lv_where_22_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_where_22_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_22_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:4168:5: ( (lv_away_23_0= 'away' ) )
                            {
                            // InternalKim.g:4168:5: ( (lv_away_23_0= 'away' ) )
                            // InternalKim.g:4169:6: (lv_away_23_0= 'away' )
                            {
                            // InternalKim.g:4169:6: (lv_away_23_0= 'away' )
                            // InternalKim.g:4170:7: lv_away_23_0= 'away'
                            {
                            lv_away_23_0=(Token)match(input,74,FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", lv_away_23_0 != null, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4183:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    int alt99=2;
                    alt99 = dfa99.predict(input);
                    switch (alt99) {
                        case 1 :
                            // InternalKim.g:4184:5: ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue )
                            {
                            // InternalKim.g:4188:5: (lv_condition_24_0= ruleValue )
                            // InternalKim.g:4189:6: lv_condition_24_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_24_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_24_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:4211:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:4211:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:4212:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:4218:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4224:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:4225:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:4225:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:4226:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:4226:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_LOWERCASE_ID) ) {
                int LA102_1 = input.LA(2);

                if ( (LA102_1==38) ) {
                    alt102=1;
                }
            }
            else if ( (LA102_0==38) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKim.g:4227:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:4227:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==RULE_LOWERCASE_ID) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalKim.g:4228:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:4228:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:4229:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,38,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4250:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:4251:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:4251:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:4252:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:4273:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:4273:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:4274:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:4280:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4286:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt106=6;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4288:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:4288:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:4289:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:4289:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:4290:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:4310:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4328:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4328:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4329:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4329:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:4330:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:4330:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:4331:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4347:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==54) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalKim.g:4348:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,54,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:4352:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4353:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4353:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4354:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4354:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt103=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt103=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt103=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt103=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 103, 0, input);

                                throw nvae;
                            }

                            switch (alt103) {
                                case 1 :
                                    // InternalKim.g:4355:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4370:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4385:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt105=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt105=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt105=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt105=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 105, 0, input);

                        throw nvae;
                    }

                    switch (alt105) {
                        case 1 :
                            // InternalKim.g:4408:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4423:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:4438:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:4456:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:4456:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:4457:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:4457:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:4458:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:4476:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:4476:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:4477:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:4477:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:4478:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_7_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4494:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4494:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4495:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4501:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4507:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4508:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4508:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4509:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4509:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4510:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4510:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4511:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4528:3: (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==75) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalKim.g:4529:4: otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,75,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4533:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4534:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4534:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4535:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4556:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4556:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4557:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4563:1: ruleExecutableValue returns [EObject current=null] : ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        Token lv_urn_4_2=null;
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_1 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4569:2: ( ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) )
            // InternalKim.g:4570:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            {
            // InternalKim.g:4570:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            // InternalKim.g:4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            {
            // InternalKim.g:4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )
            int alt111=3;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalKim.g:4572:4: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4572:4: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4573:5: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4573:5: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4574:6: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_68);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_0_0,
                      							"org.integratedmodelling.kim.Kim.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4592:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4592:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4593:5: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4593:5: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4594:6: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4594:6: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4595:7: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecutableValueRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:4611:5: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==54) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalKim.g:4612:6: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,54,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
                              					
                            }
                            // InternalKim.g:4616:6: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4617:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4617:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4618:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4618:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt108=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt108=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt108=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt108=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 108, 0, input);

                                throw nvae;
                            }

                            switch (alt108) {
                                case 1 :
                                    // InternalKim.g:4619:9: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_1,
                                      										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4634:9: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4649:9: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_3,
                                      										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4669:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    {
                    // InternalKim.g:4669:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    // InternalKim.g:4670:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    {
                    // InternalKim.g:4670:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    // InternalKim.g:4671:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    {
                    // InternalKim.g:4671:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=RULE_LOWERCASE_ID && LA110_0<=RULE_UPPERCASE_ID)||LA110_0==RULE_LOWERCASE_DASHID||LA110_0==110) ) {
                        alt110=1;
                    }
                    else if ( (LA110_0==RULE_STRING) ) {
                        alt110=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 110, 0, input);

                        throw nvae;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalKim.g:4672:7: lv_urn_4_1= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_68);
                            lv_urn_4_1=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                              							}
                              							set(
                              								current,
                              								"urn",
                              								lv_urn_4_1,
                              								"org.integratedmodelling.kim.Kim.UrnId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4688:7: lv_urn_4_2= RULE_STRING
                            {
                            lv_urn_4_2=(Token)match(input,RULE_STRING,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_urn_4_2, grammarAccess.getExecutableValueAccess().getUrnSTRINGTerminalRuleCall_0_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"urn",
                              								lv_urn_4_2,
                              								"org.eclipse.xtext.common.Terminals.STRING");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4706:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
                    {
                    // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==50) ) {
                        alt112=1;
                    }
                    else if ( (LA112_0==51) ) {
                        alt112=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 112, 0, input);

                        throw nvae;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalKim.g:4708:5: otherlv_5= 'if'
                            {
                            otherlv_5=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            {
                            // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                            {
                            // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                            // InternalKim.g:4715:7: lv_conditionNegated_6_0= 'unless'
                            {
                            lv_conditionNegated_6_0=(Token)match(input,51,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(current, "conditionNegated", lv_conditionNegated_6_0 != null, "unless");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4728:4: ( (lv_condition_7_0= ruleValue ) )
                    // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
                    {
                    // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
                    // InternalKim.g:4730:6: lv_condition_7_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_7_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4752:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4752:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4753:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4759:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4765:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4766:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4766:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            int alt114=6;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt114=1;
                }
                break;
            case 77:
                {
                alt114=2;
                }
                break;
            case 78:
                {
                alt114=3;
                }
                break;
            case 79:
                {
                alt114=4;
                }
                break;
            case 80:
                {
                alt114=5;
                }
                break;
            case 81:
                {
                alt114=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // InternalKim.g:4767:3: kw= 'model'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4773:3: kw= 'learn'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4779:3: kw= 'number'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4785:3: kw= 'object'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4791:3: kw= 'text'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4797:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleVALUE_OPERATOR"
    // InternalKim.g:4806:1: entryRuleVALUE_OPERATOR returns [String current=null] : iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF ;
    public final String entryRuleVALUE_OPERATOR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVALUE_OPERATOR = null;


        try {
            // InternalKim.g:4806:54: (iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF )
            // InternalKim.g:4807:2: iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVALUE_OPERATOR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVALUE_OPERATOR"


    // $ANTLR start "ruleVALUE_OPERATOR"
    // InternalKim.g:4813:1: ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) ;
    public final AntlrDatatypeRuleToken ruleVALUE_OPERATOR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4819:2: ( (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) )
            // InternalKim.g:4820:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            {
            // InternalKim.g:4820:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            int alt115=15;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt115=1;
                }
                break;
            case 83:
                {
                alt115=2;
                }
                break;
            case 84:
                {
                alt115=3;
                }
                break;
            case 85:
                {
                alt115=4;
                }
                break;
            case 86:
                {
                alt115=5;
                }
                break;
            case 87:
                {
                alt115=6;
                }
                break;
            case 48:
                {
                alt115=7;
                }
                break;
            case 88:
                {
                alt115=8;
                }
                break;
            case 89:
                {
                alt115=9;
                }
                break;
            case 90:
                {
                alt115=10;
                }
                break;
            case 91:
                {
                alt115=11;
                }
                break;
            case 92:
                {
                alt115=12;
                }
                break;
            case 93:
                {
                alt115=13;
                }
                break;
            case 61:
                {
                alt115=14;
                }
                break;
            case 94:
                {
                alt115=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalKim.g:4821:3: kw= '>'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4827:3: kw= '>='
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4833:3: kw= '<='
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4839:3: kw= '<'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4845:3: kw= 'where'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4851:3: kw= '=='
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:4857:3: kw= '='
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:4863:3: kw= 'only'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOnlyKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:4869:3: kw= 'without'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:4875:3: kw= '!='
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:4881:3: kw= 'plus'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:4887:3: kw= 'minus'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:4893:3: kw= 'times'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKim.g:4899:3: kw= 'over'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKim.g:4905:3: kw= 'by'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_14());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVALUE_OPERATOR"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4914:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4920:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4921:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4930:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;
        Token lv_inactive_5_0=null;
        Token otherlv_6=null;
        Token lv_scenario_7_0=null;
        Token lv_worldviewBound_8_0=null;
        Token lv_docstring_10_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;

        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;

        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;

        EObject lv_domainConcept_30_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;

        AntlrDatatypeRuleToken lv_version_37_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;

        EObject lv_parameters_47_0 = null;

        EObject lv_metadata_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4941:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4942:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4942:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            // InternalKim.g:4943:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4943:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_ANNOTATION_ID) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalKim.g:4944:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4944:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4945:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4945:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4946:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4963:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==RULE_ANNOTATION_ID) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalKim.g:4964:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4964:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4965:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4983:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4984:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4984:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4985:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4988:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4989:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4989:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            loop119:
            do {
                int alt119=3;
                int LA119_0 = input.LA(1);

                if ( LA119_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt119=1;
                }
                else if ( LA119_0 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt119=1;
                }
                else if ( LA119_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt119=2;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    // InternalKim.g:4991:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4991:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4992:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4995:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    // InternalKim.g:4995:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4995:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
            	    {
            	    // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )?
            	    int alt118=2;
            	    int LA118_0 = input.LA(1);

            	    if ( (LA118_0==24) ) {
            	        alt118=1;
            	    }
            	    switch (alt118) {
            	        case 1 :
            	            // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
            	            {
            	            // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
            	            // InternalKim.g:4997:11: lv_projectPrivate_3_0= 'project'
            	            {
            	            lv_projectPrivate_3_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getNamespaceRule());
            	              											}
            	              											setWithLastConsumed(current, "projectPrivate", lv_projectPrivate_3_0 != null, "project");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5009:9: ( (lv_private_4_0= 'private' ) )
            	    // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
            	    {
            	    // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
            	    // InternalKim.g:5011:11: lv_private_4_0= 'private'
            	    {
            	    lv_private_4_0=(Token)match(input,25,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(current, "private", lv_private_4_0 != null, "private");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    // InternalKim.g:5030:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:5030:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    // InternalKim.g:5031:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:5034:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    // InternalKim.g:5034:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5034:19: ( (lv_inactive_5_0= 'void' ) )
            	    // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
            	    {
            	    // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
            	    // InternalKim.g:5035:10: lv_inactive_5_0= 'void'
            	    {
            	    lv_inactive_5_0=(Token)match(input,23,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", lv_inactive_5_0 != null, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:5059:3: (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) )
            int alt120=3;
            switch ( input.LA(1) ) {
            case 95:
                {
                alt120=1;
                }
                break;
            case 96:
                {
                alt120=2;
                }
                break;
            case 97:
                {
                alt120=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalKim.g:5060:4: otherlv_6= 'namespace'
                    {
                    otherlv_6=(Token)match(input,95,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5065:4: ( (lv_scenario_7_0= 'scenario' ) )
                    {
                    // InternalKim.g:5065:4: ( (lv_scenario_7_0= 'scenario' ) )
                    // InternalKim.g:5066:5: (lv_scenario_7_0= 'scenario' )
                    {
                    // InternalKim.g:5066:5: (lv_scenario_7_0= 'scenario' )
                    // InternalKim.g:5067:6: lv_scenario_7_0= 'scenario'
                    {
                    lv_scenario_7_0=(Token)match(input,96,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", lv_scenario_7_0 != null, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:5080:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    {
                    // InternalKim.g:5080:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    // InternalKim.g:5081:5: (lv_worldviewBound_8_0= 'worldview' )
                    {
                    // InternalKim.g:5081:5: (lv_worldviewBound_8_0= 'worldview' )
                    // InternalKim.g:5082:6: lv_worldviewBound_8_0= 'worldview'
                    {
                    lv_worldviewBound_8_0=(Token)match(input,97,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", lv_worldviewBound_8_0 != null, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5095:3: ( (lv_name_9_0= rulePathName ) )
            // InternalKim.g:5096:4: (lv_name_9_0= rulePathName )
            {
            // InternalKim.g:5096:4: (lv_name_9_0= rulePathName )
            // InternalKim.g:5097:5: lv_name_9_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_72);
            lv_name_9_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_9_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:5114:3: ( (lv_docstring_10_0= RULE_STRING ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_STRING) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5115:4: (lv_docstring_10_0= RULE_STRING )
                    {
                    // InternalKim.g:5115:4: (lv_docstring_10_0= RULE_STRING )
                    // InternalKim.g:5116:5: lv_docstring_10_0= RULE_STRING
                    {
                    lv_docstring_10_0=(Token)match(input,RULE_STRING,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:5132:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:5133:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:5133:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:5134:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:5137:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop131:
            do {
                int alt131=9;
                alt131 = dfa131.predict(input);
                switch (alt131) {
            	case 1 :
            	    // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:5140:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:5140:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    // InternalKim.g:5141:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:5144:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    // InternalKim.g:5144:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5144:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    // InternalKim.g:5144:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,33,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,98,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
            	      								
            	    }
            	    // InternalKim.g:5152:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    {
            	    // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    // InternalKim.g:5154:11: lv_language_14_0= RULE_UPPERCASE_ID
            	    {
            	    lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"language",
            	      												lv_language_14_0,
            	      												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:5177:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:5177:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:5178:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:5181:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:5181:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5181:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    // InternalKim.g:5181:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,33,FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:5185:9: ( (lv_imported_16_0= ruleImport ) )
            	    // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
            	    {
            	    // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
            	    // InternalKim.g:5187:11: lv_imported_16_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_imported_16_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_16_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5204:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    loop122:
            	    do {
            	        int alt122=2;
            	        int LA122_0 = input.LA(1);

            	        if ( (LA122_0==29) ) {
            	            alt122=1;
            	        }


            	        switch (alt122) {
            	    	case 1 :
            	    	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' )
            	    	    // InternalKim.g:5206:11: ( ',' )=>otherlv_17= ','
            	    	    {
            	    	    otherlv_17=(Token)match(input,29,FOLLOW_76); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:5212:10: ( (lv_imported_18_0= ruleImport ) )
            	    	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
            	    	    // InternalKim.g:5214:12: lv_imported_18_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_imported_18_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop122;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:5239:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:5239:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:5240:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:5243:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:5243:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5243:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:5243:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,99,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:5247:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
            	    // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
            	    // InternalKim.g:5249:11: lv_owlImports_20_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_owlImports_20_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_20_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5266:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    loop123:
            	    do {
            	        int alt123=2;
            	        int LA123_0 = input.LA(1);

            	        if ( (LA123_0==29) ) {
            	            alt123=1;
            	        }


            	        switch (alt123) {
            	    	case 1 :
            	    	    // InternalKim.g:5267:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,29,FOLLOW_78); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:5271:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    // InternalKim.g:5273:12: lv_owlImports_22_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_owlImports_22_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop123;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:5298:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:5298:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:5299:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:5302:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:5302:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5302:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    // InternalKim.g:5302:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,100,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
            	      								
            	    }
            	    // InternalKim.g:5306:9: ( (lv_coverage_24_0= ruleFunction ) )
            	    // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
            	    {
            	    // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
            	    // InternalKim.g:5308:11: lv_coverage_24_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_coverage_24_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_24_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5325:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    loop124:
            	    do {
            	        int alt124=2;
            	        int LA124_0 = input.LA(1);

            	        if ( (LA124_0==29) ) {
            	            alt124=1;
            	        }


            	        switch (alt124) {
            	    	case 1 :
            	    	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' )
            	    	    // InternalKim.g:5327:11: ( ',' )=>otherlv_25= ','
            	    	    {
            	    	    otherlv_25=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:5333:10: ( (lv_coverage_26_0= ruleFunction ) )
            	    	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
            	    	    // InternalKim.g:5335:12: lv_coverage_26_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_coverage_26_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop124;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:5360:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:5360:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5361:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:5364:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5364:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5364:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5364:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,54,FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,101,FOLLOW_80); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:5372:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    int alt125=2;
            	    int LA125_0 = input.LA(1);

            	    if ( (LA125_0==102) ) {
            	        alt125=1;
            	    }
            	    else if ( ((LA125_0>=RULE_LOWERCASE_ID && LA125_0<=RULE_UPPERCASE_ID)||LA125_0==RULE_CAMELCASE_ID||LA125_0==RULE_LOWERCASE_DASHID||LA125_0==RULE_UPPERCASE_PATH||LA125_0==40||(LA125_0>=137 && LA125_0<=138)||(LA125_0>=146 && LA125_0<=147)||(LA125_0>=149 && LA125_0<=154)||(LA125_0>=156 && LA125_0<=167)) ) {
            	        alt125=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 125, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt125) {
            	        case 1 :
            	            // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            {
            	            // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
            	            {
            	            // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
            	            // InternalKim.g:5375:12: lv_rootDomain_29_0= 'root'
            	            {
            	            lv_rootDomain_29_0=(Token)match(input,102,FOLLOW_73); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", lv_rootDomain_29_0 != null, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
            	            // InternalKim.g:5390:12: lv_domainConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_73);
            	            lv_domainConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
            	    // InternalKim.g:5415:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:5415:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
            	    // InternalKim.g:5416:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:5419:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
            	    // InternalKim.g:5419:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5419:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
            	    // InternalKim.g:5419:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,103,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,104,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
            	      								
            	    }
            	    // InternalKim.g:5427:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
            	    // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    {
            	    // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    // InternalKim.g:5429:11: lv_disjointNamespaces_33_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_disjointNamespaces_33_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_33_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5446:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
            	    loop126:
            	    do {
            	        int alt126=2;
            	        int LA126_0 = input.LA(1);

            	        if ( (LA126_0==29) ) {
            	            alt126=1;
            	        }


            	        switch (alt126) {
            	    	case 1 :
            	    	    // InternalKim.g:5447:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )
            	    	    {
            	    	    otherlv_34=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:5451:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )
            	    	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    // InternalKim.g:5453:12: lv_disjointNamespaces_35_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_disjointNamespaces_35_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_35_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop126;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:5478:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:5478:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:5479:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:5482:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:5482:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5482:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:5482:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
            	    {
            	    otherlv_36=(Token)match(input,105,FOLLOW_82); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
            	      								
            	    }
            	    // InternalKim.g:5486:9: ( (lv_version_37_0= ruleVersionNumber ) )
            	    // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
            	    // InternalKim.g:5488:11: lv_version_37_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_version_37_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_37_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:5512:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalKim.g:5512:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:5513:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
            	    // InternalKim.g:5516:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:5516:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5516:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:5517:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
            	    // InternalKim.g:5520:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
            	    int cnt130=0;
            	    loop130:
            	    do {
            	        int alt130=4;
            	        switch ( input.LA(1) ) {
            	        case 33:
            	            {
            	            int LA130_2 = input.LA(2);

            	            if ( synpred232_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	                alt130=3;
            	            }


            	            }
            	            break;
            	        case 106:
            	            {
            	            int LA130_3 = input.LA(2);

            	            if ( synpred229_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	                alt130=1;
            	            }


            	            }
            	            break;
            	        case 108:
            	            {
            	            int LA130_4 = input.LA(2);

            	            if ( synpred231_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	                alt130=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt130) {
            	    	case 1 :
            	    	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
            	    	    }
            	    	    // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
            	    	    // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_39=(Token)match(input,106,FOLLOW_83); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    int alt128=2;
            	    	    int LA128_0 = input.LA(1);

            	    	    if ( (LA128_0==107) ) {
            	    	        alt128=1;
            	    	    }
            	    	    switch (alt128) {
            	    	        case 1 :
            	    	            // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_40=(Token)match(input,107,FOLLOW_84); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            loop127:
            	    	            do {
            	    	                int alt127=2;
            	    	                int LA127_0 = input.LA(1);

            	    	                if ( ((LA127_0>=RULE_LOWERCASE_ID && LA127_0<=RULE_UPPERCASE_ID)||LA127_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt127=1;
            	    	                }


            	    	                switch (alt127) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_84);
            	    	            	    lv_lookupNamespace_41_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_41_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop127;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
            	    	    }
            	    	    // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
            	    	    // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_42=(Token)match(input,108,FOLLOW_84); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    loop129:
            	    	    do {
            	    	        int alt129=2;
            	    	        int LA129_0 = input.LA(1);

            	    	        if ( ((LA129_0>=RULE_LOWERCASE_ID && LA129_0<=RULE_UPPERCASE_ID)||LA129_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt129=1;
            	    	        }


            	    	        switch (alt129) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_84);
            	    	    	    lv_blacklistNamespace_43_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_43_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop129;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
            	    	    }
            	    	    // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
            	    	    // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,33,FOLLOW_37); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
            	    	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
            	    	    {
            	    	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
            	    	    // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_73);
            	    	    lv_weights_45_0=ruleMap();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_45_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Map");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt130 >= 1 ) break loop130;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(130, input);
            	                throw eee;
            	        }
            	        cnt130++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:5650:3: (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==109) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalKim.g:5651:4: otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) )
                    {
                    otherlv_46=(Token)match(input,109,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
                      			
                    }
                    // InternalKim.g:5655:4: ( (lv_parameters_47_0= ruleMap ) )
                    // InternalKim.g:5656:5: (lv_parameters_47_0= ruleMap )
                    {
                    // InternalKim.g:5656:5: (lv_parameters_47_0= ruleMap )
                    // InternalKim.g:5657:6: lv_parameters_47_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMapParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_parameters_47_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_47_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5675:3: (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==43) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalKim.g:5676:4: otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) )
                    {
                    otherlv_48=(Token)match(input,43,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
                      			
                    }
                    // InternalKim.g:5680:4: ( (lv_metadata_49_0= ruleMap ) )
                    // InternalKim.g:5681:5: (lv_metadata_49_0= ruleMap )
                    {
                    // InternalKim.g:5681:5: (lv_metadata_49_0= ruleMap )
                    // InternalKim.g:5682:6: lv_metadata_49_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMapParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_metadata_49_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_49_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5711:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5711:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5712:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5718:1: ruleOwlImport returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_single_3_0 = null;

        EObject lv_imports_4_0 = null;

        AntlrDatatypeRuleToken lv_urn_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5724:2: ( ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) ) )
            // InternalKim.g:5725:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) )
            {
            // InternalKim.g:5725:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_STRING) ) {
                alt135=1;
            }
            else if ( ((LA135_0>=RULE_LOWERCASE_ID && LA135_0<=RULE_UPPERCASE_ID)||LA135_0==RULE_LOWERCASE_DASHID||LA135_0==40) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalKim.g:5726:3: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:5726:3: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
                    // InternalKim.g:5727:4: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:5727:4: ( (lv_name_0_0= RULE_STRING ) )
                    // InternalKim.g:5728:5: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:5728:5: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:5729:6: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOwlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }


                    }

                    // InternalKim.g:5745:4: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:5746:5: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:5750:5: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:5751:6: (lv_prefix_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:5751:6: (lv_prefix_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:5752:7: lv_prefix_2_0= RULE_LOWERCASE_ID
                    {
                    lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOwlImportRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"prefix",
                      								lv_prefix_2_0,
                      								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:5771:3: ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) )
                    {
                    // InternalKim.g:5771:3: ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) )
                    // InternalKim.g:5772:4: ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) )
                    {
                    // InternalKim.g:5772:4: ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) )
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( ((LA134_0>=RULE_LOWERCASE_ID && LA134_0<=RULE_UPPERCASE_ID)||LA134_0==RULE_LOWERCASE_DASHID) ) {
                        alt134=1;
                    }
                    else if ( (LA134_0==40) ) {
                        alt134=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 134, 0, input);

                        throw nvae;
                    }
                    switch (alt134) {
                        case 1 :
                            // InternalKim.g:5773:5: ( (lv_single_3_0= rulePathName ) )
                            {
                            // InternalKim.g:5773:5: ( (lv_single_3_0= rulePathName ) )
                            // InternalKim.g:5774:6: (lv_single_3_0= rulePathName )
                            {
                            // InternalKim.g:5774:6: (lv_single_3_0= rulePathName )
                            // InternalKim.g:5775:7: lv_single_3_0= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOwlImportAccess().getSinglePathNameParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_single_3_0=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOwlImportRule());
                              							}
                              							set(
                              								current,
                              								"single",
                              								lv_single_3_0,
                              								"org.integratedmodelling.kim.Kim.PathName");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5793:5: ( (lv_imports_4_0= ruleList ) )
                            {
                            // InternalKim.g:5793:5: ( (lv_imports_4_0= ruleList ) )
                            // InternalKim.g:5794:6: (lv_imports_4_0= ruleList )
                            {
                            // InternalKim.g:5794:6: (lv_imports_4_0= ruleList )
                            // InternalKim.g:5795:7: lv_imports_4_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOwlImportAccess().getImportsListParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_imports_4_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOwlImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_4_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,107,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOwlImportAccess().getFromKeyword_1_1());
                      			
                    }
                    // InternalKim.g:5817:4: ( (lv_urn_6_0= ruleUrnId ) )
                    // InternalKim.g:5818:5: (lv_urn_6_0= ruleUrnId )
                    {
                    // InternalKim.g:5818:5: (lv_urn_6_0= ruleUrnId )
                    // InternalKim.g:5819:6: lv_urn_6_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOwlImportAccess().getUrnUrnIdParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_6_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOwlImportRule());
                      						}
                      						set(
                      							current,
                      							"urn",
                      							lv_urn_6_0,
                      							"org.integratedmodelling.kim.Kim.UrnId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5841:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5841:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5842:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5848:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5854:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5855:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5855:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5856:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5856:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==40||LA137_0==45) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalKim.g:5857:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5857:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==40) ) {
                        alt136=1;
                    }
                    else if ( (LA136_0==45) ) {
                        alt136=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 136, 0, input);

                        throw nvae;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalKim.g:5858:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5858:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5859:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5859:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5860:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5878:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5878:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5879:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5879:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5880:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,45,FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", lv_star_1_0 != null, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,107,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5898:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5899:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5899:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5900:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5921:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5921:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5922:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5928:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_8=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_10 = null;

        AntlrDatatypeRuleToken this_Path_12 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_Path_15 = null;

        AntlrDatatypeRuleToken this_UrnKvp_16 = null;



        	enterRule();

        try {
            // InternalKim.g:5934:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5935:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5935:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            // InternalKim.g:5936:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5936:3: (kw= 'urn:klab:' )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==110) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalKim.g:5937:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            // InternalKim.g:5988:3: (this_Path_7= rulePath | this_INT_8= RULE_INT )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( ((LA139_0>=RULE_LOWERCASE_ID && LA139_0<=RULE_UPPERCASE_ID)||LA139_0==RULE_LOWERCASE_DASHID) ) {
                alt139=1;
            }
            else if ( (LA139_0==RULE_INT) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalKim.g:5989:4: this_Path_7= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
                      			
                    }
                    pushFollow(FOLLOW_90);
                    this_Path_7=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6000:4: this_INT_8= RULE_INT
                    {
                    this_INT_8=(Token)match(input,RULE_INT,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6008:3: (kw= ':' this_VersionNumber_10= ruleVersionNumber )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==111) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalKim.g:6009:4: kw= ':' this_VersionNumber_10= ruleVersionNumber
                    {
                    kw=(Token)match(input,111,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_91);
                    this_VersionNumber_10=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6025:3: (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==59) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalKim.g:6026:4: kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,59,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:6031:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )
                    int alt141=2;
                    alt141 = dfa141.predict(input);
                    switch (alt141) {
                        case 1 :
                            // InternalKim.g:6032:5: this_Path_12= rulePath
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
                              				
                            }
                            pushFollow(FOLLOW_92);
                            this_Path_12=rulePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_Path_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6043:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
                              				
                            }
                            pushFollow(FOLLOW_92);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:6054:4: (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==112) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalKim.g:6055:5: kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,112,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:6060:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    int alt142=2;
                    	    alt142 = dfa142.predict(input);
                    	    switch (alt142) {
                    	        case 1 :
                    	            // InternalKim.g:6061:6: this_Path_15= rulePath
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_92);
                    	            this_Path_15=rulePath();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_Path_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:6072:6: this_UrnKvp_16= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_92);
                    	            this_UrnKvp_16=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleWellFormedUrnIdWithFragment"
    // InternalKim.g:6089:1: entryRuleWellFormedUrnIdWithFragment returns [String current=null] : iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF ;
    public final String entryRuleWellFormedUrnIdWithFragment() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleWellFormedUrnIdWithFragment = null;


        try {
            // InternalKim.g:6089:67: (iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF )
            // InternalKim.g:6090:2: iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWellFormedUrnIdWithFragment=ruleWellFormedUrnIdWithFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWellFormedUrnIdWithFragment.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWellFormedUrnIdWithFragment"


    // $ANTLR start "ruleWellFormedUrnIdWithFragment"
    // InternalKim.g:6096:1: ruleWellFormedUrnIdWithFragment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) ) ;
    public final AntlrDatatypeRuleToken ruleWellFormedUrnIdWithFragment() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_10=null;
        Token this_UPPERCASE_ID_11=null;
        Token this_INT_12=null;
        Token this_STRING_13=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_PathName_2 = null;

        AntlrDatatypeRuleToken this_PathName_4 = null;

        AntlrDatatypeRuleToken this_PathName_6 = null;

        AntlrDatatypeRuleToken this_VersionNumber_8 = null;



        	enterRule();

        try {
            // InternalKim.g:6102:2: ( (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) ) )
            // InternalKim.g:6103:2: (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) )
            {
            // InternalKim.g:6103:2: (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) )
            // InternalKim.g:6104:3: this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_2=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_3());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_4=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_5());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_6());
              		
            }
            pushFollow(FOLLOW_93);
            this_PathName_6=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_6);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:6159:3: (kw= ':' this_VersionNumber_8= ruleVersionNumber )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==111) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalKim.g:6160:4: kw= ':' this_VersionNumber_8= ruleVersionNumber
                    {
                    kw=(Token)match(input,111,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_7_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getVersionNumberParserRuleCall_7_1());
                      			
                    }
                    pushFollow(FOLLOW_94);
                    this_VersionNumber_8=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,59,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getNumberSignKeyword_8());
              		
            }
            // InternalKim.g:6181:3: (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING )
            int alt146=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt146=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt146=2;
                }
                break;
            case RULE_INT:
                {
                alt146=3;
                }
                break;
            case RULE_STRING:
                {
                alt146=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }

            switch (alt146) {
                case 1 :
                    // InternalKim.g:6182:4: this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getLOWERCASE_IDTerminalRuleCall_9_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6190:4: this_UPPERCASE_ID_11= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_11=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_11);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_11, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getUPPERCASE_IDTerminalRuleCall_9_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:6198:4: this_INT_12= RULE_INT
                    {
                    this_INT_12=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_12);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_12, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getINTTerminalRuleCall_9_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:6206:4: this_STRING_13= RULE_STRING
                    {
                    this_STRING_13=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_STRING_13);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_13, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getSTRINGTerminalRuleCall_9_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWellFormedUrnIdWithFragment"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:6218:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:6218:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:6219:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:6225:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_Path_2 = null;



        	enterRule();

        try {
            // InternalKim.g:6231:2: ( (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) )
            // InternalKim.g:6232:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            {
            // InternalKim.g:6232:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            // InternalKim.g:6233:3: this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_38);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,48,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:6248:3: (this_Path_2= rulePath | this_INT_3= RULE_INT )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=RULE_LOWERCASE_ID && LA147_0<=RULE_UPPERCASE_ID)||LA147_0==RULE_LOWERCASE_DASHID) ) {
                alt147=1;
            }
            else if ( (LA147_0==RULE_INT) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalKim.g:6249:4: this_Path_2= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Path_2=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6260:4: this_INT_3= RULE_INT
                    {
                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:6272:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:6272:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:6273:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:6279:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:6285:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:6286:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:6286:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:6287:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:6287:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt148=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt148=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt148=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt148=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // InternalKim.g:6288:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6296:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:6304:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6312:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==113) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalKim.g:6313:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,113,FOLLOW_97); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:6318:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt149=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt149=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt149=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt149=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 149, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt149) {
            	        case 1 :
            	            // InternalKim.g:6319:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6327:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:6335:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalKim.g:6344:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==114) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalKim.g:6345:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,114,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6358:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==59) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalKim.g:6359:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,59,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:6376:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:6376:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:6377:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:6383:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6389:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:6390:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:6390:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:6391:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:6391:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_ANNOTATION_ID) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalKim.g:6392:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:6392:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:6393:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:6393:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:6394:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_98);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:6411:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop153:
                    do {
                        int alt153=2;
                        int LA153_0 = input.LA(1);

                        if ( (LA153_0==RULE_ANNOTATION_ID) ) {
                            alt153=1;
                        }


                        switch (alt153) {
                    	case 1 :
                    	    // InternalKim.g:6412:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:6412:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:6413:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_98);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop153;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,115,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:6435:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:6436:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:6436:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:6437:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:6458:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:6463:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:6464:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:6473:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;

        EObject lv_accessor_24_0 = null;

        EObject lv_metadata_26_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:6483:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:6484:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:6484:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:6485:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:6485:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            // InternalKim.g:6486:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:6489:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            // InternalKim.g:6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?
            {
            // InternalKim.g:6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+
            int cnt164=0;
            loop164:
            do {
                int alt164=4;
                alt164 = dfa164.predict(input);
                switch (alt164) {
            	case 1 :
            	    // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    // InternalKim.g:6492:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:6492:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    // InternalKim.g:6493:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:6496:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    // InternalKim.g:6496:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6496:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    {
            	    // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt155=2;
            	    alt155 = dfa155.predict(input);
            	    switch (alt155) {
            	        case 1 :
            	            // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:6499:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_11);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,27,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:6521:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:6523:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:6540:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt156=2;
            	    int LA156_0 = input.LA(1);

            	    if ( (LA156_0==RULE_STRING) ) {
            	        int LA156_1 = input.LA(2);

            	        if ( (synpred262_InternalKim()) ) {
            	            alt156=1;
            	        }
            	    }
            	    switch (alt156) {
            	        case 1 :
            	            // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:6558:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt158=2;
            	    int LA158_0 = input.LA(1);

            	    if ( (LA158_0==116) ) {
            	        alt158=1;
            	    }
            	    switch (alt158) {
            	        case 1 :
            	            // InternalKim.g:6559:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,116,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:6563:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:6565:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_102);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:6582:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop157:
            	            do {
            	                int alt157=2;
            	                int LA157_0 = input.LA(1);

            	                if ( (LA157_0==29) ) {
            	                    alt157=1;
            	                }


            	                switch (alt157) {
            	            	case 1 :
            	            	    // InternalKim.g:6583:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:6587:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:6589:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_102);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop157;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:6608:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
            	    // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    {
            	    // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    // InternalKim.g:6610:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
            	    // InternalKim.g:6613:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    {
            	    // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    loop161:
            	    do {
            	        int alt161=3;
            	        int LA161_0 = input.LA(1);

            	        if ( LA161_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	            alt161=1;
            	        }
            	        else if ( LA161_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	            alt161=2;
            	        }


            	        switch (alt161) {
            	    	case 1 :
            	    	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
            	    	    }
            	    	    // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
            	    	    // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    {
            	    	    otherlv_10=(Token)match(input,32,FOLLOW_103); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
            	    	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    {
            	    	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_102);
            	    	    lv_states_11_0=ruleObservableSemantics();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																}
            	    	      																add(
            	    	      																	current,
            	    	      																	"states",
            	    	      																	lv_states_11_0,
            	    	      																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    loop159:
            	    	    do {
            	    	        int alt159=2;
            	    	        int LA159_0 = input.LA(1);

            	    	        if ( (LA159_0==29) ) {
            	    	            alt159=1;
            	    	        }


            	    	        switch (alt159) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    {
            	    	    	    otherlv_12=(Token)match(input,29,FOLLOW_103); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    {
            	    	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_102);
            	    	    	    lv_states_13_0=ruleObservableSemantics();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"states",
            	    	    	      																		lv_states_13_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop159;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
            	    	    }
            	    	    // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
            	    	    // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    {
            	    	    otherlv_14=(Token)match(input,117,FOLLOW_46); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	    	    // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	    	    {
            	    	    otherlv_15=(Token)match(input,40,FOLLOW_99); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
            	    	      														
            	    	    }
            	    	    // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	    	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    {
            	    	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
            	    	      																
            	    	    }
            	    	    pushFollow(FOLLOW_36);
            	    	    lv_observations_16_0=ruleObserveStatementBody();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																	if (current==null) {
            	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																	}
            	    	      																	add(
            	    	      																		current,
            	    	      																		"observations",
            	    	      																		lv_observations_16_0,
            	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	      																	afterParserOrEnumRuleCall();
            	    	      																
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_17=(Token)match(input,41,FOLLOW_102); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
            	    	      														
            	    	    }

            	    	    }

            	    	    // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    loop160:
            	    	    do {
            	    	        int alt160=2;
            	    	        int LA160_0 = input.LA(1);

            	    	        if ( (LA160_0==29) ) {
            	    	            alt160=1;
            	    	        }


            	    	        switch (alt160) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	    	    	    {
            	    	    	    otherlv_18=(Token)match(input,29,FOLLOW_46); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    otherlv_19=(Token)match(input,40,FOLLOW_99); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	    	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    {
            	    	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_36);
            	    	    	    lv_observations_20_0=ruleObserveStatementBody();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"observations",
            	    	    	      																		lv_observations_20_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }

            	    	    	    otherlv_21=(Token)match(input,41,FOLLOW_102); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
            	    	    	      														
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop160;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop161;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    }

            	    // InternalKim.g:6758:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    loop162:
            	    do {
            	        int alt162=2;
            	        int LA162_0 = input.LA(1);

            	        if ( ((LA162_0>=60 && LA162_0<=62)||(LA162_0>=68 && LA162_0<=73)) ) {
            	            alt162=1;
            	        }


            	        switch (alt162) {
            	    	case 1 :
            	    	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    // InternalKim.g:6760:10: lv_actions_22_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_104);
            	    	    lv_actions_22_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_22_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop162;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    {
            	    // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    // InternalKim.g:6784:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:6784:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    // InternalKim.g:6785:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:6788:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    // InternalKim.g:6788:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6788:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    // InternalKim.g:6788:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
            	    {
            	    otherlv_23=(Token)match(input,33,FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
            	      							
            	    }
            	    // InternalKim.g:6792:8: ( (lv_accessor_24_0= ruleFunction ) )?
            	    int alt163=2;
            	    alt163 = dfa163.predict(input);
            	    switch (alt163) {
            	        case 1 :
            	            // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
            	            {
            	            // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
            	            // InternalKim.g:6794:10: lv_accessor_24_0= ruleFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_105);
            	            lv_accessor_24_0=ruleFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										set(
            	              											current,
            	              											"accessor",
            	              											lv_accessor_24_0,
            	              											"org.integratedmodelling.kim.Kim.Function");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:6818:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalKim.g:6818:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:6819:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
            	    // InternalKim.g:6822:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    // InternalKim.g:6822:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6822:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    // InternalKim.g:6822:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
            	    {
            	    otherlv_25=(Token)match(input,43,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
            	      							
            	    }
            	    // InternalKim.g:6826:8: ( (lv_metadata_26_0= ruleMap ) )
            	    // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
            	    {
            	    // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
            	    // InternalKim.g:6828:10: lv_metadata_26_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_metadata_26_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"metadata",
            	      											lv_metadata_26_0,
            	      											"org.integratedmodelling.kim.Kim.Map");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt164 >= 1 ) break loop164;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(164, input);
                        throw eee;
                }
                cnt164++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6865:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6869:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6870:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6879:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6888:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6889:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6889:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt165=2;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:6893:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,27,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6915:3: ( (lv_generic_2_0= 'any' ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==118) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalKim.g:6916:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6916:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6917:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6929:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6930:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6930:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6931:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6948:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6949:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6949:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6950:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6953:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop172:
            do {
                int alt172=7;
                alt172 = dfa172.predict(input);
                switch (alt172) {
            	case 1 :
            	    // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6956:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6956:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6957:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6960:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6960:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6960:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:6960:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:6968:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:6970:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6994:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6994:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6995:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6998:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6998:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6998:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt168=2;
            	    int LA168_0 = input.LA(1);

            	    if ( (LA168_0==54) ) {
            	        alt168=1;
            	    }
            	    else if ( (LA168_0==119) && (synpred280_InternalKim())) {
            	        alt168=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 168, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt168) {
            	        case 1 :
            	            // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' )
            	            // InternalKim.g:7000:11: ( 'in' )=>otherlv_8= 'in'
            	            {
            	            otherlv_8=(Token)match(input,54,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:7006:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt167=2;
            	            int LA167_0 = input.LA(1);

            	            if ( (LA167_0==EOF||LA167_0==RULE_LOWERCASE_ID||LA167_0==RULE_STRING||(LA167_0>=RULE_CAMELCASE_ID && LA167_0<=RULE_LOWERCASE_DASHID)||(LA167_0>=RULE_UPPERCASE_PATH && LA167_0<=RULE_BACKCASE_ID)||LA167_0==22||LA167_0==29||(LA167_0>=32 && LA167_0<=33)||LA167_0==37||(LA167_0>=40 && LA167_0<=41)||LA167_0==43||LA167_0==45||LA167_0==48||LA167_0==54||(LA167_0>=60 && LA167_0<=62)||(LA167_0>=68 && LA167_0<=73)||(LA167_0>=82 && LA167_0<=94)||LA167_0==110||LA167_0==113||LA167_0==117||(LA167_0>=119 && LA167_0<=122)||(LA167_0>=124 && LA167_0<=127)||(LA167_0>=137 && LA167_0<=138)||(LA167_0>=146 && LA167_0<=147)||(LA167_0>=149 && LA167_0<=154)||(LA167_0>=156 && LA167_0<=167)||(LA167_0>=251 && LA167_0<=252)||LA167_0==259) ) {
            	                alt167=1;
            	            }
            	            else if ( (LA167_0==RULE_UPPERCASE_ID) ) {
            	                int LA167_2 = input.LA(2);

            	                if ( (LA167_2==250) ) {
            	                    alt167=2;
            	                }
            	                else if ( (LA167_2==EOF||(LA167_2>=RULE_LOWERCASE_ID && LA167_2<=RULE_STRING)||(LA167_2>=RULE_CAMELCASE_ID && LA167_2<=RULE_LOWERCASE_DASHID)||LA167_2==RULE_UPPERCASE_PATH||LA167_2==22||LA167_2==27||LA167_2==29||(LA167_2>=32 && LA167_2<=33)||LA167_2==37||(LA167_2>=40 && LA167_2<=41)||LA167_2==43||LA167_2==45||LA167_2==48||LA167_2==54||(LA167_2>=60 && LA167_2<=62)||(LA167_2>=68 && LA167_2<=73)||(LA167_2>=82 && LA167_2<=94)||(LA167_2>=110 && LA167_2<=111)||(LA167_2>=113 && LA167_2<=114)||LA167_2==117||(LA167_2>=119 && LA167_2<=122)||(LA167_2>=124 && LA167_2<=127)||(LA167_2>=137 && LA167_2<=138)||(LA167_2>=146 && LA167_2<=147)||(LA167_2>=149 && LA167_2<=154)||(LA167_2>=156 && LA167_2<=167)||(LA167_2>=251 && LA167_2<=252)||LA167_2==259) ) {
            	                    alt167=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 167, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 167, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt167) {
            	                case 1 :
            	                    // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:7009:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:7029:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' )
            	            // InternalKim.g:7051:11: ( 'per' )=>otherlv_11= 'per'
            	            {
            	            otherlv_11=(Token)match(input,119,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:7057:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:7059:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7084:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:7084:116: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7085:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:7088:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7088:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7088:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:7089:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7093:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:7094:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop169:
            	    do {
            	        int alt169=2;
            	        alt169 = dfa169.predict(input);
            	        switch (alt169) {
            	    	case 1 :
            	    	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop169;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:7137:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:7137:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:7138:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:7141:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:7141:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7141:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt170=2;
            	    int LA170_0 = input.LA(1);

            	    if ( (LA170_0==120) ) {
            	        alt170=1;
            	    }
            	    else if ( (LA170_0==121) ) {
            	        alt170=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 170, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt170) {
            	        case 1 :
            	            // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:7143:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_15_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7156:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,121,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7167:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:7167:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7168:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:7171:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7171:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7171:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    // InternalKim.g:7171:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7171:20: ( (lv_from_17_0= ruleNumber ) )
            	    // InternalKim.g:7172:10: (lv_from_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:7172:10: (lv_from_17_0= ruleNumber )
            	    // InternalKim.g:7173:11: lv_from_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_18=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
            	      								
            	    }
            	    // InternalKim.g:7194:9: ( (lv_to_19_0= ruleNumber ) )
            	    // InternalKim.g:7195:10: (lv_to_19_0= ruleNumber )
            	    {
            	    // InternalKim.g:7195:10: (lv_to_19_0= ruleNumber )
            	    // InternalKim.g:7196:11: lv_to_19_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_19_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_19_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:7219:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7219:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:7220:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:7220:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:7221:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:7224:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:7224:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7224:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:7224:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,122,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:7228:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:7229:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:7229:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:7230:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:7230:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt171=2;
            	    int LA171_0 = input.LA(1);

            	    if ( (LA171_0==RULE_LOWERCASE_ID) ) {
            	        alt171=1;
            	    }
            	    else if ( (LA171_0==RULE_STRING) ) {
            	        alt171=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 171, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt171) {
            	        case 1 :
            	            // InternalKim.g:7231:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7246:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:7283:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:7287:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:7288:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:7297:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token lv_generic_0_0=null;
        Token lv_global_1_0=null;
        Token lv_exclusive_2_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_declaration_3_0 = null;

        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;

        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:7306:2: ( ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:7307:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:7307:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:7308:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:7308:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )?
            int alt173=4;
            switch ( input.LA(1) ) {
                case 118:
                    {
                    alt173=1;
                    }
                    break;
                case 123:
                    {
                    alt173=2;
                    }
                    break;
                case 88:
                    {
                    alt173=3;
                    }
                    break;
            }

            switch (alt173) {
                case 1 :
                    // InternalKim.g:7309:4: ( (lv_generic_0_0= 'any' ) )
                    {
                    // InternalKim.g:7309:4: ( (lv_generic_0_0= 'any' ) )
                    // InternalKim.g:7310:5: (lv_generic_0_0= 'any' )
                    {
                    // InternalKim.g:7310:5: (lv_generic_0_0= 'any' )
                    // InternalKim.g:7311:6: lv_generic_0_0= 'any'
                    {
                    lv_generic_0_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_generic_0_0, grammarAccess.getSimpleObservableSemanticsAccess().getGenericAnyKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "generic", lv_generic_0_0 != null, "any");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7324:4: ( (lv_global_1_0= 'all' ) )
                    {
                    // InternalKim.g:7324:4: ( (lv_global_1_0= 'all' ) )
                    // InternalKim.g:7325:5: (lv_global_1_0= 'all' )
                    {
                    // InternalKim.g:7325:5: (lv_global_1_0= 'all' )
                    // InternalKim.g:7326:6: lv_global_1_0= 'all'
                    {
                    lv_global_1_0=(Token)match(input,123,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_global_1_0, grammarAccess.getSimpleObservableSemanticsAccess().getGlobalAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "global", lv_global_1_0 != null, "all");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7339:4: ( (lv_exclusive_2_0= 'only' ) )
                    {
                    // InternalKim.g:7339:4: ( (lv_exclusive_2_0= 'only' ) )
                    // InternalKim.g:7340:5: (lv_exclusive_2_0= 'only' )
                    {
                    // InternalKim.g:7340:5: (lv_exclusive_2_0= 'only' )
                    // InternalKim.g:7341:6: lv_exclusive_2_0= 'only'
                    {
                    lv_exclusive_2_0=(Token)match(input,88,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exclusive_2_0, grammarAccess.getSimpleObservableSemanticsAccess().getExclusiveOnlyKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "exclusive", lv_exclusive_2_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:7354:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:7355:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:7355:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:7356:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_109);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:7373:3: ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:7374:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:7374:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            // InternalKim.g:7375:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
            // InternalKim.g:7378:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            // InternalKim.g:7379:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            {
            // InternalKim.g:7379:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            loop177:
            do {
                int alt177=4;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    // InternalKim.g:7380:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7380:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    // InternalKim.g:7381:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:7381:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:7382:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:7385:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:7385:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7385:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:7385:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    {
            	    // InternalKim.g:7385:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    int alt175=2;
            	    int LA175_0 = input.LA(1);

            	    if ( (LA175_0==54) ) {
            	        alt175=1;
            	    }
            	    else if ( (LA175_0==119) && (synpred299_InternalKim())) {
            	        alt175=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 175, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt175) {
            	        case 1 :
            	            // InternalKim.g:7386:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            {
            	            // InternalKim.g:7386:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            // InternalKim.g:7387:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:7407:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:7408:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:7408:12: ( ( 'in' )=>otherlv_5= 'in' )
            	            // InternalKim.g:7409:13: ( 'in' )=>otherlv_5= 'in'
            	            {
            	            otherlv_5=(Token)match(input,54,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_2_0_0_0_0_0());
            	              												
            	            }

            	            }

            	            // InternalKim.g:7415:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            int alt174=2;
            	            int LA174_0 = input.LA(1);

            	            if ( (LA174_0==EOF||LA174_0==RULE_LOWERCASE_ID||LA174_0==RULE_STRING||(LA174_0>=RULE_EXPR && LA174_0<=RULE_LOWERCASE_DASHID)||(LA174_0>=RULE_UPPERCASE_PATH && LA174_0<=RULE_BACKCASE_ID)||(LA174_0>=RULE_TEMPLATE_VAR && LA174_0<=RULE_OPTION_KEY)||LA174_0==22||(LA174_0>=29 && LA174_0<=31)||(LA174_0>=33 && LA174_0<=35)||(LA174_0>=39 && LA174_0<=43)||LA174_0==45||LA174_0==48||(LA174_0>=54 && LA174_0<=56)||(LA174_0>=60 && LA174_0<=62)||(LA174_0>=68 && LA174_0<=73)||(LA174_0>=82 && LA174_0<=94)||LA174_0==113||(LA174_0>=118 && LA174_0<=119)||(LA174_0>=123 && LA174_0<=127)||(LA174_0>=137 && LA174_0<=138)||(LA174_0>=145 && LA174_0<=147)||(LA174_0>=149 && LA174_0<=154)||(LA174_0>=156 && LA174_0<=167)||LA174_0==216||(LA174_0>=251 && LA174_0<=252)||LA174_0==259) ) {
            	                alt174=1;
            	            }
            	            else if ( (LA174_0==RULE_UPPERCASE_ID) ) {
            	                int LA174_2 = input.LA(2);

            	                if ( (LA174_2==EOF||(LA174_2>=RULE_LOWERCASE_ID && LA174_2<=RULE_STRING)||(LA174_2>=RULE_EXPR && LA174_2<=RULE_LOWERCASE_DASHID)||LA174_2==RULE_UPPERCASE_PATH||(LA174_2>=RULE_TEMPLATE_VAR && LA174_2<=RULE_OPTION_KEY)||LA174_2==22||(LA174_2>=29 && LA174_2<=31)||(LA174_2>=33 && LA174_2<=35)||(LA174_2>=39 && LA174_2<=43)||LA174_2==45||LA174_2==48||(LA174_2>=54 && LA174_2<=56)||(LA174_2>=60 && LA174_2<=62)||(LA174_2>=68 && LA174_2<=73)||(LA174_2>=82 && LA174_2<=94)||LA174_2==111||(LA174_2>=113 && LA174_2<=114)||(LA174_2>=118 && LA174_2<=119)||(LA174_2>=123 && LA174_2<=127)||(LA174_2>=137 && LA174_2<=138)||(LA174_2>=145 && LA174_2<=147)||(LA174_2>=149 && LA174_2<=154)||(LA174_2>=156 && LA174_2<=167)||LA174_2==216||(LA174_2>=251 && LA174_2<=252)||LA174_2==259) ) {
            	                    alt174=1;
            	                }
            	                else if ( (LA174_2==250) ) {
            	                    alt174=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 174, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 174, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt174) {
            	                case 1 :
            	                    // InternalKim.g:7416:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7416:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    // InternalKim.g:7417:14: (lv_unit_6_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7417:14: (lv_unit_6_0= ruleUnit )
            	                    // InternalKim.g:7418:15: lv_unit_6_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_109);
            	                    lv_unit_6_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"unit",
            	                      																lv_unit_6_0,
            	                      																"org.integratedmodelling.kim.Kim.Unit");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7436:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7436:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    // InternalKim.g:7437:14: (lv_currency_7_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7437:14: (lv_currency_7_0= ruleCurrency )
            	                    // InternalKim.g:7438:15: lv_currency_7_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_109);
            	                    lv_currency_7_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"currency",
            	                      																lv_currency_7_0,
            	                      																"org.integratedmodelling.kim.Kim.Currency");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7459:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:7459:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            // InternalKim.g:7460:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:7460:11: ( ( 'per' )=>otherlv_8= 'per' )
            	            // InternalKim.g:7461:12: ( 'per' )=>otherlv_8= 'per'
            	            {
            	            otherlv_8=(Token)match(input,119,FOLLOW_110); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_2_0_0_1_0());
            	              											
            	            }

            	            }

            	            // InternalKim.g:7467:11: ( (lv_unit_9_0= ruleUnit ) )
            	            // InternalKim.g:7468:12: (lv_unit_9_0= ruleUnit )
            	            {
            	            // InternalKim.g:7468:12: (lv_unit_9_0= ruleUnit )
            	            // InternalKim.g:7469:13: lv_unit_9_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_109);
            	            lv_unit_9_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              													}
            	              													set(
            	              														current,
            	              														"unit",
            	              														lv_unit_9_0,
            	              														"org.integratedmodelling.kim.Kim.Unit");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:7494:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7494:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7495:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:7495:122: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7496:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:7499:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7499:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7499:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7499:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7499:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) )
            	    // InternalKim.g:7500:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7504:10: (lv_valueOperators_10_0= ruleValueOperator )
            	    // InternalKim.g:7505:11: lv_valueOperators_10_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_valueOperators_10_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_10_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7522:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    loop176:
            	    do {
            	        int alt176=2;
            	        alt176 = dfa176.predict(input);
            	        switch (alt176) {
            	    	case 1 :
            	    	    // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    // InternalKim.g:7524:11: lv_valueOperators_11_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_109);
            	    	    lv_valueOperators_11_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_11_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop176;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7548:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:7548:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7549:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:7552:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7552:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7552:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    // InternalKim.g:7552:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7552:20: ( (lv_from_12_0= ruleNumber ) )
            	    // InternalKim.g:7553:10: (lv_from_12_0= ruleNumber )
            	    {
            	    // InternalKim.g:7553:10: (lv_from_12_0= ruleNumber )
            	    // InternalKim.g:7554:11: lv_from_12_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_12_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_12_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_13=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_2_2_1());
            	      								
            	    }
            	    // InternalKim.g:7575:9: ( (lv_to_14_0= ruleNumber ) )
            	    // InternalKim.g:7576:10: (lv_to_14_0= ruleNumber )
            	    {
            	    // InternalKim.g:7576:10: (lv_to_14_0= ruleNumber )
            	    // InternalKim.g:7577:11: lv_to_14_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_to_14_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_14_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleValueOperator"
    // InternalKim.g:7614:1: entryRuleValueOperator returns [EObject current=null] : iv_ruleValueOperator= ruleValueOperator EOF ;
    public final EObject entryRuleValueOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueOperator = null;


        try {
            // InternalKim.g:7614:54: (iv_ruleValueOperator= ruleValueOperator EOF )
            // InternalKim.g:7615:2: iv_ruleValueOperator= ruleValueOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueOperator=ruleValueOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueOperator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueOperator"


    // $ANTLR start "ruleValueOperator"
    // InternalKim.g:7621:1: ruleValueOperator returns [EObject current=null] : ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) ;
    public final EObject ruleValueOperator() throws RecognitionException {
        EObject current = null;

        Token lv_downTo_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_total_9_0=null;
        Token lv_averaged_10_0=null;
        Token lv_summed_11_0=null;
        AntlrDatatypeRuleToken lv_modifier_0_0 = null;

        EObject lv_comparisonValue_3_0 = null;

        EObject lv_comparisonQuantity_4_0 = null;

        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonObservable_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7627:2: ( ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) )
            // InternalKim.g:7628:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            {
            // InternalKim.g:7628:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            int alt180=4;
            switch ( input.LA(1) ) {
            case 48:
            case 61:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 124:
                {
                alt180=1;
                }
                break;
            case 125:
                {
                alt180=2;
                }
                break;
            case 126:
                {
                alt180=3;
                }
                break;
            case 127:
                {
                alt180=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }

            switch (alt180) {
                case 1 :
                    // InternalKim.g:7629:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    {
                    // InternalKim.g:7629:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    // InternalKim.g:7630:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    {
                    // InternalKim.g:7630:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) )
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==48||LA178_0==61||(LA178_0>=82 && LA178_0<=94)) ) {
                        alt178=1;
                    }
                    else if ( (LA178_0==124) ) {
                        alt178=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 178, 0, input);

                        throw nvae;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalKim.g:7631:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            {
                            // InternalKim.g:7631:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            // InternalKim.g:7632:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            {
                            // InternalKim.g:7632:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            // InternalKim.g:7633:7: lv_modifier_0_0= ruleVALUE_OPERATOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_111);
                            lv_modifier_0_0=ruleVALUE_OPERATOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"modifier",
                              								lv_modifier_0_0,
                              								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7651:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            {
                            // InternalKim.g:7651:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            // InternalKim.g:7652:6: ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to'
                            {
                            // InternalKim.g:7652:6: ( (lv_downTo_1_0= 'down' ) )
                            // InternalKim.g:7653:7: (lv_downTo_1_0= 'down' )
                            {
                            // InternalKim.g:7653:7: (lv_downTo_1_0= 'down' )
                            // InternalKim.g:7654:8: lv_downTo_1_0= 'down'
                            {
                            lv_downTo_1_0=(Token)match(input,124,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getValueOperatorRule());
                              								}
                              								setWithLastConsumed(current, "downTo", lv_downTo_1_0, "down");
                              							
                            }

                            }


                            }

                            otherlv_2=(Token)match(input,38,FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:7672:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    int alt179=4;
                    alt179 = dfa179.predict(input);
                    switch (alt179) {
                        case 1 :
                            // InternalKim.g:7673:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:7673:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            // InternalKim.g:7674:6: (lv_comparisonValue_3_0= ruleNumber )
                            {
                            // InternalKim.g:7674:6: (lv_comparisonValue_3_0= ruleNumber )
                            // InternalKim.g:7675:7: lv_comparisonValue_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonValue_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonValue",
                              								lv_comparisonValue_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7693:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            {
                            // InternalKim.g:7693:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            // InternalKim.g:7694:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            {
                            // InternalKim.g:7694:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            // InternalKim.g:7695:7: lv_comparisonQuantity_4_0= ruleQuantity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonQuantity_4_0=ruleQuantity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonQuantity",
                              								lv_comparisonQuantity_4_0,
                              								"org.integratedmodelling.kim.Kim.Quantity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:7713:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:7713:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:7714:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:7714:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:7715:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonConcept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							add(
                              								current,
                              								"comparisonConcept",
                              								lv_comparisonConcept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:7733:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            {
                            // InternalKim.g:7733:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            // InternalKim.g:7734:6: otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')'
                            {
                            otherlv_6=(Token)match(input,40,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
                              					
                            }
                            // InternalKim.g:7738:6: ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) )
                            // InternalKim.g:7739:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            {
                            // InternalKim.g:7739:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            // InternalKim.g:7740:8: lv_comparisonObservable_7_0= ruleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_comparisonObservable_7_0=ruleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								set(
                              									current,
                              									"comparisonObservable",
                              									lv_comparisonObservable_7_0,
                              									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7765:3: ( (lv_total_9_0= 'total' ) )
                    {
                    // InternalKim.g:7765:3: ( (lv_total_9_0= 'total' ) )
                    // InternalKim.g:7766:4: (lv_total_9_0= 'total' )
                    {
                    // InternalKim.g:7766:4: (lv_total_9_0= 'total' )
                    // InternalKim.g:7767:5: lv_total_9_0= 'total'
                    {
                    lv_total_9_0=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_total_9_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "total", lv_total_9_0, "total");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7780:3: ( (lv_averaged_10_0= 'averaged' ) )
                    {
                    // InternalKim.g:7780:3: ( (lv_averaged_10_0= 'averaged' ) )
                    // InternalKim.g:7781:4: (lv_averaged_10_0= 'averaged' )
                    {
                    // InternalKim.g:7781:4: (lv_averaged_10_0= 'averaged' )
                    // InternalKim.g:7782:5: lv_averaged_10_0= 'averaged'
                    {
                    lv_averaged_10_0=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_averaged_10_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "averaged", lv_averaged_10_0, "averaged");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7795:3: ( (lv_summed_11_0= 'summed' ) )
                    {
                    // InternalKim.g:7795:3: ( (lv_summed_11_0= 'summed' ) )
                    // InternalKim.g:7796:4: (lv_summed_11_0= 'summed' )
                    {
                    // InternalKim.g:7796:4: (lv_summed_11_0= 'summed' )
                    // InternalKim.g:7797:5: lv_summed_11_0= 'summed'
                    {
                    lv_summed_11_0=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_summed_11_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "summed", lv_summed_11_0, "summed");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueOperator"


    // $ANTLR start "entryRuleAnnotatedObservableSemantics"
    // InternalKim.g:7813:1: entryRuleAnnotatedObservableSemantics returns [EObject current=null] : iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF ;
    public final EObject entryRuleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7817:2: (iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF )
            // InternalKim.g:7818:2: iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedObservableSemantics"


    // $ANTLR start "ruleAnnotatedObservableSemantics"
    // InternalKim.g:7827:1: ruleAnnotatedObservableSemantics returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_generic_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_optional_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_value_1_0 = null;

        EObject lv_declaration_4_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;

        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;

        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7836:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:7837:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:7837:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:7838:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:7838:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==RULE_ANNOTATION_ID) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalKim.g:7839:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7839:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7840:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalKim.g:7857:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?
            int alt182=2;
            alt182 = dfa182.predict(input);
            switch (alt182) {
                case 1 :
                    // InternalKim.g:7858:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
                    {
                    // InternalKim.g:7858:4: ( (lv_value_1_0= ruleValue ) )
                    // InternalKim.g:7859:5: (lv_value_1_0= ruleValue )
                    {
                    // InternalKim.g:7859:5: (lv_value_1_0= ruleValue )
                    // InternalKim.g:7860:6: lv_value_1_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_1_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,27,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:7882:3: ( (lv_generic_3_0= 'any' ) )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==118) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalKim.g:7883:4: (lv_generic_3_0= 'any' )
                    {
                    // InternalKim.g:7883:4: (lv_generic_3_0= 'any' )
                    // InternalKim.g:7884:5: lv_generic_3_0= 'any'
                    {
                    lv_generic_3_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_3_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:7896:3: ( (lv_declaration_4_0= ruleConceptDeclaration ) )
            // InternalKim.g:7897:4: (lv_declaration_4_0= ruleConceptDeclaration )
            {
            // InternalKim.g:7897:4: (lv_declaration_4_0= ruleConceptDeclaration )
            // InternalKim.g:7898:5: lv_declaration_4_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_4_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_4_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:7915:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:7916:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:7916:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:7917:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
            // InternalKim.g:7920:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:7921:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:7921:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop189:
            do {
                int alt189=7;
                alt189 = dfa189.predict(input);
                switch (alt189) {
            	case 1 :
            	    // InternalKim.g:7922:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7922:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:7923:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalKim.g:7923:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:7924:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
            	    // InternalKim.g:7927:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:7927:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7927:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    // InternalKim.g:7927:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    {
            	    otherlv_6=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
            	      								
            	    }
            	    // InternalKim.g:7935:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    // InternalKim.g:7936:10: (lv_accordingTo_8_0= rulePropertyId )
            	    {
            	    // InternalKim.g:7936:10: (lv_accordingTo_8_0= rulePropertyId )
            	    // InternalKim.g:7937:11: lv_accordingTo_8_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_8_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_8_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:7961:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalKim.g:7961:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:7962:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
            	    // InternalKim.g:7965:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:7965:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7965:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    int alt185=2;
            	    int LA185_0 = input.LA(1);

            	    if ( (LA185_0==54) ) {
            	        alt185=1;
            	    }
            	    else if ( (LA185_0==119) ) {
            	        alt185=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 185, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt185) {
            	        case 1 :
            	            // InternalKim.g:7965:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:7965:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:7966:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            {
            	            otherlv_9=(Token)match(input,54,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:7970:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            int alt184=2;
            	            int LA184_0 = input.LA(1);

            	            if ( (LA184_0==EOF||LA184_0==RULE_LOWERCASE_ID||LA184_0==RULE_STRING||(LA184_0>=RULE_CAMELCASE_ID && LA184_0<=RULE_INT)||LA184_0==RULE_BACKCASE_ID||LA184_0==22||LA184_0==29||(LA184_0>=32 && LA184_0<=35)||LA184_0==37||(LA184_0>=39 && LA184_0<=40)||(LA184_0>=42 && LA184_0<=43)||LA184_0==45||LA184_0==48||LA184_0==54||(LA184_0>=60 && LA184_0<=62)||(LA184_0>=68 && LA184_0<=73)||(LA184_0>=82 && LA184_0<=94)||LA184_0==113||(LA184_0>=119 && LA184_0<=122)||(LA184_0>=124 && LA184_0<=127)||(LA184_0>=251 && LA184_0<=252)||LA184_0==259) ) {
            	                alt184=1;
            	            }
            	            else if ( (LA184_0==RULE_UPPERCASE_ID) ) {
            	                int LA184_2 = input.LA(2);

            	                if ( (LA184_2==EOF||LA184_2==RULE_STRING||LA184_2==RULE_INT||LA184_2==22||LA184_2==29||(LA184_2>=32 && LA184_2<=35)||LA184_2==37||LA184_2==39||(LA184_2>=42 && LA184_2<=43)||LA184_2==45||LA184_2==48||LA184_2==54||(LA184_2>=60 && LA184_2<=62)||(LA184_2>=68 && LA184_2<=73)||(LA184_2>=82 && LA184_2<=94)||LA184_2==113||(LA184_2>=119 && LA184_2<=122)||(LA184_2>=124 && LA184_2<=127)||(LA184_2>=251 && LA184_2<=252)||LA184_2==259) ) {
            	                    alt184=1;
            	                }
            	                else if ( (LA184_2==250) ) {
            	                    alt184=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 184, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 184, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt184) {
            	                case 1 :
            	                    // InternalKim.g:7971:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7971:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    // InternalKim.g:7972:12: (lv_unit_10_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7972:12: (lv_unit_10_0= ruleUnit )
            	                    // InternalKim.g:7973:13: lv_unit_10_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_10_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7991:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7991:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    // InternalKim.g:7992:12: (lv_currency_11_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7992:12: (lv_currency_11_0= ruleCurrency )
            	                    // InternalKim.g:7993:13: lv_currency_11_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_11_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8013:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:8013:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            // InternalKim.g:8014:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
            	            {
            	            otherlv_12=(Token)match(input,119,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:8018:10: ( (lv_unit_13_0= ruleUnit ) )
            	            // InternalKim.g:8019:11: (lv_unit_13_0= ruleUnit )
            	            {
            	            // InternalKim.g:8019:11: (lv_unit_13_0= ruleUnit )
            	            // InternalKim.g:8020:12: lv_unit_13_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_13_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_13_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:8044:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:8044:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:8045:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalKim.g:8045:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:8046:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
            	    // InternalKim.g:8049:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:8049:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8049:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    // InternalKim.g:8049:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:8049:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
            	    // InternalKim.g:8050:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:8050:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    // InternalKim.g:8051:11: lv_valueOperators_14_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_14_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_14_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:8068:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    loop186:
            	    do {
            	        int alt186=2;
            	        alt186 = dfa186.predict(input);
            	        switch (alt186) {
            	    	case 1 :
            	    	    // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    // InternalKim.g:8070:11: lv_valueOperators_15_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_15_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_15_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop186;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:8093:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:8093:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    // InternalKim.g:8094:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalKim.g:8094:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    // InternalKim.g:8095:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
            	    // InternalKim.g:8098:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    // InternalKim.g:8098:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8098:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    int alt187=2;
            	    int LA187_0 = input.LA(1);

            	    if ( (LA187_0==120) ) {
            	        alt187=1;
            	    }
            	    else if ( (LA187_0==121) ) {
            	        alt187=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 187, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt187) {
            	        case 1 :
            	            // InternalKim.g:8098:20: ( (lv_optional_16_0= 'optional' ) )
            	            {
            	            // InternalKim.g:8098:20: ( (lv_optional_16_0= 'optional' ) )
            	            // InternalKim.g:8099:10: (lv_optional_16_0= 'optional' )
            	            {
            	            // InternalKim.g:8099:10: (lv_optional_16_0= 'optional' )
            	            // InternalKim.g:8100:11: lv_optional_16_0= 'optional'
            	            {
            	            lv_optional_16_0=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_16_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8113:9: otherlv_17= 'required'
            	            {
            	            otherlv_17=(Token)match(input,121,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:8123:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8123:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:8124:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalKim.g:8124:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:8125:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
            	    // InternalKim.g:8128:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    // InternalKim.g:8128:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8128:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    // InternalKim.g:8128:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:8128:20: ( (lv_from_18_0= ruleNumber ) )
            	    // InternalKim.g:8129:10: (lv_from_18_0= ruleNumber )
            	    {
            	    // InternalKim.g:8129:10: (lv_from_18_0= ruleNumber )
            	    // InternalKim.g:8130:11: lv_from_18_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_18_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_18_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_19=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
            	      								
            	    }
            	    // InternalKim.g:8151:9: ( (lv_to_20_0= ruleNumber ) )
            	    // InternalKim.g:8152:10: (lv_to_20_0= ruleNumber )
            	    {
            	    // InternalKim.g:8152:10: (lv_to_20_0= ruleNumber )
            	    // InternalKim.g:8153:11: lv_to_20_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_20_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_20_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:8176:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8176:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:8177:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalKim.g:8177:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:8178:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
            	    // InternalKim.g:8181:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:8181:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8181:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:8181:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    {
            	    otherlv_21=(Token)match(input,122,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_5_0());
            	      								
            	    }
            	    // InternalKim.g:8185:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    // InternalKim.g:8186:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:8186:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    // InternalKim.g:8187:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    {
            	    // InternalKim.g:8187:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    int alt188=2;
            	    int LA188_0 = input.LA(1);

            	    if ( (LA188_0==RULE_LOWERCASE_ID) ) {
            	        alt188=1;
            	    }
            	    else if ( (LA188_0==RULE_STRING) ) {
            	        alt188=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 188, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt188) {
            	        case 1 :
            	            // InternalKim.g:8188:12: lv_name_22_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8203:12: lv_name_22_2= RULE_STRING
            	            {
            	            lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:8240:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:8244:2: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:8245:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:8254:1: ruleDependency returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_optional_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_name_14_1=null;
        Token lv_name_14_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_options_3_0 = null;

        EObject lv_options_4_0 = null;

        EObject lv_alternativeObservables_7_0 = null;

        EObject lv_alternativeObservables_9_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:8263:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            // InternalKim.g:8264:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            {
            // InternalKim.g:8264:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalKim.g:8265:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalKim.g:8265:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==RULE_ANNOTATION_ID) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalKim.g:8266:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8266:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8267:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDependencyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            // InternalKim.g:8284:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            int alt199=2;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalKim.g:8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )
                    {
                    // InternalKim.g:8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )
                    int alt194=2;
                    alt194 = dfa194.predict(input);
                    switch (alt194) {
                        case 1 :
                            // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            {
                            // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            {
                            // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            {
                            // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            int alt191=4;
                            alt191 = dfa191.predict(input);
                            switch (alt191) {
                                case 1 :
                                    // InternalKim.g:8289:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                                    {
                                    lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8304:8: lv_modelReference_1_2= rulePathName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_2=rulePathName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_2,
                                      									"org.integratedmodelling.kim.Kim.PathName");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8320:8: lv_modelReference_1_3= ruleUrnId
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_3=ruleUrnId();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_3,
                                      									"org.integratedmodelling.kim.Kim.UrnId");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:8336:8: lv_modelReference_1_4= RULE_STRING
                                    {
                                    lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_4,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8354:5: ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? )
                            {
                            // InternalKim.g:8354:5: ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? )
                            // InternalKim.g:8355:6: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )?
                            {
                            // InternalKim.g:8355:6: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            // InternalKim.g:8356:7: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            {
                            // InternalKim.g:8356:7: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            // InternalKim.g:8357:8: lv_observable_2_0= ruleDependencyObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_113);
                            lv_observable_2_0=ruleDependencyObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDependencyRule());
                              								}
                              								set(
                              									current,
                              									"observable",
                              									lv_observable_2_0,
                              									"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:8374:6: ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )?
                            int alt193=2;
                            int LA193_0 = input.LA(1);

                            if ( (LA193_0==RULE_OPTION_KEY) ) {
                                alt193=1;
                            }
                            switch (alt193) {
                                case 1 :
                                    // InternalKim.g:8375:7: ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )*
                                    {
                                    // InternalKim.g:8375:7: ( (lv_options_3_0= ruleOption ) )
                                    // InternalKim.g:8376:8: (lv_options_3_0= ruleOption )
                                    {
                                    // InternalKim.g:8376:8: (lv_options_3_0= ruleOption )
                                    // InternalKim.g:8377:9: lv_options_3_0= ruleOption
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_options_3_0=ruleOption();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      									}
                                      									add(
                                      										current,
                                      										"options",
                                      										lv_options_3_0,
                                      										"org.integratedmodelling.kim.Kim.Option");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:8394:7: ( (lv_options_4_0= ruleOption ) )*
                                    loop192:
                                    do {
                                        int alt192=2;
                                        int LA192_0 = input.LA(1);

                                        if ( (LA192_0==RULE_OPTION_KEY) ) {
                                            alt192=1;
                                        }


                                        switch (alt192) {
                                    	case 1 :
                                    	    // InternalKim.g:8395:8: (lv_options_4_0= ruleOption )
                                    	    {
                                    	    // InternalKim.g:8395:8: (lv_options_4_0= ruleOption )
                                    	    // InternalKim.g:8396:9: lv_options_4_0= ruleOption
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_113);
                                    	    lv_options_4_0=ruleOption();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getDependencyRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"options",
                                    	      										lv_options_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.Option");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop192;
                                        }
                                    } while (true);


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8417:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    {
                    // InternalKim.g:8417:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    // InternalKim.g:8418:5: ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalKim.g:8418:5: ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    // InternalKim.g:8419:6: ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
                    // InternalKim.g:8422:6: ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    // InternalKim.g:8423:7: ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalKim.g:8423:7: ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+
                    int cnt198=0;
                    loop198:
                    do {
                        int alt198=3;
                        int LA198_0 = input.LA(1);

                        if ( LA198_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                            alt198=1;
                        }
                        else if ( LA198_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                            alt198=2;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // InternalKim.g:8424:5: ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) )
                    	    {
                    	    // InternalKim.g:8424:5: ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) )
                    	    // InternalKim.g:8425:6: {...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
                    	    }
                    	    // InternalKim.g:8425:110: ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) )
                    	    // InternalKim.g:8426:7: ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
                    	    // InternalKim.g:8429:10: ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) )
                    	    // InternalKim.g:8429:11: {...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:8429:20: (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? )
                    	    // InternalKim.g:8429:21: otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )?
                    	    {
                    	    otherlv_6=(Token)match(input,40,FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8433:10: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    // InternalKim.g:8434:11: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    {
                    	    // InternalKim.g:8434:11: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    // InternalKim.g:8435:12: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	      												}
                    	      												add(
                    	      													current,
                    	      													"alternativeObservables",
                    	      													lv_alternativeObservables_7_0,
                    	      													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }

                    	    // InternalKim.g:8452:10: (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )*
                    	    loop195:
                    	    do {
                    	        int alt195=2;
                    	        int LA195_0 = input.LA(1);

                    	        if ( (LA195_0==29) ) {
                    	            alt195=1;
                    	        }


                    	        switch (alt195) {
                    	    	case 1 :
                    	    	    // InternalKim.g:8453:11: otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,29,FOLLOW_103); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      											newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
                    	    	      										
                    	    	    }
                    	    	    // InternalKim.g:8457:11: ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    // InternalKim.g:8458:12: (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    {
                    	    	    // InternalKim.g:8458:12: (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    // InternalKim.g:8459:13: lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
                    	    	      												
                    	    	    }
                    	    	    pushFollow(FOLLOW_29);
                    	    	    lv_alternativeObservables_9_0=ruleAlternativeDependencyObservableSemantics();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													if (current==null) {
                    	    	      														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	    	      													}
                    	    	      													add(
                    	    	      														current,
                    	    	      														"alternativeObservables",
                    	    	      														lv_alternativeObservables_9_0,
                    	    	      														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	    	      													afterParserOrEnumRuleCall();
                    	    	      												
                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop195;
                    	        }
                    	    } while (true);

                    	    otherlv_10=(Token)match(input,41,FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
                    	      									
                    	    }
                    	    // InternalKim.g:8481:10: ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )?
                    	    int alt196=3;
                    	    int LA196_0 = input.LA(1);

                    	    if ( (LA196_0==120) ) {
                    	        alt196=1;
                    	    }
                    	    else if ( (LA196_0==121) ) {
                    	        alt196=2;
                    	    }
                    	    switch (alt196) {
                    	        case 1 :
                    	            // InternalKim.g:8482:11: ( (lv_optional_11_0= 'optional' ) )
                    	            {
                    	            // InternalKim.g:8482:11: ( (lv_optional_11_0= 'optional' ) )
                    	            // InternalKim.g:8483:12: (lv_optional_11_0= 'optional' )
                    	            {
                    	            // InternalKim.g:8483:12: (lv_optional_11_0= 'optional' )
                    	            // InternalKim.g:8484:13: lv_optional_11_0= 'optional'
                    	            {
                    	            lv_optional_11_0=(Token)match(input,120,FOLLOW_115); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_optional_11_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(current, "optional", lv_optional_11_0 != null, "optional");
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:8497:11: otherlv_12= 'required'
                    	            {
                    	            otherlv_12=(Token)match(input,121,FOLLOW_115); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_12, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
                    	              										
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:8508:5: ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8508:5: ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) )
                    	    // InternalKim.g:8509:6: {...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
                    	    }
                    	    // InternalKim.g:8509:110: ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) )
                    	    // InternalKim.g:8510:7: ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
                    	    // InternalKim.g:8513:10: ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) )
                    	    // InternalKim.g:8513:11: {...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:8513:20: (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) )
                    	    // InternalKim.g:8513:21: otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) )
                    	    {
                    	    otherlv_13=(Token)match(input,122,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_13, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_1_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8517:10: ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) )
                    	    // InternalKim.g:8518:11: ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) )
                    	    {
                    	    // InternalKim.g:8518:11: ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) )
                    	    // InternalKim.g:8519:12: (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING )
                    	    {
                    	    // InternalKim.g:8519:12: (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING )
                    	    int alt197=2;
                    	    int LA197_0 = input.LA(1);

                    	    if ( (LA197_0==RULE_LOWERCASE_ID) ) {
                    	        alt197=1;
                    	    }
                    	    else if ( (LA197_0==RULE_STRING) ) {
                    	        alt197=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 197, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt197) {
                    	        case 1 :
                    	            // InternalKim.g:8520:13: lv_name_14_1= RULE_LOWERCASE_ID
                    	            {
                    	            lv_name_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_115); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_14_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_1_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_14_1,
                    	              														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	              												
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:8535:13: lv_name_14_2= RULE_STRING
                    	            {
                    	            lv_name_14_2=(Token)match(input,RULE_STRING,FOLLOW_115); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_14_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_1_1_0_1());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_14_2,
                    	              														"org.eclipse.xtext.common.Terminals.STRING");
                    	              												
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt198 >= 1 ) break loop198;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(198, input);
                                throw eee;
                        }
                        cnt198++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:8574:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8578:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:8579:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:8588:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8597:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:8598:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:8598:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:8599:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:8599:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt200=0;
            loop200:
            do {
                int alt200=2;
                alt200 = dfa200.predict(input);
                switch (alt200) {
            	case 1 :
            	    // InternalKim.g:8600:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:8600:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:8601:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt200 >= 1 ) break loop200;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(200, input);
                        throw eee;
                }
                cnt200++;
            } while (true);

            // InternalKim.g:8618:3: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt206=2;
            alt206 = dfa206.predict(input);
            switch (alt206) {
                case 1 :
                    // InternalKim.g:8619:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:8619:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:8620:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:8623:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop205:
                    do {
                        int alt205=12;
                        alt205 = dfa205.predict(input);
                        switch (alt205) {
                    	case 1 :
                    	    // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
                    	    // InternalKim.g:8626:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:8626:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8627:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:8630:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8630:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8630:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8631:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_2=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8635:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
                    	    int alt201=2;
                    	    int LA201_0 = input.LA(1);

                    	    if ( (LA201_0==28) ) {
                    	        alt201=1;
                    	    }
                    	    switch (alt201) {
                    	        case 1 :
                    	            // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
                    	            {
                    	            // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
                    	            // InternalKim.g:8638:13: lv_distributedOfInherency_3_0= 'each'
                    	            {
                    	            lv_distributedOfInherency_3_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_0_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              													}
                    	              													setWithLastConsumed(current, "distributedOfInherency", lv_distributedOfInherency_3_0 != null, "each");
                    	              												
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8650:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8652:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
                    	      												
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      													if (current==null) {
                    	      														current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      													}
                    	      													set(
                    	      														current,
                    	      														"inherency",
                    	      														lv_inherency_4_0,
                    	      														"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      													afterParserOrEnumRuleCall();
                    	      												
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8678:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:8678:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8679:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:8682:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8682:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8682:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8682:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_5=(Token)match(input,75,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8686:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
                    	    int alt202=2;
                    	    int LA202_0 = input.LA(1);

                    	    if ( (LA202_0==28) ) {
                    	        alt202=1;
                    	    }
                    	    switch (alt202) {
                    	        case 1 :
                    	            // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
                    	            {
                    	            // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
                    	            // InternalKim.g:8689:12: lv_distributedForInherency_6_0= 'each'
                    	            {
                    	            lv_distributedForInherency_6_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedForInherency", lv_distributedForInherency_6_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8701:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8703:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"motivation",
                    	      													lv_motivation_7_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8728:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:8728:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8729:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:8732:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8732:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8732:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8732:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,104,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8736:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8738:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_9_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8762:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:8762:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8763:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:8766:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8766:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8766:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8766:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_10=(Token)match(input,129,FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_11=(Token)match(input,94,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8774:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8776:11: lv_causant_12_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_causant_12_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_12_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8800:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:8800:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8801:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:8804:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8804:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8804:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8804:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,130,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_14=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8812:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8814:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_15_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8838:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:8838:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8839:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:8842:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8842:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8842:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8842:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_16=(Token)match(input,131,FOLLOW_120); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_17=(Token)match(input,54,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8850:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8852:11: lv_container_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_container_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8876:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:8876:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8877:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:8880:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8880:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8880:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8880:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,132,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8884:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8886:11: lv_contained_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_contained_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8910:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:8910:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8911:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:8914:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8914:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8914:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8914:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,133,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8918:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8920:11: lv_caused_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_caused_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8944:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:8944:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8945:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:8948:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8948:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8948:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8948:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_23=(Token)match(input,134,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8952:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
                    	    int alt203=2;
                    	    int LA203_0 = input.LA(1);

                    	    if ( (LA203_0==28) ) {
                    	        alt203=1;
                    	    }
                    	    switch (alt203) {
                    	        case 1 :
                    	            // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            {
                    	            // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            // InternalKim.g:8955:12: lv_distributedTemporalInherency_24_0= 'each'
                    	            {
                    	            lv_distributedTemporalInherency_24_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedTemporalInherency_24_0, grammarAccess.getConceptDeclarationAccess().getDistributedTemporalInherencyEachKeyword_1_8_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedTemporalInherency", lv_distributedTemporalInherency_24_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8967:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8969:12: lv_during_25_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_during_25_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"during",
                    	      													lv_during_25_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8994:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:8994:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8995:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:8998:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8998:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8998:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8998:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_26=(Token)match(input,135,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_26, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9002:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
                    	    int alt204=2;
                    	    int LA204_0 = input.LA(1);

                    	    if ( (LA204_0==28) ) {
                    	        alt204=1;
                    	    }
                    	    switch (alt204) {
                    	        case 1 :
                    	            // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            {
                    	            // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            // InternalKim.g:9005:12: lv_distributedWithinInherency_27_0= 'each'
                    	            {
                    	            lv_distributedWithinInherency_27_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedWithinInherency_27_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedWithinInherency", lv_distributedWithinInherency_27_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:9017:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9019:12: lv_context_28_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_context_28_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"context",
                    	      													lv_context_28_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 11 :
                    	    // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9044:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
                    	    }
                    	    // InternalKim.g:9044:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9045:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
                    	    // InternalKim.g:9048:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9048:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9048:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9048:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_29=(Token)match(input,136,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_29, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9052:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9054:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipSource",
                    	      												lv_relationshipSource_30_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }

                    	    otherlv_31=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_31, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
                    	      								
                    	    }
                    	    // InternalKim.g:9075:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9077:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipTarget",
                    	      												lv_relationshipTarget_32_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop205;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:9114:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:9114:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:9115:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:9121:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_templateType_3_1=null;
        Token lv_templateType_3_2=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token lv_name_12_0=null;
        Token otherlv_14=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_18_0=null;
        Token otherlv_20=null;
        Token lv_name_21_0=null;
        Token otherlv_23=null;
        Token lv_name_24_0=null;
        Token otherlv_26=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_30_0=null;
        Token otherlv_32=null;
        Token lv_name_33_0=null;
        Token lv_template_34_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_extends_4_0 = null;

        EObject lv_extends_7_0 = null;

        EObject lv_extends_10_0 = null;

        EObject lv_extends_13_0 = null;

        EObject lv_extends_16_0 = null;

        EObject lv_extends_19_0 = null;

        EObject lv_extends_22_0 = null;

        EObject lv_extends_25_0 = null;

        EObject lv_extends_28_0 = null;

        EObject lv_extends_31_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9127:2: ( ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) ) )
            // InternalKim.g:9128:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )
            {
            // InternalKim.g:9128:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )
            int alt209=4;
            alt209 = dfa209.predict(input);
            switch (alt209) {
                case 1 :
                    // InternalKim.g:9129:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    {
                    // InternalKim.g:9129:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    // InternalKim.g:9130:4: (lv_name_0_0= ruleAuthorityId )
                    {
                    // InternalKim.g:9130:4: (lv_name_0_0= ruleAuthorityId )
                    // InternalKim.g:9131:5: lv_name_0_0= ruleAuthorityId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameAuthorityIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_0=ruleAuthorityId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.AuthorityId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9149:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:9149:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:9150:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:9150:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:9151:5: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9168:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:9168:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    // InternalKim.g:9169:4: (lv_name_2_0= ruleNamespaceId )
                    {
                    // InternalKim.g:9169:4: (lv_name_2_0= ruleNamespaceId )
                    // InternalKim.g:9170:5: lv_name_2_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_2_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_2_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:9188:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) )
                    {
                    // InternalKim.g:9188:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) )
                    // InternalKim.g:9189:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) )
                    {
                    // InternalKim.g:9189:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) )
                    // InternalKim.g:9190:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    {
                    // InternalKim.g:9190:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    // InternalKim.g:9191:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    {
                    // InternalKim.g:9191:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==137) ) {
                        alt207=1;
                    }
                    else if ( (LA207_0==138) ) {
                        alt207=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 207, 0, input);

                        throw nvae;
                    }
                    switch (alt207) {
                        case 1 :
                            // InternalKim.g:9192:7: lv_templateType_3_1= '${'
                            {
                            lv_templateType_3_1=(Token)match(input,137,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_3_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9203:7: lv_templateType_3_2= '#{'
                            {
                            lv_templateType_3_2=(Token)match(input,138,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_3_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:9216:4: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) )
                    int alt208=10;
                    alt208 = dfa208.predict(input);
                    switch (alt208) {
                        case 1 :
                            // InternalKim.g:9217:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
                            {
                            // InternalKim.g:9217:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
                            // InternalKim.g:9218:6: ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) )
                            {
                            // InternalKim.g:9218:6: ( (lv_extends_4_0= ruleConcept ) )
                            // InternalKim.g:9219:7: (lv_extends_4_0= ruleConcept )
                            {
                            // InternalKim.g:9219:7: (lv_extends_4_0= ruleConcept )
                            // InternalKim.g:9220:8: lv_extends_4_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_4_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_4_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,111,FOLLOW_121); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_0_1());
                              					
                            }
                            // InternalKim.g:9241:6: ( (lv_name_6_0= 'context' ) )
                            // InternalKim.g:9242:7: (lv_name_6_0= 'context' )
                            {
                            // InternalKim.g:9242:7: (lv_name_6_0= 'context' )
                            // InternalKim.g:9243:8: lv_name_6_0= 'context'
                            {
                            lv_name_6_0=(Token)match(input,66,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_6_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_3_1_0_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_6_0, "context");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9257:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
                            {
                            // InternalKim.g:9257:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
                            // InternalKim.g:9258:6: ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) )
                            {
                            // InternalKim.g:9258:6: ( (lv_extends_7_0= ruleConcept ) )
                            // InternalKim.g:9259:7: (lv_extends_7_0= ruleConcept )
                            {
                            // InternalKim.g:9259:7: (lv_extends_7_0= ruleConcept )
                            // InternalKim.g:9260:8: lv_extends_7_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_7_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_7_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,111,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_1_1());
                              					
                            }
                            // InternalKim.g:9281:6: ( (lv_name_9_0= 'inherent' ) )
                            // InternalKim.g:9282:7: (lv_name_9_0= 'inherent' )
                            {
                            // InternalKim.g:9282:7: (lv_name_9_0= 'inherent' )
                            // InternalKim.g:9283:8: lv_name_9_0= 'inherent'
                            {
                            lv_name_9_0=(Token)match(input,139,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_9_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_3_1_1_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_9_0, "inherent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:9297:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
                            {
                            // InternalKim.g:9297:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
                            // InternalKim.g:9298:6: ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) )
                            {
                            // InternalKim.g:9298:6: ( (lv_extends_10_0= ruleConcept ) )
                            // InternalKim.g:9299:7: (lv_extends_10_0= ruleConcept )
                            {
                            // InternalKim.g:9299:7: (lv_extends_10_0= ruleConcept )
                            // InternalKim.g:9300:8: lv_extends_10_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_10_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_10_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,111,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_2_1());
                              					
                            }
                            // InternalKim.g:9321:6: ( (lv_name_12_0= 'compresent' ) )
                            // InternalKim.g:9322:7: (lv_name_12_0= 'compresent' )
                            {
                            // InternalKim.g:9322:7: (lv_name_12_0= 'compresent' )
                            // InternalKim.g:9323:8: lv_name_12_0= 'compresent'
                            {
                            lv_name_12_0=(Token)match(input,140,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_12_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_3_1_2_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_12_0, "compresent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:9337:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
                            {
                            // InternalKim.g:9337:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
                            // InternalKim.g:9338:6: ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) )
                            {
                            // InternalKim.g:9338:6: ( (lv_extends_13_0= ruleConcept ) )
                            // InternalKim.g:9339:7: (lv_extends_13_0= ruleConcept )
                            {
                            // InternalKim.g:9339:7: (lv_extends_13_0= ruleConcept )
                            // InternalKim.g:9340:8: lv_extends_13_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_13_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_13_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_14=(Token)match(input,111,FOLLOW_125); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_3_1());
                              					
                            }
                            // InternalKim.g:9361:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:9362:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:9362:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:9363:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,130,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_3_1_3_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:9377:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
                            {
                            // InternalKim.g:9377:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
                            // InternalKim.g:9378:6: ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) )
                            {
                            // InternalKim.g:9378:6: ( (lv_extends_16_0= ruleConcept ) )
                            // InternalKim.g:9379:7: (lv_extends_16_0= ruleConcept )
                            {
                            // InternalKim.g:9379:7: (lv_extends_16_0= ruleConcept )
                            // InternalKim.g:9380:8: lv_extends_16_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_16_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_16_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_17=(Token)match(input,111,FOLLOW_126); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_4_1());
                              					
                            }
                            // InternalKim.g:9401:6: ( (lv_name_18_0= 'container' ) )
                            // InternalKim.g:9402:7: (lv_name_18_0= 'container' )
                            {
                            // InternalKim.g:9402:7: (lv_name_18_0= 'container' )
                            // InternalKim.g:9403:8: lv_name_18_0= 'container'
                            {
                            lv_name_18_0=(Token)match(input,141,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_18_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_3_1_4_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_18_0, "container");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:9417:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
                            {
                            // InternalKim.g:9417:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
                            // InternalKim.g:9418:6: ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) )
                            {
                            // InternalKim.g:9418:6: ( (lv_extends_19_0= ruleConcept ) )
                            // InternalKim.g:9419:7: (lv_extends_19_0= ruleConcept )
                            {
                            // InternalKim.g:9419:7: (lv_extends_19_0= ruleConcept )
                            // InternalKim.g:9420:8: lv_extends_19_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_19_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_19_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,111,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_5_1());
                              					
                            }
                            // InternalKim.g:9441:6: ( (lv_name_21_0= 'contained' ) )
                            // InternalKim.g:9442:7: (lv_name_21_0= 'contained' )
                            {
                            // InternalKim.g:9442:7: (lv_name_21_0= 'contained' )
                            // InternalKim.g:9443:8: lv_name_21_0= 'contained'
                            {
                            lv_name_21_0=(Token)match(input,131,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_21_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_3_1_5_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_21_0, "contained");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:9457:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
                            {
                            // InternalKim.g:9457:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
                            // InternalKim.g:9458:6: ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) )
                            {
                            // InternalKim.g:9458:6: ( (lv_extends_22_0= ruleConcept ) )
                            // InternalKim.g:9459:7: (lv_extends_22_0= ruleConcept )
                            {
                            // InternalKim.g:9459:7: (lv_extends_22_0= ruleConcept )
                            // InternalKim.g:9460:8: lv_extends_22_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_22_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_22_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_23=(Token)match(input,111,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_6_1());
                              					
                            }
                            // InternalKim.g:9481:6: ( (lv_name_24_0= 'purpose' ) )
                            // InternalKim.g:9482:7: (lv_name_24_0= 'purpose' )
                            {
                            // InternalKim.g:9482:7: (lv_name_24_0= 'purpose' )
                            // InternalKim.g:9483:8: lv_name_24_0= 'purpose'
                            {
                            lv_name_24_0=(Token)match(input,142,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_24_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_3_1_6_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_24_0, "purpose");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:9497:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
                            {
                            // InternalKim.g:9497:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
                            // InternalKim.g:9498:6: ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) )
                            {
                            // InternalKim.g:9498:6: ( (lv_extends_25_0= ruleConcept ) )
                            // InternalKim.g:9499:7: (lv_extends_25_0= ruleConcept )
                            {
                            // InternalKim.g:9499:7: (lv_extends_25_0= ruleConcept )
                            // InternalKim.g:9500:8: lv_extends_25_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_25_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_25_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_26=(Token)match(input,111,FOLLOW_129); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_7_1());
                              					
                            }
                            // InternalKim.g:9521:6: ( (lv_name_27_0= 'causant' ) )
                            // InternalKim.g:9522:7: (lv_name_27_0= 'causant' )
                            {
                            // InternalKim.g:9522:7: (lv_name_27_0= 'causant' )
                            // InternalKim.g:9523:8: lv_name_27_0= 'causant'
                            {
                            lv_name_27_0=(Token)match(input,143,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_3_1_7_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "causant");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:9537:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
                            {
                            // InternalKim.g:9537:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
                            // InternalKim.g:9538:6: ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) )
                            {
                            // InternalKim.g:9538:6: ( (lv_extends_28_0= ruleConcept ) )
                            // InternalKim.g:9539:7: (lv_extends_28_0= ruleConcept )
                            {
                            // InternalKim.g:9539:7: (lv_extends_28_0= ruleConcept )
                            // InternalKim.g:9540:8: lv_extends_28_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_28_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_28_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_29=(Token)match(input,111,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_8_1());
                              					
                            }
                            // InternalKim.g:9561:6: ( (lv_name_30_0= 'caused' ) )
                            // InternalKim.g:9562:7: (lv_name_30_0= 'caused' )
                            {
                            // InternalKim.g:9562:7: (lv_name_30_0= 'caused' )
                            // InternalKim.g:9563:8: lv_name_30_0= 'caused'
                            {
                            lv_name_30_0=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_30_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_3_1_8_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_30_0, "caused");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:9577:5: ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) )
                            {
                            // InternalKim.g:9577:5: ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) )
                            // InternalKim.g:9578:6: ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) )
                            {
                            // InternalKim.g:9578:6: ( (lv_extends_31_0= ruleConcept ) )
                            // InternalKim.g:9579:7: (lv_extends_31_0= ruleConcept )
                            {
                            // InternalKim.g:9579:7: (lv_extends_31_0= ruleConcept )
                            // InternalKim.g:9580:8: lv_extends_31_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_9_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_31_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_31_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_32=(Token)match(input,111,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_32, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_9_1());
                              					
                            }
                            // InternalKim.g:9601:6: ( (lv_name_33_0= 'cooccurrent' ) )
                            // InternalKim.g:9602:7: (lv_name_33_0= 'cooccurrent' )
                            {
                            // InternalKim.g:9602:7: (lv_name_33_0= 'cooccurrent' )
                            // InternalKim.g:9603:8: lv_name_33_0= 'cooccurrent'
                            {
                            lv_name_33_0=(Token)match(input,144,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_33_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_3_1_9_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_33_0, "cooccurrent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9617:4: ( (lv_template_34_0= '}' ) )
                    // InternalKim.g:9618:5: (lv_template_34_0= '}' )
                    {
                    // InternalKim.g:9618:5: (lv_template_34_0= '}' )
                    // InternalKim.g:9619:6: lv_template_34_0= '}'
                    {
                    lv_template_34_0=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_34_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", lv_template_34_0 != null, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:9636:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:9636:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:9637:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:9643:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:9649:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) )
            // InternalKim.g:9650:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            {
            // InternalKim.g:9650:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            int alt210=10;
            switch ( input.LA(1) ) {
            case 66:
                {
                alt210=1;
                }
                break;
            case 139:
                {
                alt210=2;
                }
                break;
            case 140:
                {
                alt210=3;
                }
                break;
            case 130:
                {
                alt210=4;
                }
                break;
            case 141:
                {
                alt210=5;
                }
                break;
            case 131:
                {
                alt210=6;
                }
                break;
            case 142:
                {
                alt210=7;
                }
                break;
            case 143:
                {
                alt210=8;
                }
                break;
            case 129:
                {
                alt210=9;
                }
                break;
            case 144:
                {
                alt210=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }

            switch (alt210) {
                case 1 :
                    // InternalKim.g:9651:3: kw= 'context'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:9657:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:9663:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:9669:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:9675:3: kw= 'container'
                    {
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:9681:3: kw= 'contained'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:9687:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:9693:3: kw= 'causant'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:9699:3: kw= 'caused'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:9705:3: kw= 'cooccurrent'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:9714:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:9714:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:9715:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:9721:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token lv_authConcept_2_0=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_stringIdentifier_4_3=null;
        Token lv_stringIdentifier_4_4=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token lv_change_25_0=null;
        Token lv_rate_26_0=null;
        Token otherlv_27=null;
        Token lv_changed_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token lv_uncertainty_35_0=null;
        Token otherlv_36=null;
        Token lv_magnitude_38_0=null;
        Token otherlv_39=null;
        Token lv_level_41_0=null;
        Token otherlv_42=null;
        Token lv_type_44_0=null;
        Token otherlv_45=null;
        Token lv_observability_47_0=null;
        Token otherlv_48=null;
        Token lv_proportion_50_0=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token lv_percentage_55_0=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token lv_ratio_60_0=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token lv_monetary_65_0=null;
        Token lv_value_66_0=null;
        Token otherlv_67=null;
        Token otherlv_69=null;
        Token lv_occurrence_71_0=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token otherlv_76=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_28_0 = null;

        EObject lv_concept_30_0 = null;

        EObject lv_changedFrom_32_0 = null;

        EObject lv_changedTo_34_0 = null;

        EObject lv_concept_37_0 = null;

        EObject lv_concept_40_0 = null;

        EObject lv_concept_43_0 = null;

        EObject lv_concept_46_0 = null;

        EObject lv_concept_49_0 = null;

        EObject lv_concept_52_0 = null;

        EObject lv_other_54_0 = null;

        EObject lv_concept_57_0 = null;

        EObject lv_other_59_0 = null;

        EObject lv_concept_62_0 = null;

        EObject lv_other_64_0 = null;

        EObject lv_concept_68_0 = null;

        EObject lv_other_70_0 = null;

        EObject lv_concept_73_0 = null;

        EObject lv_declaration_75_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9727:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) ) )
            // InternalKim.g:9728:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) )
            {
            // InternalKim.g:9728:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) )
            int alt224=19;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 137:
            case 138:
            case 146:
            case 147:
                {
                alt224=1;
                }
                break;
            case 149:
                {
                alt224=2;
                }
                break;
            case 150:
                {
                alt224=3;
                }
                break;
            case 151:
                {
                alt224=4;
                }
                break;
            case 152:
                {
                alt224=5;
                }
                break;
            case 153:
                {
                alt224=6;
                }
                break;
            case 154:
                {
                alt224=7;
                }
                break;
            case 156:
                {
                alt224=8;
                }
                break;
            case 157:
                {
                alt224=9;
                }
                break;
            case 158:
                {
                alt224=10;
                }
                break;
            case 159:
                {
                alt224=11;
                }
                break;
            case 160:
                {
                alt224=12;
                }
                break;
            case 161:
                {
                alt224=13;
                }
                break;
            case 162:
                {
                alt224=14;
                }
                break;
            case 163:
                {
                alt224=15;
                }
                break;
            case 164:
                {
                alt224=16;
                }
                break;
            case 165:
            case 166:
                {
                alt224=17;
                }
                break;
            case 167:
                {
                alt224=18;
                }
                break;
            case 40:
                {
                alt224=19;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }

            switch (alt224) {
                case 1 :
                    // InternalKim.g:9729:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:9729:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:9730:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:9730:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( ((LA212_0>=146 && LA212_0<=147)) ) {
                        alt212=1;
                    }
                    switch (alt212) {
                        case 1 :
                            // InternalKim.g:9731:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:9731:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:9732:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:9732:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt211=2;
                            int LA211_0 = input.LA(1);

                            if ( (LA211_0==146) ) {
                                alt211=1;
                            }
                            else if ( (LA211_0==147) ) {
                                alt211=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 211, 0, input);

                                throw nvae;
                            }
                            switch (alt211) {
                                case 1 :
                                    // InternalKim.g:9733:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,146,FOLLOW_132); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", lv_negated_0_1 != null, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9744:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,147,FOLLOW_132); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", lv_negated_0_2 != null, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9757:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:9758:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:9758:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:9759:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_133);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9776:4: ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==148) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // InternalKim.g:9777:5: ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            // InternalKim.g:9777:5: ( (lv_authConcept_2_0= 'identified' ) )
                            // InternalKim.g:9778:6: (lv_authConcept_2_0= 'identified' )
                            {
                            // InternalKim.g:9778:6: (lv_authConcept_2_0= 'identified' )
                            // InternalKim.g:9779:7: lv_authConcept_2_0= 'identified'
                            {
                            lv_authConcept_2_0=(Token)match(input,148,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "authConcept", lv_authConcept_2_0 != null, "identified");
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,27,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:9795:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt214=2;
                            int LA214_0 = input.LA(1);

                            if ( ((LA214_0>=RULE_UPPERCASE_ID && LA214_0<=RULE_STRING)||LA214_0==RULE_CAMELCASE_ID||LA214_0==RULE_ID) ) {
                                alt214=1;
                            }
                            else if ( (LA214_0==RULE_INT) ) {
                                alt214=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 214, 0, input);

                                throw nvae;
                            }
                            switch (alt214) {
                                case 1 :
                                    // InternalKim.g:9796:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    {
                                    // InternalKim.g:9796:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    // InternalKim.g:9797:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    {
                                    // InternalKim.g:9797:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    // InternalKim.g:9798:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    {
                                    // InternalKim.g:9798:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    int alt213=4;
                                    switch ( input.LA(1) ) {
                                    case RULE_ID:
                                        {
                                        alt213=1;
                                        }
                                        break;
                                    case RULE_STRING:
                                        {
                                        alt213=2;
                                        }
                                        break;
                                    case RULE_UPPERCASE_ID:
                                        {
                                        alt213=3;
                                        }
                                        break;
                                    case RULE_CAMELCASE_ID:
                                        {
                                        alt213=4;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 213, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt213) {
                                        case 1 :
                                            // InternalKim.g:9799:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:9814:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;
                                        case 3 :
                                            // InternalKim.g:9829:9: lv_stringIdentifier_4_3= RULE_UPPERCASE_ID
                                            {
                                            lv_stringIdentifier_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_3,
                                              										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 4 :
                                            // InternalKim.g:9844:9: lv_stringIdentifier_4_4= RULE_CAMELCASE_ID
                                            {
                                            lv_stringIdentifier_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_4,
                                              										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9862:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:9862:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:9863:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:9863:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:9864:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_119); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,94,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:9885:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:9886:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:9886:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:9887:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:9887:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt215=2;
                            int LA215_0 = input.LA(1);

                            if ( (LA215_0==RULE_UPPERCASE_ID) ) {
                                alt215=1;
                            }
                            else if ( (LA215_0==RULE_UPPERCASE_PATH) ) {
                                alt215=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 215, 0, input);

                                throw nvae;
                            }
                            switch (alt215) {
                                case 1 :
                                    // InternalKim.g:9888:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9903:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9923:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9923:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9924:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9924:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:9925:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:9925:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:9926:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,149,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", lv_presence_8_0 != null, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:9942:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9943:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9943:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9944:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9963:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9963:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9964:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9964:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:9965:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:9965:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:9966:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,150,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", lv_count_11_0 != null, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:9982:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9983:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9983:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9984:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:10003:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10003:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10004:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10004:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:10005:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:10005:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:10006:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,151,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", lv_distance_14_0 != null, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10018:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt217=2;
                    int LA217_0 = input.LA(1);

                    if ( (LA217_0==38) ) {
                        alt217=1;
                    }
                    else if ( (LA217_0==107) ) {
                        alt217=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 217, 0, input);

                        throw nvae;
                    }
                    switch (alt217) {
                        case 1 :
                            // InternalKim.g:10019:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10024:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,107,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:10029:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10030:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10030:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10031:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:10050:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10050:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10051:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10051:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:10052:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:10052:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:10053:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,152,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", lv_probability_18_0 != null, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:10069:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10070:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10070:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10071:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:10090:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10090:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10091:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10091:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:10092:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:10092:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:10093:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,153,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", lv_assessment_21_0 != null, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:10109:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10110:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10110:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10111:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:10130:3: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10130:3: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10131:4: otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) )
                    {
                    otherlv_24=(Token)match(input,154,FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getConceptAccess().getChangeKeyword_6_0());
                      			
                    }
                    // InternalKim.g:10135:4: ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) )
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==54) ) {
                        alt218=1;
                    }
                    else if ( (LA218_0==155) ) {
                        alt218=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 218, 0, input);

                        throw nvae;
                    }
                    switch (alt218) {
                        case 1 :
                            // InternalKim.g:10136:5: ( (lv_change_25_0= 'in' ) )
                            {
                            // InternalKim.g:10136:5: ( (lv_change_25_0= 'in' ) )
                            // InternalKim.g:10137:6: (lv_change_25_0= 'in' )
                            {
                            // InternalKim.g:10137:6: (lv_change_25_0= 'in' )
                            // InternalKim.g:10138:7: lv_change_25_0= 'in'
                            {
                            lv_change_25_0=(Token)match(input,54,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_25_0, grammarAccess.getConceptAccess().getChangeInKeyword_6_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "change", lv_change_25_0 != null, "in");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10151:5: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                            {
                            // InternalKim.g:10151:5: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                            // InternalKim.g:10152:6: ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of'
                            {
                            // InternalKim.g:10152:6: ( (lv_rate_26_0= 'rate' ) )
                            // InternalKim.g:10153:7: (lv_rate_26_0= 'rate' )
                            {
                            // InternalKim.g:10153:7: (lv_rate_26_0= 'rate' )
                            // InternalKim.g:10154:8: lv_rate_26_0= 'rate'
                            {
                            lv_rate_26_0=(Token)match(input,155,FOLLOW_136); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_rate_26_0, grammarAccess.getConceptAccess().getRateRateKeyword_6_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptRule());
                              								}
                              								setWithLastConsumed(current, "rate", lv_rate_26_0 != null, "rate");
                              							
                            }

                            }


                            }

                            otherlv_27=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getOfKeyword_6_1_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10172:4: ( (lv_concept_28_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10173:5: (lv_concept_28_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10173:5: (lv_concept_28_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10174:6: lv_concept_28_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_28_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_28_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:10193:3: ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10193:3: ( ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10194:4: ( (lv_changed_29_0= 'changed' ) ) ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10194:4: ( (lv_changed_29_0= 'changed' ) )
                    // InternalKim.g:10195:5: (lv_changed_29_0= 'changed' )
                    {
                    // InternalKim.g:10195:5: (lv_changed_29_0= 'changed' )
                    // InternalKim.g:10196:6: lv_changed_29_0= 'changed'
                    {
                    lv_changed_29_0=(Token)match(input,156,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_changed_29_0, grammarAccess.getConceptAccess().getChangedChangedKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "changed", lv_changed_29_0 != null, "changed");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10208:4: ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10209:5: (lv_concept_30_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10209:5: (lv_concept_30_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10210:6: lv_concept_30_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_139);
                    lv_concept_30_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_30_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10227:4: ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( (LA219_0==107) ) {
                        int LA219_1 = input.LA(2);

                        if ( (synpred397_InternalKim()) ) {
                            alt219=1;
                        }
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalKim.g:10228:5: ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10228:5: ( ( 'from' )=>otherlv_31= 'from' )
                            // InternalKim.g:10229:6: ( 'from' )=>otherlv_31= 'from'
                            {
                            otherlv_31=(Token)match(input,107,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getFromKeyword_7_2_0());
                              					
                            }

                            }

                            // InternalKim.g:10235:5: ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10236:6: (lv_changedFrom_32_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10236:6: (lv_changedFrom_32_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10237:7: lv_changedFrom_32_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getChangedFromSimpleConceptDeclarationParserRuleCall_7_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_25);
                            lv_changedFrom_32_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"changedFrom",
                              								lv_changedFrom_32_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_33=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_33, grammarAccess.getConceptAccess().getToKeyword_7_2_2());
                              				
                            }
                            // InternalKim.g:10258:5: ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10259:6: (lv_changedTo_34_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10259:6: (lv_changedTo_34_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10260:7: lv_changedTo_34_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getChangedToSimpleConceptDeclarationParserRuleCall_7_2_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_changedTo_34_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"changedTo",
                              								lv_changedTo_34_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:10280:3: ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10280:3: ( ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10281:4: ( (lv_uncertainty_35_0= 'uncertainty' ) ) otherlv_36= 'of' ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10281:4: ( (lv_uncertainty_35_0= 'uncertainty' ) )
                    // InternalKim.g:10282:5: (lv_uncertainty_35_0= 'uncertainty' )
                    {
                    // InternalKim.g:10282:5: (lv_uncertainty_35_0= 'uncertainty' )
                    // InternalKim.g:10283:6: lv_uncertainty_35_0= 'uncertainty'
                    {
                    lv_uncertainty_35_0=(Token)match(input,157,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_35_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", lv_uncertainty_35_0 != null, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_36=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:10299:4: ( (lv_concept_37_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10300:5: (lv_concept_37_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10300:5: (lv_concept_37_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10301:6: lv_concept_37_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_37_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_37_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:10320:3: ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10320:3: ( ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10321:4: ( (lv_magnitude_38_0= 'magnitude' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10321:4: ( (lv_magnitude_38_0= 'magnitude' ) )
                    // InternalKim.g:10322:5: (lv_magnitude_38_0= 'magnitude' )
                    {
                    // InternalKim.g:10322:5: (lv_magnitude_38_0= 'magnitude' )
                    // InternalKim.g:10323:6: lv_magnitude_38_0= 'magnitude'
                    {
                    lv_magnitude_38_0=(Token)match(input,158,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_38_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", lv_magnitude_38_0 != null, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_39=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:10339:4: ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10340:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10340:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10341:6: lv_concept_40_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_40_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_40_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:10360:3: ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10360:3: ( ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10361:4: ( (lv_level_41_0= 'level' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10361:4: ( (lv_level_41_0= 'level' ) )
                    // InternalKim.g:10362:5: (lv_level_41_0= 'level' )
                    {
                    // InternalKim.g:10362:5: (lv_level_41_0= 'level' )
                    // InternalKim.g:10363:6: lv_level_41_0= 'level'
                    {
                    lv_level_41_0=(Token)match(input,159,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_level_41_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "level", lv_level_41_0 != null, "level");
                      					
                    }

                    }


                    }

                    otherlv_42=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:10379:4: ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10380:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10380:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10381:6: lv_concept_43_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_43_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_43_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:10400:3: ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10400:3: ( ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10401:4: ( (lv_type_44_0= 'type' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10401:4: ( (lv_type_44_0= 'type' ) )
                    // InternalKim.g:10402:5: (lv_type_44_0= 'type' )
                    {
                    // InternalKim.g:10402:5: (lv_type_44_0= 'type' )
                    // InternalKim.g:10403:6: lv_type_44_0= 'type'
                    {
                    lv_type_44_0=(Token)match(input,160,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_44_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_44_0 != null, "type");
                      					
                    }

                    }


                    }

                    otherlv_45=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:10419:4: ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10420:5: (lv_concept_46_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10420:5: (lv_concept_46_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10421:6: lv_concept_46_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_46_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_46_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:10440:3: ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10440:3: ( ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10441:4: ( (lv_observability_47_0= 'observability' ) ) otherlv_48= 'of' ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10441:4: ( (lv_observability_47_0= 'observability' ) )
                    // InternalKim.g:10442:5: (lv_observability_47_0= 'observability' )
                    {
                    // InternalKim.g:10442:5: (lv_observability_47_0= 'observability' )
                    // InternalKim.g:10443:6: lv_observability_47_0= 'observability'
                    {
                    lv_observability_47_0=(Token)match(input,161,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_47_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", lv_observability_47_0 != null, "observability");
                      					
                    }

                    }


                    }

                    otherlv_48=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:10459:4: ( (lv_concept_49_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10460:5: (lv_concept_49_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10460:5: (lv_concept_49_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10461:6: lv_concept_49_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_49_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_49_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:10480:3: ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10480:3: ( ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10481:4: ( (lv_proportion_50_0= 'proportion' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10481:4: ( (lv_proportion_50_0= 'proportion' ) )
                    // InternalKim.g:10482:5: (lv_proportion_50_0= 'proportion' )
                    {
                    // InternalKim.g:10482:5: (lv_proportion_50_0= 'proportion' )
                    // InternalKim.g:10483:6: lv_proportion_50_0= 'proportion'
                    {
                    lv_proportion_50_0=(Token)match(input,162,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_50_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", lv_proportion_50_0 != null, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_51=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:10499:4: ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10500:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10500:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10501:6: lv_concept_52_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_concept_52_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_52_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10518:4: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==54) ) {
                        int LA220_1 = input.LA(2);

                        if ( (synpred405_InternalKim()) ) {
                            alt220=1;
                        }
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalKim.g:10519:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10519:5: ( ( 'in' )=>otherlv_53= 'in' )
                            // InternalKim.g:10520:6: ( 'in' )=>otherlv_53= 'in'
                            {
                            otherlv_53=(Token)match(input,54,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10526:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10527:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10527:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10528:7: lv_other_54_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_54_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_54_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:10548:3: ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10548:3: ( ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10549:4: ( (lv_percentage_55_0= 'percentage' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10549:4: ( (lv_percentage_55_0= 'percentage' ) )
                    // InternalKim.g:10550:5: (lv_percentage_55_0= 'percentage' )
                    {
                    // InternalKim.g:10550:5: (lv_percentage_55_0= 'percentage' )
                    // InternalKim.g:10551:6: lv_percentage_55_0= 'percentage'
                    {
                    lv_percentage_55_0=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_percentage_55_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_14_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "percentage", lv_percentage_55_0 != null, "percentage");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_1());
                      			
                    }
                    // InternalKim.g:10567:4: ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10568:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10568:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10569:6: lv_concept_57_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_concept_57_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_57_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10586:4: ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==54) ) {
                        int LA221_1 = input.LA(2);

                        if ( (synpred408_InternalKim()) ) {
                            alt221=1;
                        }
                    }
                    switch (alt221) {
                        case 1 :
                            // InternalKim.g:10587:5: ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10587:5: ( ( 'in' )=>otherlv_58= 'in' )
                            // InternalKim.g:10588:6: ( 'in' )=>otherlv_58= 'in'
                            {
                            otherlv_58=(Token)match(input,54,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getInKeyword_14_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10594:5: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10595:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10595:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10596:7: lv_other_59_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_59_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_59_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalKim.g:10616:3: ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10616:3: ( ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10617:4: ( (lv_ratio_60_0= 'ratio' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_63= 'to' ) ( (lv_other_64_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10617:4: ( (lv_ratio_60_0= 'ratio' ) )
                    // InternalKim.g:10618:5: (lv_ratio_60_0= 'ratio' )
                    {
                    // InternalKim.g:10618:5: (lv_ratio_60_0= 'ratio' )
                    // InternalKim.g:10619:6: lv_ratio_60_0= 'ratio'
                    {
                    lv_ratio_60_0=(Token)match(input,164,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_60_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_15_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", lv_ratio_60_0 != null, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_61=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getConceptAccess().getOfKeyword_15_1());
                      			
                    }
                    // InternalKim.g:10635:4: ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10636:5: (lv_concept_62_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10636:5: (lv_concept_62_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10637:6: lv_concept_62_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_2_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_concept_62_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_62_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10654:4: ( ( 'to' )=>otherlv_63= 'to' )
                    // InternalKim.g:10655:5: ( 'to' )=>otherlv_63= 'to'
                    {
                    otherlv_63=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_63, grammarAccess.getConceptAccess().getToKeyword_15_3());
                      				
                    }

                    }

                    // InternalKim.g:10661:4: ( (lv_other_64_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10662:5: (lv_other_64_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10662:5: (lv_other_64_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10663:6: lv_other_64_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_64_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_64_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalKim.g:10682:3: ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10682:3: ( ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10683:4: ( (lv_monetary_65_0= 'monetary' ) )? ( (lv_value_66_0= 'value' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10683:4: ( (lv_monetary_65_0= 'monetary' ) )?
                    int alt222=2;
                    int LA222_0 = input.LA(1);

                    if ( (LA222_0==165) ) {
                        alt222=1;
                    }
                    switch (alt222) {
                        case 1 :
                            // InternalKim.g:10684:5: (lv_monetary_65_0= 'monetary' )
                            {
                            // InternalKim.g:10684:5: (lv_monetary_65_0= 'monetary' )
                            // InternalKim.g:10685:6: lv_monetary_65_0= 'monetary'
                            {
                            lv_monetary_65_0=(Token)match(input,165,FOLLOW_140); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_monetary_65_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_16_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getConceptRule());
                              						}
                              						setWithLastConsumed(current, "monetary", lv_monetary_65_0 != null, "monetary");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10697:4: ( (lv_value_66_0= 'value' ) )
                    // InternalKim.g:10698:5: (lv_value_66_0= 'value' )
                    {
                    // InternalKim.g:10698:5: (lv_value_66_0= 'value' )
                    // InternalKim.g:10699:6: lv_value_66_0= 'value'
                    {
                    lv_value_66_0=(Token)match(input,166,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_66_0, grammarAccess.getConceptAccess().getValueValueKeyword_16_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", lv_value_66_0 != null, "value");
                      					
                    }

                    }


                    }

                    otherlv_67=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getConceptAccess().getOfKeyword_16_2());
                      			
                    }
                    // InternalKim.g:10715:4: ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10716:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10716:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10717:6: lv_concept_68_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_3_0());
                      					
                    }
                    pushFollow(FOLLOW_141);
                    lv_concept_68_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_68_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10734:4: ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==61) ) {
                        int LA223_1 = input.LA(2);

                        if ( (synpred414_InternalKim()) ) {
                            alt223=1;
                        }
                    }
                    switch (alt223) {
                        case 1 :
                            // InternalKim.g:10735:5: ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10735:5: ( ( 'over' )=>otherlv_69= 'over' )
                            // InternalKim.g:10736:6: ( 'over' )=>otherlv_69= 'over'
                            {
                            otherlv_69=(Token)match(input,61,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_69, grammarAccess.getConceptAccess().getOverKeyword_16_4_0());
                              					
                            }

                            }

                            // InternalKim.g:10742:5: ( (lv_other_70_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10743:6: (lv_other_70_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10743:6: (lv_other_70_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10744:7: lv_other_70_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_16_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_70_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_70_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalKim.g:10764:3: ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10764:3: ( ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10765:4: ( (lv_occurrence_71_0= 'occurrence' ) ) otherlv_72= 'of' ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10765:4: ( (lv_occurrence_71_0= 'occurrence' ) )
                    // InternalKim.g:10766:5: (lv_occurrence_71_0= 'occurrence' )
                    {
                    // InternalKim.g:10766:5: (lv_occurrence_71_0= 'occurrence' )
                    // InternalKim.g:10767:6: lv_occurrence_71_0= 'occurrence'
                    {
                    lv_occurrence_71_0=(Token)match(input,167,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_71_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_17_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", lv_occurrence_71_0 != null, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_72=(Token)match(input,128,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getConceptAccess().getOfKeyword_17_1());
                      			
                    }
                    // InternalKim.g:10783:4: ( (lv_concept_73_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10784:5: (lv_concept_73_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10784:5: (lv_concept_73_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10785:6: lv_concept_73_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_17_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_73_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_73_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 19 :
                    // InternalKim.g:10804:3: (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' )
                    {
                    // InternalKim.g:10804:3: (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' )
                    // InternalKim.g:10805:4: otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')'
                    {
                    otherlv_74=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_18_0());
                      			
                    }
                    // InternalKim.g:10809:4: ( (lv_declaration_75_0= ruleExpression ) )
                    // InternalKim.g:10810:5: (lv_declaration_75_0= ruleExpression )
                    {
                    // InternalKim.g:10810:5: (lv_declaration_75_0= ruleExpression )
                    // InternalKim.g:10811:6: lv_declaration_75_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_18_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_declaration_75_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_75_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_76=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getConceptAccess().getRightParenthesisKeyword_18_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:10837:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:10837:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:10838:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:10844:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10850:2: (this_Term_0= ruleTerm )
            // InternalKim.g:10851:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:10865:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:10865:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:10866:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:10872:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10878:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:10879:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:10879:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:10880:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_142);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10891:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==168) ) {
                    int LA225_2 = input.LA(2);

                    if ( (synpred417_InternalKim()) ) {
                        alt225=1;
                    }


                }


                switch (alt225) {
            	case 1 :
            	    // InternalKim.g:10892:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:10892:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:10893:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:10893:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:10894:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,168,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:10906:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:10907:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:10907:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:10908:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:10930:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:10930:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:10931:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:10937:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10943:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:10944:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:10944:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:10945:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_143);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10956:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop227:
            do {
                int alt227=2;
                int LA227_0 = input.LA(1);

                if ( (LA227_0==169) ) {
                    int LA227_2 = input.LA(2);

                    if ( (synpred419_InternalKim()) ) {
                        alt227=1;
                    }


                }
                else if ( (LA227_0==170) ) {
                    int LA227_3 = input.LA(2);

                    if ( (synpred419_InternalKim()) ) {
                        alt227=1;
                    }


                }


                switch (alt227) {
            	case 1 :
            	    // InternalKim.g:10957:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:10957:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:10958:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:10958:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:10959:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:10959:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt226=2;
            	    int LA226_0 = input.LA(1);

            	    if ( (LA226_0==169) ) {
            	        alt226=1;
            	    }
            	    else if ( (LA226_0==170) ) {
            	        alt226=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 226, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt226) {
            	        case 1 :
            	            // InternalKim.g:10960:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,169,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10971:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,170,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:10984:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:10985:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:10985:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:10986:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop227;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:11008:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:11008:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:11009:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:11015:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11021:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:11022:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:11022:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:11023:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:11023:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==RULE_STRING) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // InternalKim.g:11024:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:11024:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:11025:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:11041:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt229=0;
            loop229:
            do {
                int alt229=2;
                alt229 = dfa229.predict(input);
                switch (alt229) {
            	case 1 :
            	    // InternalKim.g:11042:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:11042:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:11043:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_144);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt229 >= 1 ) break loop229;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(229, input);
                        throw eee;
                }
                cnt229++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:11064:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:11064:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:11065:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:11071:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:11077:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:11078:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:11078:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:11079:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,76,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:11083:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==33||(LA236_0>=171 && LA236_0<=173)||(LA236_0>=248 && LA236_0<=249)) ) {
                alt236=1;
            }
            else if ( (LA236_0==66||(LA236_0>=129 && LA236_0<=131)||(LA236_0>=139 && LA236_0<=144)) ) {
                alt236=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 236, 0, input);

                throw nvae;
            }
            switch (alt236) {
                case 1 :
                    // InternalKim.g:11084:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:11084:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:11085:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:11085:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( ((LA233_0>=171 && LA233_0<=173)) ) {
                        alt233=1;
                    }
                    else if ( (LA233_0==33||(LA233_0>=248 && LA233_0<=249)) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 0, input);

                        throw nvae;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalKim.g:11086:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:11086:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:11087:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:11087:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:11088:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:11088:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:11089:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:11089:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt230=3;
                            switch ( input.LA(1) ) {
                            case 171:
                                {
                                alt230=1;
                                }
                                break;
                            case 172:
                                {
                                alt230=2;
                                }
                                break;
                            case 173:
                                {
                                alt230=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 230, 0, input);

                                throw nvae;
                            }

                            switch (alt230) {
                                case 1 :
                                    // InternalKim.g:11090:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,171,FOLLOW_146); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11101:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,172,FOLLOW_146); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:11112:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,173,FOLLOW_146); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:11125:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:11126:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:11126:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:11127:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,174,FOLLOW_147); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11141:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:11141:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt232=2;
                            int LA232_0 = input.LA(1);

                            if ( ((LA232_0>=248 && LA232_0<=249)) ) {
                                alt232=1;
                            }
                            switch (alt232) {
                                case 1 :
                                    // InternalKim.g:11142:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:11142:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:11143:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:11143:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:11144:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_148);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:11161:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop231:
                                    do {
                                        int alt231=2;
                                        int LA231_0 = input.LA(1);

                                        if ( ((LA231_0>=248 && LA231_0<=249)) ) {
                                            alt231=1;
                                        }


                                        switch (alt231) {
                                    	case 1 :
                                    	    // InternalKim.g:11162:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:11162:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:11163:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_148);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop231;
                                        }
                                    } while (true);

                                    // InternalKim.g:11180:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:11181:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:11181:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:11182:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,175,FOLLOW_147); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,33,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:11200:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:11201:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:11201:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:11202:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:11202:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt234=2;
                    alt234 = dfa234.predict(input);
                    switch (alt234) {
                        case 1 :
                            // InternalKim.g:11203:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11219:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11239:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:11239:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:11240:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:11240:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:11241:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:11241:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:11242:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_147);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,33,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:11263:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:11264:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:11264:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:11265:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:11265:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt235=2;
                    alt235 = dfa235.predict(input);
                    switch (alt235) {
                        case 1 :
                            // InternalKim.g:11266:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11282:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:11306:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:11310:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:11311:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:11320:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_9_0 = null;

        EObject lv_body_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:11329:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:11330:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:11330:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:11331:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:11331:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop237:
            do {
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==RULE_ANNOTATION_ID) ) {
                    alt237=1;
                }


                switch (alt237) {
            	case 1 :
            	    // InternalKim.g:11332:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:11332:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:11333:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_149);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);

            // InternalKim.g:11350:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:11351:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:11351:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            // InternalKim.g:11352:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:11355:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            // InternalKim.g:11356:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            {
            // InternalKim.g:11356:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            loop241:
            do {
                int alt241=5;
                alt241 = dfa241.predict(input);
                switch (alt241) {
            	case 1 :
            	    // InternalKim.g:11357:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:11357:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:11358:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:11358:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:11359:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:11362:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:11362:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11362:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:11362:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:11362:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:11363:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,176,FOLLOW_149); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", lv_abstract_2_0 != null, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11380:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:11380:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:11381:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:11381:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:11382:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:11385:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:11385:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11385:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:11385:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:11385:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:11386:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,177,FOLLOW_149); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", lv_deniable_3_0 != null, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11403:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:11403:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:11404:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:11404:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:11405:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:11408:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:11408:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11408:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:11408:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:11408:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:11409:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,178,FOLLOW_149); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", lv_subjective_4_0 != null, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11426:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11426:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    // InternalKim.g:11427:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:11427:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    // InternalKim.g:11428:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:11431:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    // InternalKim.g:11431:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11431:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    int alt240=3;
            	    switch ( input.LA(1) ) {
            	    case 171:
            	    case 172:
            	    case 173:
            	        {
            	        alt240=1;
            	        }
            	        break;
            	    case 248:
            	    case 249:
            	        {
            	        alt240=2;
            	        }
            	        break;
            	    case 179:
            	        {
            	        alt240=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 240, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt240) {
            	        case 1 :
            	            // InternalKim.g:11431:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:11431:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:11432:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:11432:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:11433:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:11433:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt238=3;
            	            switch ( input.LA(1) ) {
            	            case 171:
            	                {
            	                alt238=1;
            	                }
            	                break;
            	            case 172:
            	                {
            	                alt238=2;
            	                }
            	                break;
            	            case 173:
            	                {
            	                alt238=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 238, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt238) {
            	                case 1 :
            	                    // InternalKim.g:11434:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,171,FOLLOW_149); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:11445:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,172,FOLLOW_149); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:11456:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,173,FOLLOW_149); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11470:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:11470:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:11471:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:11471:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:11472:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:11472:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:11473:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_149);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11490:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop239:
            	            do {
            	                int alt239=2;
            	                int LA239_0 = input.LA(1);

            	                if ( (LA239_0==248) ) {
            	                    int LA239_2 = input.LA(2);

            	                    if ( (synpred437_InternalKim()) ) {
            	                        alt239=1;
            	                    }


            	                }
            	                else if ( (LA239_0==249) ) {
            	                    int LA239_3 = input.LA(2);

            	                    if ( (synpred437_InternalKim()) ) {
            	                        alt239=1;
            	                    }


            	                }


            	                switch (alt239) {
            	            	case 1 :
            	            	    // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:11492:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_149);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop239;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11511:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            {
            	            // InternalKim.g:11511:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            // InternalKim.g:11512:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            {
            	            // InternalKim.g:11512:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            // InternalKim.g:11513:11: lv_attributeSpecifier_8_0= 'rescaling'
            	            {
            	            lv_attributeSpecifier_8_0=(Token)match(input,179,FOLLOW_149); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementRule());
            	              											}
            	              											setWithLastConsumed(current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:11538:3: ( (lv_concept_9_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:11539:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:11539:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            // InternalKim.g:11540:5: lv_concept_9_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_150);
            lv_concept_9_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_9_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11557:3: ( (lv_body_10_0= ruleConceptStatementBody ) )
            // InternalKim.g:11558:4: (lv_body_10_0= ruleConceptStatementBody )
            {
            // InternalKim.g:11558:4: (lv_body_10_0= ruleConceptStatementBody )
            // InternalKim.g:11559:5: lv_body_10_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_151);
            lv_body_10_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11576:3: (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==122) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    // InternalKim.g:11577:4: otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) )
                    {
                    otherlv_11=(Token)match(input,122,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:11581:4: ( (lv_name_12_0= ruleNamespaceId ) )
                    // InternalKim.g:11582:5: (lv_name_12_0= ruleNamespaceId )
                    {
                    // InternalKim.g:11582:5: (lv_name_12_0= ruleNamespaceId )
                    // InternalKim.g:11583:6: lv_name_12_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_12_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_12_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:11608:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11612:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:11613:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:11622:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_definedAuthority_21_1=null;
        Token lv_definedAuthority_21_2=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        Token otherlv_75=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token lv_disjoint_95_0=null;
        Token otherlv_96=null;
        Token otherlv_98=null;
        Token otherlv_100=null;
        Token otherlv_102=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_authorities_106_1=null;
        Token lv_authorities_106_2=null;
        Token otherlv_107=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_upperConcept_22_0 = null;

        EObject lv_requirements_24_0 = null;

        EObject lv_requirements_26_0 = null;

        EObject lv_describedQuality_28_0 = null;

        EObject lv_descriptionConstraints_30_0 = null;

        EObject lv_describedProportionality_33_0 = null;

        EObject lv_describedInverseProportionalityQuality_36_0 = null;

        EObject lv_describedNonzeroQuality_38_0 = null;

        EObject lv_classifiesQuality_40_0 = null;

        EObject lv_discretizesQuality_42_0 = null;

        EObject lv_actuallyInheritedTraits_44_0 = null;

        EObject lv_actuallyInheritedTraits_46_0 = null;

        EObject lv_roles_49_0 = null;

        EObject lv_roles_51_0 = null;

        EObject lv_targetObservables_53_0 = null;

        EObject lv_targetObservables_55_0 = null;

        EObject lv_restrictedObservables_57_0 = null;

        EObject lv_restrictedObservables_59_0 = null;

        EObject lv_conferredTraits_61_0 = null;

        EObject lv_conferredTraits_63_0 = null;

        EObject lv_conferredTargets_65_0 = null;

        EObject lv_conferredTargets_67_0 = null;

        EObject lv_emergenceTriggers_70_0 = null;

        EObject lv_emergenceTriggers_72_0 = null;

        EObject lv_creates_74_0 = null;

        EObject lv_creates_76_0 = null;

        EObject lv_traitTargets_79_0 = null;

        EObject lv_traitTargets_81_0 = null;

        EObject lv_domains_83_0 = null;

        EObject lv_ranges_85_0 = null;

        EObject lv_domains_87_0 = null;

        EObject lv_ranges_89_0 = null;

        EObject lv_qualitiesAffected_91_0 = null;

        EObject lv_qualitiesAffected_93_0 = null;

        EObject lv_children_97_0 = null;

        EObject lv_children_99_0 = null;

        EObject lv_implications_101_0 = null;

        EObject lv_implications_103_0 = null;

        EObject lv_metadata_108_0 = null;

        EObject lv_properties_109_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11631:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) )
            // InternalKim.g:11632:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            {
            // InternalKim.g:11632:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            // InternalKim.g:11633:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            {
            // InternalKim.g:11633:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( (LA243_0==RULE_ANNOTATION_ID) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    // InternalKim.g:11634:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:11634:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:11635:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_150);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);

            // InternalKim.g:11652:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==176) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalKim.g:11653:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:11653:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:11654:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,176,FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", lv_abstract_1_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:11666:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==102) ) {
                alt249=1;
            }
            else if ( (LA249_0==RULE_CAMELCASE_ID) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // InternalKim.g:11667:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:11667:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:11668:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:11668:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:11669:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,102,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", lv_root_2_0 != null, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11682:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:11682:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:11683:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:11683:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:11684:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:11684:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:11685:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:11701:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==148) ) {
                        alt248=1;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalKim.g:11702:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,148,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,27,FOLLOW_155); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:11710:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt246=2;
                            int LA246_0 = input.LA(1);

                            if ( (LA246_0==RULE_STRING||LA246_0==RULE_ID) ) {
                                alt246=1;
                            }
                            else if ( (LA246_0==RULE_INT) ) {
                                alt246=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 246, 0, input);

                                throw nvae;
                            }
                            switch (alt246) {
                                case 1 :
                                    // InternalKim.g:11711:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:11711:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:11712:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:11712:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:11713:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:11713:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt245=2;
                                    int LA245_0 = input.LA(1);

                                    if ( (LA245_0==RULE_ID) ) {
                                        alt245=1;
                                    }
                                    else if ( (LA245_0==RULE_STRING) ) {
                                        alt245=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 245, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt245) {
                                        case 1 :
                                            // InternalKim.g:11714:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:11729:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_119); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11747:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:11747:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:11748:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:11748:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:11749:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_119); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,94,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:11770:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:11771:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:11771:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:11772:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:11772:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt247=2;
                            int LA247_0 = input.LA(1);

                            if ( (LA247_0==RULE_UPPERCASE_ID) ) {
                                alt247=1;
                            }
                            else if ( (LA247_0==RULE_UPPERCASE_PATH) ) {
                                alt247=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 247, 0, input);

                                throw nvae;
                            }
                            switch (alt247) {
                                case 1 :
                                    // InternalKim.g:11773:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_153); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11788:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_153); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:11808:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            // InternalKim.g:11809:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            {
            // InternalKim.g:11809:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            // InternalKim.g:11810:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:11813:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* )
            // InternalKim.g:11814:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*
            {
            // InternalKim.g:11814:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*
            loop277:
            do {
                int alt277=24;
                alt277 = dfa277.predict(input);
                switch (alt277) {
            	case 1 :
            	    // InternalKim.g:11815:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:11815:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:11816:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:11816:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:11817:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:11820:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:11820:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11820:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:11820:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:11820:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:11821:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_153); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11842:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11842:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:11843:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:11843:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11844:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:11847:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11847:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11847:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11847:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:11847:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
            	    // InternalKim.g:11848:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
            	    {
            	    // InternalKim.g:11848:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
            	    int alt250=2;
            	    int LA250_0 = input.LA(1);

            	    if ( (LA250_0==180) ) {
            	        alt250=1;
            	    }
            	    else if ( (LA250_0==181) ) {
            	        alt250=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 250, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt250) {
            	        case 1 :
            	            // InternalKim.g:11849:11: otherlv_12= 'is'
            	            {
            	            otherlv_12=(Token)match(input,180,FOLLOW_156); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11854:11: ( (lv_alias_13_0= 'equals' ) )
            	            {
            	            // InternalKim.g:11854:11: ( (lv_alias_13_0= 'equals' ) )
            	            // InternalKim.g:11855:12: (lv_alias_13_0= 'equals' )
            	            {
            	            // InternalKim.g:11855:12: (lv_alias_13_0= 'equals' )
            	            // InternalKim.g:11856:13: lv_alias_13_0= 'equals'
            	            {
            	            lv_alias_13_0=(Token)match(input,181,FOLLOW_156); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(current, "alias", lv_alias_13_0 != null, "equals");
            	              												
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11869:10: ( (lv_coreConcept_14_0= 'core' ) )?
            	    int alt251=2;
            	    int LA251_0 = input.LA(1);

            	    if ( (LA251_0==182) ) {
            	        alt251=1;
            	    }
            	    switch (alt251) {
            	        case 1 :
            	            // InternalKim.g:11870:11: (lv_coreConcept_14_0= 'core' )
            	            {
            	            // InternalKim.g:11870:11: (lv_coreConcept_14_0= 'core' )
            	            // InternalKim.g:11871:12: lv_coreConcept_14_0= 'core'
            	            {
            	            lv_coreConcept_14_0=(Token)match(input,182,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "coreConcept", lv_coreConcept_14_0 != null, "core");
            	              											
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }

            	    // InternalKim.g:11884:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt254=2;
            	    int LA254_0 = input.LA(1);

            	    if ( (LA254_0==183) ) {
            	        alt254=1;
            	    }
            	    else if ( ((LA254_0>=RULE_LOWERCASE_ID && LA254_0<=RULE_UPPERCASE_ID)||LA254_0==RULE_CAMELCASE_ID||LA254_0==RULE_LOWERCASE_DASHID||LA254_0==RULE_UPPERCASE_PATH||LA254_0==40||(LA254_0>=137 && LA254_0<=138)||(LA254_0>=146 && LA254_0<=147)||(LA254_0>=149 && LA254_0<=154)||(LA254_0>=156 && LA254_0<=167)) ) {
            	        alt254=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 254, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt254) {
            	        case 1 :
            	            // InternalKim.g:11885:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:11885:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:11886:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:11886:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:11887:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,183,FOLLOW_153); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", lv_nothing_15_0 != null, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11900:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11900:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11901:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11901:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11902:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11902:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:11903:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:11920:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop253:
            	            do {
            	                int alt253=2;
            	                int LA253_0 = input.LA(1);

            	                if ( (LA253_0==29||(LA253_0>=168 && LA253_0<=169)) ) {
            	                    alt253=1;
            	                }


            	                switch (alt253) {
            	            	case 1 :
            	            	    // InternalKim.g:11921:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:11921:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:11922:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:11922:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:11923:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:11923:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt252=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 29:
            	            	        {
            	            	        alt252=1;
            	            	        }
            	            	        break;
            	            	    case 168:
            	            	        {
            	            	        alt252=2;
            	            	        }
            	            	        break;
            	            	    case 169:
            	            	        {
            	            	        alt252=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 252, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt252) {
            	            	        case 1 :
            	            	            // InternalKim.g:11924:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:11935:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,168,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:11946:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,169,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:11959:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11960:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11960:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11961:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_158);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop253;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11987:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11987:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:11988:5: {...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:11988:117: ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:11989:6: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:11992:9: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:11992:10: {...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11992:19: (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
            	    // InternalKim.g:11992:20: otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
            	    {
            	    otherlv_19=(Token)match(input,184,FOLLOW_159); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:11996:9: ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
            	    int alt256=2;
            	    int LA256_0 = input.LA(1);

            	    if ( (LA256_0==185) ) {
            	        alt256=1;
            	    }
            	    else if ( ((LA256_0>=RULE_LOWERCASE_ID && LA256_0<=RULE_UPPERCASE_ID)||LA256_0==RULE_CAMELCASE_ID||LA256_0==RULE_LOWERCASE_DASHID||LA256_0==RULE_UPPERCASE_PATH||LA256_0==40||(LA256_0>=137 && LA256_0<=138)||(LA256_0>=146 && LA256_0<=147)||(LA256_0>=149 && LA256_0<=154)||(LA256_0>=156 && LA256_0<=167)) ) {
            	        alt256=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 256, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt256) {
            	        case 1 :
            	            // InternalKim.g:11997:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
            	            {
            	            // InternalKim.g:11997:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
            	            // InternalKim.g:11998:11: otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            otherlv_20=(Token)match(input,185,FOLLOW_135); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_20, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_2_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:12002:11: ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:12003:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
            	            {
            	            // InternalKim.g:12003:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:12004:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:12004:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
            	            int alt255=2;
            	            int LA255_0 = input.LA(1);

            	            if ( (LA255_0==RULE_UPPERCASE_ID) ) {
            	                alt255=1;
            	            }
            	            else if ( (LA255_0==RULE_UPPERCASE_PATH) ) {
            	                alt255=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 255, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt255) {
            	                case 1 :
            	                    // InternalKim.g:12005:14: lv_definedAuthority_21_1= RULE_UPPERCASE_ID
            	                    {
            	                    lv_definedAuthority_21_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_153); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_21_1, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_IDTerminalRuleCall_3_2_1_0_1_0_0());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_21_1,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	                      													
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:12020:14: lv_definedAuthority_21_2= RULE_UPPERCASE_PATH
            	                    {
            	                    lv_definedAuthority_21_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_153); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_21_2, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_2_1_0_1_0_1());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_21_2,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	                      													
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12039:10: ( (lv_upperConcept_22_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:12039:10: ( (lv_upperConcept_22_0= ruleConcept ) )
            	            // InternalKim.g:12040:11: (lv_upperConcept_22_0= ruleConcept )
            	            {
            	            // InternalKim.g:12040:11: (lv_upperConcept_22_0= ruleConcept )
            	            // InternalKim.g:12041:12: lv_upperConcept_22_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_upperConcept_22_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_22_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:12065:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12065:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:12066:5: {...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:12066:117: ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:12067:6: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:12070:9: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:12070:10: {...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12070:19: (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:12070:20: otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,186,FOLLOW_160); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:12074:9: ( (lv_requirements_24_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:12075:10: (lv_requirements_24_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:12075:10: (lv_requirements_24_0= ruleIdentityRequirement )
            	    // InternalKim.g:12076:11: lv_requirements_24_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_requirements_24_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_24_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12093:9: (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
            	    loop257:
            	    do {
            	        int alt257=2;
            	        int LA257_0 = input.LA(1);

            	        if ( (LA257_0==29) ) {
            	            alt257=1;
            	        }


            	        switch (alt257) {
            	    	case 1 :
            	    	    // InternalKim.g:12094:10: otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,29,FOLLOW_160); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_3_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12098:10: ( (lv_requirements_26_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:12099:11: (lv_requirements_26_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:12099:11: (lv_requirements_26_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:12100:12: lv_requirements_26_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_requirements_26_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop257;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:12124:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:12124:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
            	    // InternalKim.g:12125:5: {...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:12125:117: ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
            	    // InternalKim.g:12126:6: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:12129:9: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
            	    // InternalKim.g:12129:10: {...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12129:19: (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
            	    // InternalKim.g:12129:20: otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
            	    {
            	    otherlv_27=(Token)match(input,187,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:12133:9: ( (lv_describedQuality_28_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12134:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12134:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
            	    // InternalKim.g:12135:11: lv_describedQuality_28_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_162);
            	    lv_describedQuality_28_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_28_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12152:9: (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
            	    int alt258=2;
            	    int LA258_0 = input.LA(1);

            	    if ( (LA258_0==27) ) {
            	        alt258=1;
            	    }
            	    switch (alt258) {
            	        case 1 :
            	            // InternalKim.g:12153:10: otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
            	            {
            	            otherlv_29=(Token)match(input,27,FOLLOW_163); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_29, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_3_4_2_0());
            	              									
            	            }
            	            // InternalKim.g:12157:10: ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
            	            // InternalKim.g:12158:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
            	            {
            	            // InternalKim.g:12158:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
            	            // InternalKim.g:12159:12: lv_descriptionConstraints_30_0= ruleDescriptionConstraints
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescriptionConstraintsDescriptionConstraintsParserRuleCall_3_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_descriptionConstraints_30_0=ruleDescriptionConstraints();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"descriptionConstraints",
            	              													lv_descriptionConstraints_30_0,
            	              													"org.integratedmodelling.kim.Kim.DescriptionConstraints");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:12183:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12183:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12184:5: {...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:12184:117: ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12185:6: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:12188:9: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12188:10: {...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12188:19: (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12188:20: otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_31=(Token)match(input,188,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,104,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_5_1());
            	      								
            	    }
            	    // InternalKim.g:12196:9: ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12197:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12197:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
            	    // InternalKim.g:12198:11: lv_describedProportionality_33_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_describedProportionality_33_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_33_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:12221:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12221:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12222:5: {...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:12222:117: ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12223:6: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:12226:9: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12226:10: {...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12226:19: (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12226:20: otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_34=(Token)match(input,189,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_34, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_35=(Token)match(input,104,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:12234:9: ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12235:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12235:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:12236:11: lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_describedInverseProportionalityQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:12259:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12259:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12260:5: {...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:12260:117: ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12261:6: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:12264:9: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12264:10: {...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12264:19: (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12264:20: otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,190,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:12268:9: ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12269:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12269:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
            	    // InternalKim.g:12270:11: lv_describedNonzeroQuality_38_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_describedNonzeroQuality_38_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_38_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:12293:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12293:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12294:5: {...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:12294:117: ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12295:6: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:12298:9: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12298:10: {...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12298:19: (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12298:20: otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_39=(Token)match(input,191,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_39, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:12302:9: ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12303:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12303:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
            	    // InternalKim.g:12304:11: lv_classifiesQuality_40_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_classifiesQuality_40_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_40_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:12327:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12327:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12328:5: {...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:12328:117: ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12329:6: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:12332:9: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12332:10: {...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12332:19: (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12332:20: otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_41=(Token)match(input,192,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:12336:9: ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12337:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12337:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:12338:11: lv_discretizesQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_discretizesQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:12361:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12361:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12362:5: {...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:12362:118: ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12363:6: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:12366:9: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12366:10: {...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12366:19: (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12366:20: otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_43=(Token)match(input,193,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:12370:9: ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12371:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12371:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:12372:11: lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_actuallyInheritedTraits_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12389:9: (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
            	    loop259:
            	    do {
            	        int alt259=2;
            	        int LA259_0 = input.LA(1);

            	        if ( (LA259_0==29) ) {
            	            alt259=1;
            	        }


            	        switch (alt259) {
            	    	case 1 :
            	    	    // InternalKim.g:12390:10: otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_45=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_10_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12394:10: ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12395:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12395:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12396:12: lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_actuallyInheritedTraits_46_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_46_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop259;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:12420:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:12420:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:12421:5: {...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:12421:118: ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12422:6: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:12425:9: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12425:10: {...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12425:19: (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12425:20: otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_47=(Token)match(input,194,FOLLOW_164); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_11_0());
            	      								
            	    }
            	    otherlv_48=(Token)match(input,195,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_11_1());
            	      								
            	    }
            	    // InternalKim.g:12433:9: ( (lv_roles_49_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12434:10: (lv_roles_49_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12434:10: (lv_roles_49_0= ruleConceptDeclaration )
            	    // InternalKim.g:12435:11: lv_roles_49_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_roles_49_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_49_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12452:9: (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )*
            	    loop260:
            	    do {
            	        int alt260=2;
            	        int LA260_0 = input.LA(1);

            	        if ( (LA260_0==29) ) {
            	            alt260=1;
            	        }


            	        switch (alt260) {
            	    	case 1 :
            	    	    // InternalKim.g:12453:10: otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_50=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_50, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12457:10: ( (lv_roles_51_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12458:11: (lv_roles_51_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12458:11: (lv_roles_51_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12459:12: lv_roles_51_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_roles_51_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_51_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop260;
            	        }
            	    } while (true);

            	    // InternalKim.g:12477:9: (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )?
            	    int alt262=2;
            	    int LA262_0 = input.LA(1);

            	    if ( (LA262_0==196) ) {
            	        alt262=1;
            	    }
            	    switch (alt262) {
            	        case 1 :
            	            // InternalKim.g:12478:10: otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_52=(Token)match(input,196,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_11_4_0());
            	              									
            	            }
            	            // InternalKim.g:12482:10: ( (lv_targetObservables_53_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12483:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12483:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
            	            // InternalKim.g:12484:12: lv_targetObservables_53_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_166);
            	            lv_targetObservables_53_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_53_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12501:10: (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
            	            loop261:
            	            do {
            	                int alt261=2;
            	                int LA261_0 = input.LA(1);

            	                if ( (LA261_0==29) ) {
            	                    alt261=1;
            	                }


            	                switch (alt261) {
            	            	case 1 :
            	            	    // InternalKim.g:12502:11: otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_54=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12506:11: ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12507:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12507:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12508:13: lv_targetObservables_55_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_166);
            	            	    lv_targetObservables_55_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_55_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop261;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12527:9: (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12528:10: otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_56=(Token)match(input,54,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_11_5_0());
            	      									
            	    }
            	    // InternalKim.g:12532:10: ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12533:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12533:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
            	    // InternalKim.g:12534:12: lv_restrictedObservables_57_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_restrictedObservables_57_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_57_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:12551:10: (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
            	    loop263:
            	    do {
            	        int alt263=2;
            	        int LA263_0 = input.LA(1);

            	        if ( (LA263_0==29) ) {
            	            alt263=1;
            	        }


            	        switch (alt263) {
            	    	case 1 :
            	    	    // InternalKim.g:12552:11: otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_58=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:12556:11: ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12557:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12557:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12558:13: lv_restrictedObservables_59_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_restrictedObservables_59_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_59_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop263;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:12583:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:12583:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:12584:5: {...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:12584:118: ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:12585:6: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:12588:9: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:12588:10: {...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12588:19: (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:12588:20: otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_60=(Token)match(input,197,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_12_0());
            	      								
            	    }
            	    // InternalKim.g:12592:9: ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12593:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12593:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
            	    // InternalKim.g:12594:11: lv_conferredTraits_61_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_167);
            	    lv_conferredTraits_61_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_61_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12611:9: (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )*
            	    loop264:
            	    do {
            	        int alt264=2;
            	        int LA264_0 = input.LA(1);

            	        if ( (LA264_0==29) ) {
            	            alt264=1;
            	        }


            	        switch (alt264) {
            	    	case 1 :
            	    	    // InternalKim.g:12612:10: otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_62=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12616:10: ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12617:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12617:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12618:12: lv_conferredTraits_63_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_167);
            	    	    lv_conferredTraits_63_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_63_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop264;
            	        }
            	    } while (true);

            	    // InternalKim.g:12636:9: (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
            	    int alt266=2;
            	    int LA266_0 = input.LA(1);

            	    if ( (LA266_0==38) ) {
            	        alt266=1;
            	    }
            	    switch (alt266) {
            	        case 1 :
            	            // InternalKim.g:12637:10: otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_64=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_12_3_0());
            	              									
            	            }
            	            // InternalKim.g:12641:10: ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12642:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12642:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
            	            // InternalKim.g:12643:12: lv_conferredTargets_65_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_161);
            	            lv_conferredTargets_65_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_65_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12660:10: (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
            	            loop265:
            	            do {
            	                int alt265=2;
            	                int LA265_0 = input.LA(1);

            	                if ( (LA265_0==29) ) {
            	                    alt265=1;
            	                }


            	                switch (alt265) {
            	            	case 1 :
            	            	    // InternalKim.g:12661:11: otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_66=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12665:11: ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12666:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12666:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12667:13: lv_conferredTargets_67_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_161);
            	            	    lv_conferredTargets_67_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_67_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop265;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:12692:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12692:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12693:5: {...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:12693:118: ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12694:6: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:12697:9: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12697:10: {...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12697:19: (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12697:20: otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_68=(Token)match(input,198,FOLLOW_86); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getEmergesKeyword_3_13_0());
            	      								
            	    }
            	    otherlv_69=(Token)match(input,107,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_69, grammarAccess.getConceptStatementBodyAccess().getFromKeyword_3_13_1());
            	      								
            	    }
            	    // InternalKim.g:12705:9: ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12706:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12706:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
            	    // InternalKim.g:12707:11: lv_emergenceTriggers_70_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_emergenceTriggers_70_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"emergenceTriggers",
            	      												lv_emergenceTriggers_70_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12724:9: (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
            	    loop267:
            	    do {
            	        int alt267=2;
            	        int LA267_0 = input.LA(1);

            	        if ( (LA267_0==29) ) {
            	            alt267=1;
            	        }


            	        switch (alt267) {
            	    	case 1 :
            	    	    // InternalKim.g:12725:10: otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_71=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_71, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12729:10: ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12730:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12730:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12731:12: lv_emergenceTriggers_72_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_emergenceTriggers_72_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"emergenceTriggers",
            	    	      													lv_emergenceTriggers_72_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop267;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:12755:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12755:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12756:5: {...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:12756:118: ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12757:6: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:12760:9: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12760:10: {...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12760:19: (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12760:20: otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_73=(Token)match(input,199,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_73, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_14_0());
            	      								
            	    }
            	    // InternalKim.g:12764:9: ( (lv_creates_74_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12765:10: (lv_creates_74_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12765:10: (lv_creates_74_0= ruleConceptDeclaration )
            	    // InternalKim.g:12766:11: lv_creates_74_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_creates_74_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_74_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12783:9: (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
            	    loop268:
            	    do {
            	        int alt268=2;
            	        int LA268_0 = input.LA(1);

            	        if ( (LA268_0==29) ) {
            	            alt268=1;
            	        }


            	        switch (alt268) {
            	    	case 1 :
            	    	    // InternalKim.g:12784:10: otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_75=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_75, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_14_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12788:10: ( (lv_creates_76_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12789:11: (lv_creates_76_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12789:11: (lv_creates_76_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12790:12: lv_creates_76_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_creates_76_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_76_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop268;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:12814:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12814:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:12815:5: {...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:12815:118: ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:12816:6: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:12819:9: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:12819:10: {...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12819:19: (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:12819:20: otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_77=(Token)match(input,200,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_77, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_15_0());
            	      								
            	    }
            	    otherlv_78=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_78, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_15_1());
            	      								
            	    }
            	    // InternalKim.g:12827:9: ( (lv_traitTargets_79_0= ruleApplicableTarget ) )
            	    // InternalKim.g:12828:10: (lv_traitTargets_79_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:12828:10: (lv_traitTargets_79_0= ruleApplicableTarget )
            	    // InternalKim.g:12829:11: lv_traitTargets_79_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_traitTargets_79_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_79_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12846:9: (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
            	    loop269:
            	    do {
            	        int alt269=2;
            	        int LA269_0 = input.LA(1);

            	        if ( (LA269_0==29) ) {
            	            alt269=1;
            	        }


            	        switch (alt269) {
            	    	case 1 :
            	    	    // InternalKim.g:12847:10: otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_80=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_80, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12851:10: ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:12852:11: (lv_traitTargets_81_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:12852:11: (lv_traitTargets_81_0= ruleApplicableTarget )
            	    	    // InternalKim.g:12853:12: lv_traitTargets_81_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_traitTargets_81_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_81_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop269;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:12877:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12877:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12878:5: {...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:12878:118: ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12879:6: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:12882:9: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12882:10: {...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12882:19: (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12882:20: otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_82=(Token)match(input,201,FOLLOW_117); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_82, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_16_0());
            	      								
            	    }
            	    // InternalKim.g:12886:9: ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12887:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12887:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12888:11: lv_domains_83_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_domains_83_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_83_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12905:9: ( ( 'to' )=>otherlv_84= 'to' )
            	    // InternalKim.g:12906:10: ( 'to' )=>otherlv_84= 'to'
            	    {
            	    otherlv_84=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:12912:9: ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12913:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12913:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12914:11: lv_ranges_85_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_ranges_85_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_85_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12931:9: (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop270:
            	    do {
            	        int alt270=2;
            	        int LA270_0 = input.LA(1);

            	        if ( (LA270_0==29) ) {
            	            alt270=1;
            	        }


            	        switch (alt270) {
            	    	case 1 :
            	    	    // InternalKim.g:12932:10: otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,29,FOLLOW_117); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12936:10: ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12937:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12937:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12938:12: lv_domains_87_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_25);
            	    	    lv_domains_87_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:12955:10: ( ( 'to' )=>otherlv_88= 'to' )
            	    	    // InternalKim.g:12956:11: ( 'to' )=>otherlv_88= 'to'
            	    	    {
            	    	    otherlv_88=(Token)match(input,38,FOLLOW_117); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:12962:10: ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12963:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12963:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12964:12: lv_ranges_89_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_ranges_89_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_89_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop270;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:12988:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12988:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12989:5: {...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:12989:118: ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12990:6: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:12993:9: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12993:10: {...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12993:19: (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12993:20: otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_90=(Token)match(input,202,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:12997:9: ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12998:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12998:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
            	    // InternalKim.g:12999:11: lv_qualitiesAffected_91_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_qualitiesAffected_91_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_91_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13016:9: (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
            	    loop271:
            	    do {
            	        int alt271=2;
            	        int LA271_0 = input.LA(1);

            	        if ( (LA271_0==29) ) {
            	            alt271=1;
            	        }


            	        switch (alt271) {
            	    	case 1 :
            	    	    // InternalKim.g:13017:10: otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13021:10: ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:13022:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:13022:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:13023:12: lv_qualitiesAffected_93_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_qualitiesAffected_93_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop271;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:13047:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13047:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:13048:5: {...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:13048:118: ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:13049:6: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:13052:9: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:13052:10: {...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13052:19: (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:13052:20: otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_94=(Token)match(input,194,FOLLOW_168); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_18_0());
            	      								
            	    }
            	    // InternalKim.g:13056:9: ( (lv_disjoint_95_0= 'disjoint' ) )?
            	    int alt272=2;
            	    int LA272_0 = input.LA(1);

            	    if ( (LA272_0==103) ) {
            	        alt272=1;
            	    }
            	    switch (alt272) {
            	        case 1 :
            	            // InternalKim.g:13057:10: (lv_disjoint_95_0= 'disjoint' )
            	            {
            	            // InternalKim.g:13057:10: (lv_disjoint_95_0= 'disjoint' )
            	            // InternalKim.g:13058:11: lv_disjoint_95_0= 'disjoint'
            	            {
            	            lv_disjoint_95_0=(Token)match(input,103,FOLLOW_169); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_95_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_18_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", lv_disjoint_95_0 != null, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_96=(Token)match(input,117,FOLLOW_170); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_18_2());
            	      								
            	    }
            	    // InternalKim.g:13074:9: ( (lv_children_97_0= ruleChildConcept ) )
            	    // InternalKim.g:13075:10: (lv_children_97_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:13075:10: (lv_children_97_0= ruleChildConcept )
            	    // InternalKim.g:13076:11: lv_children_97_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_children_97_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_97_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13093:9: (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
            	    loop273:
            	    do {
            	        int alt273=2;
            	        int LA273_0 = input.LA(1);

            	        if ( (LA273_0==29) ) {
            	            alt273=1;
            	        }


            	        switch (alt273) {
            	    	case 1 :
            	    	    // InternalKim.g:13094:10: otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_98=(Token)match(input,29,FOLLOW_170); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_98, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_18_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13098:10: ( (lv_children_99_0= ruleChildConcept ) )
            	    	    // InternalKim.g:13099:11: (lv_children_99_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:13099:11: (lv_children_99_0= ruleChildConcept )
            	    	    // InternalKim.g:13100:12: lv_children_99_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_children_99_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_99_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop273;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:13124:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13124:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
            	    // InternalKim.g:13125:5: {...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:13125:118: ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
            	    // InternalKim.g:13126:6: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:13129:9: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
            	    // InternalKim.g:13129:10: {...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13129:19: (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
            	    // InternalKim.g:13129:20: otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
            	    {
            	    otherlv_100=(Token)match(input,203,FOLLOW_171); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_100, grammarAccess.getConceptStatementBodyAccess().getImpliesKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:13133:9: ( (lv_implications_101_0= ruleImplication ) )
            	    // InternalKim.g:13134:10: (lv_implications_101_0= ruleImplication )
            	    {
            	    // InternalKim.g:13134:10: (lv_implications_101_0= ruleImplication )
            	    // InternalKim.g:13135:11: lv_implications_101_0= ruleImplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_implications_101_0=ruleImplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"implications",
            	      												lv_implications_101_0,
            	      												"org.integratedmodelling.kim.Kim.Implication");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13152:9: (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
            	    loop274:
            	    do {
            	        int alt274=2;
            	        int LA274_0 = input.LA(1);

            	        if ( (LA274_0==29) ) {
            	            alt274=1;
            	        }


            	        switch (alt274) {
            	    	case 1 :
            	    	    // InternalKim.g:13153:10: otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) )
            	    	    {
            	    	    otherlv_102=(Token)match(input,29,FOLLOW_171); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_102, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13157:10: ( (lv_implications_103_0= ruleImplication ) )
            	    	    // InternalKim.g:13158:11: (lv_implications_103_0= ruleImplication )
            	    	    {
            	    	    // InternalKim.g:13158:11: (lv_implications_103_0= ruleImplication )
            	    	    // InternalKim.g:13159:12: lv_implications_103_0= ruleImplication
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_161);
            	    	    lv_implications_103_0=ruleImplication();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"implications",
            	    	      													lv_implications_103_0,
            	    	      													"org.integratedmodelling.kim.Kim.Implication");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop274;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:13183:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13183:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    // InternalKim.g:13184:5: {...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:13184:118: ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    // InternalKim.g:13185:6: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:13188:9: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    // InternalKim.g:13188:10: {...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13188:19: (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
            	    // InternalKim.g:13188:20: otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
            	    {
            	    otherlv_104=(Token)match(input,204,FOLLOW_172); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_104, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_20_0());
            	      								
            	    }
            	    otherlv_105=(Token)match(input,185,FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_20_1());
            	      								
            	    }
            	    // InternalKim.g:13196:9: ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
            	    // InternalKim.g:13197:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
            	    {
            	    // InternalKim.g:13197:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
            	    // InternalKim.g:13198:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
            	    {
            	    // InternalKim.g:13198:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
            	    int alt275=2;
            	    int LA275_0 = input.LA(1);

            	    if ( (LA275_0==RULE_UPPERCASE_ID) ) {
            	        alt275=1;
            	    }
            	    else if ( (LA275_0==RULE_UPPERCASE_PATH) ) {
            	        alt275=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 275, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt275) {
            	        case 1 :
            	            // InternalKim.g:13199:12: lv_authorities_106_1= RULE_UPPERCASE_ID
            	            {
            	            lv_authorities_106_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_153); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_106_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_20_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_106_1,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13214:12: lv_authorities_106_2= RULE_UPPERCASE_PATH
            	            {
            	            lv_authorities_106_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_153); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_106_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_20_2_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_106_2,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:13237:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13237:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:13238:5: {...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:13238:118: ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:13239:6: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:13242:9: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
            	    // InternalKim.g:13242:10: {...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13242:19: (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
            	    // InternalKim.g:13242:20: otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) )
            	    {
            	    otherlv_107=(Token)match(input,43,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_21_0());
            	      								
            	    }
            	    // InternalKim.g:13246:9: ( (lv_metadata_108_0= ruleMap ) )
            	    // InternalKim.g:13247:10: (lv_metadata_108_0= ruleMap )
            	    {
            	    // InternalKim.g:13247:10: (lv_metadata_108_0= ruleMap )
            	    // InternalKim.g:13248:11: lv_metadata_108_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_21_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_metadata_108_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_108_0,
            	      												"org.integratedmodelling.kim.Kim.Map");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:13271:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:13271:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
            	    // InternalKim.g:13272:5: {...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:13272:118: ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
            	    // InternalKim.g:13273:6: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:13276:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
            	    int cnt276=0;
            	    loop276:
            	    do {
            	        int alt276=2;
            	        alt276 = dfa276.predict(input);
            	        switch (alt276) {
            	    	case 1 :
            	    	    // InternalKim.g:13276:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:13276:19: ( (lv_properties_109_0= rulePropertyStatement ) )
            	    	    // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
            	    	    {
            	    	    // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
            	    	    // InternalKim.g:13277:10: lv_properties_109_0= rulePropertyStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_153);
            	    	    lv_properties_109_0=rulePropertyStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"properties",
            	    	      											lv_properties_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.PropertyStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt276 >= 1 ) break loop276;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(276, input);
            	                throw eee;
            	        }
            	        cnt276++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop277;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleDescriptionConstraints"
    // InternalKim.g:13313:1: entryRuleDescriptionConstraints returns [EObject current=null] : iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF ;
    public final EObject entryRuleDescriptionConstraints() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDescriptionConstraints = null;


        try {
            // InternalKim.g:13313:63: (iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF )
            // InternalKim.g:13314:2: iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDescriptionConstraintsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDescriptionConstraints=ruleDescriptionConstraints();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDescriptionConstraints; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDescriptionConstraints"


    // $ANTLR start "ruleDescriptionConstraints"
    // InternalKim.g:13320:1: ruleDescriptionConstraints returns [EObject current=null] : ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject ruleDescriptionConstraints() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_lower_0_0 = null;

        EObject lv_higher_2_0 = null;

        EObject lv_currency_4_0 = null;

        EObject lv_unit_5_0 = null;

        EObject lv_concept_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13326:2: ( ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:13327:2: ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:13327:2: ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) )
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==RULE_INT||(LA281_0>=251 && LA281_0<=252)) ) {
                alt281=1;
            }
            else if ( ((LA281_0>=RULE_LOWERCASE_ID && LA281_0<=RULE_STRING)||LA281_0==RULE_CAMELCASE_ID||LA281_0==RULE_LOWERCASE_DASHID||LA281_0==RULE_UPPERCASE_PATH||LA281_0==40||(LA281_0>=137 && LA281_0<=138)||(LA281_0>=146 && LA281_0<=147)||(LA281_0>=149 && LA281_0<=154)||(LA281_0>=156 && LA281_0<=167)) ) {
                alt281=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;
            }
            switch (alt281) {
                case 1 :
                    // InternalKim.g:13328:3: ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? )
                    {
                    // InternalKim.g:13328:3: ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? )
                    // InternalKim.g:13329:4: ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )?
                    {
                    // InternalKim.g:13329:4: ( (lv_lower_0_0= ruleNumber ) )
                    // InternalKim.g:13330:5: (lv_lower_0_0= ruleNumber )
                    {
                    // InternalKim.g:13330:5: (lv_lower_0_0= ruleNumber )
                    // InternalKim.g:13331:6: lv_lower_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getLowerNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_173);
                    lv_lower_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                      						}
                      						set(
                      							current,
                      							"lower",
                      							lv_lower_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13348:4: (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )?
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==38) ) {
                        alt278=1;
                    }
                    switch (alt278) {
                        case 1 :
                            // InternalKim.g:13349:5: otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) )
                            {
                            otherlv_1=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getDescriptionConstraintsAccess().getToKeyword_0_1_0());
                              				
                            }
                            // InternalKim.g:13353:5: ( (lv_higher_2_0= ruleNumber ) )
                            // InternalKim.g:13354:6: (lv_higher_2_0= ruleNumber )
                            {
                            // InternalKim.g:13354:6: (lv_higher_2_0= ruleNumber )
                            // InternalKim.g:13355:7: lv_higher_2_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getHigherNumberParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            lv_higher_2_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                              							}
                              							set(
                              								current,
                              								"higher",
                              								lv_higher_2_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13373:4: (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )?
                    int alt280=2;
                    int LA280_0 = input.LA(1);

                    if ( (LA280_0==54) ) {
                        alt280=1;
                    }
                    switch (alt280) {
                        case 1 :
                            // InternalKim.g:13374:5: otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) )
                            {
                            otherlv_3=(Token)match(input,54,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getDescriptionConstraintsAccess().getInKeyword_0_2_0());
                              				
                            }
                            // InternalKim.g:13378:5: ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) )
                            int alt279=2;
                            int LA279_0 = input.LA(1);

                            if ( (LA279_0==RULE_UPPERCASE_ID) ) {
                                int LA279_1 = input.LA(2);

                                if ( (LA279_1==250) ) {
                                    alt279=1;
                                }
                                else if ( (LA279_1==EOF||(LA279_1>=RULE_LOWERCASE_ID && LA279_1<=RULE_STRING)||LA279_1==RULE_LOWERCASE_DASHID||LA279_1==RULE_BACKCASE_ID||LA279_1==22||LA279_1==41||LA279_1==43||LA279_1==45||LA279_1==111||(LA279_1>=113 && LA279_1<=114)||LA279_1==122||(LA279_1>=180 && LA279_1<=181)||LA279_1==184||(LA279_1>=186 && LA279_1<=194)||(LA279_1>=197 && LA279_1<=204)||LA279_1==210||LA279_1==259) ) {
                                    alt279=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 279, 1, input);

                                    throw nvae;
                                }
                            }
                            else if ( (LA279_0==EOF||LA279_0==RULE_LOWERCASE_ID||LA279_0==RULE_STRING||LA279_0==RULE_CAMELCASE_ID||LA279_0==RULE_LOWERCASE_DASHID||LA279_0==RULE_BACKCASE_ID||LA279_0==22||(LA279_0>=40 && LA279_0<=41)||LA279_0==43||LA279_0==45||LA279_0==113||LA279_0==122||(LA279_0>=180 && LA279_0<=181)||LA279_0==184||(LA279_0>=186 && LA279_0<=194)||(LA279_0>=197 && LA279_0<=204)||LA279_0==210||LA279_0==259) ) {
                                alt279=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 279, 0, input);

                                throw nvae;
                            }
                            switch (alt279) {
                                case 1 :
                                    // InternalKim.g:13379:6: ( (lv_currency_4_0= ruleCurrency ) )
                                    {
                                    // InternalKim.g:13379:6: ( (lv_currency_4_0= ruleCurrency ) )
                                    // InternalKim.g:13380:7: (lv_currency_4_0= ruleCurrency )
                                    {
                                    // InternalKim.g:13380:7: (lv_currency_4_0= ruleCurrency )
                                    // InternalKim.g:13381:8: lv_currency_4_0= ruleCurrency
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getCurrencyCurrencyParserRuleCall_0_2_1_0_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_currency_4_0=ruleCurrency();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                                      								}
                                      								set(
                                      									current,
                                      									"currency",
                                      									lv_currency_4_0,
                                      									"org.integratedmodelling.kim.Kim.Currency");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13399:6: ( (lv_unit_5_0= ruleUnit ) )
                                    {
                                    // InternalKim.g:13399:6: ( (lv_unit_5_0= ruleUnit ) )
                                    // InternalKim.g:13400:7: (lv_unit_5_0= ruleUnit )
                                    {
                                    // InternalKim.g:13400:7: (lv_unit_5_0= ruleUnit )
                                    // InternalKim.g:13401:8: lv_unit_5_0= ruleUnit
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getUnitUnitParserRuleCall_0_2_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_unit_5_0=ruleUnit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                                      								}
                                      								set(
                                      									current,
                                      									"unit",
                                      									lv_unit_5_0,
                                      									"org.integratedmodelling.kim.Kim.Unit");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13422:3: ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:13422:3: ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:13423:4: (lv_concept_6_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:13423:4: (lv_concept_6_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:13424:5: lv_concept_6_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_6_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_6_0,
                      						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDescriptionConstraints"


    // $ANTLR start "entryRuleImplication"
    // InternalKim.g:13445:1: entryRuleImplication returns [EObject current=null] : iv_ruleImplication= ruleImplication EOF ;
    public final EObject entryRuleImplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplication = null;


        try {
            // InternalKim.g:13445:52: (iv_ruleImplication= ruleImplication EOF )
            // InternalKim.g:13446:2: iv_ruleImplication= ruleImplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImplication=ruleImplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplication"


    // $ANTLR start "ruleImplication"
    // InternalKim.g:13452:1: ruleImplication returns [EObject current=null] : ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleImplication() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_quantifier_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13458:2: ( ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13459:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13459:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13460:3: ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13460:3: ( (lv_quantifier_0_0= ruleQuantification ) )?
            int alt282=2;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    // InternalKim.g:13461:4: (lv_quantifier_0_0= ruleQuantification )
                    {
                    // InternalKim.g:13461:4: (lv_quantifier_0_0= ruleQuantification )
                    // InternalKim.g:13462:5: lv_quantifier_0_0= ruleQuantification
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_quantifier_0_0=ruleQuantification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImplicationRule());
                      					}
                      					set(
                      						current,
                      						"quantifier",
                      						lv_quantifier_0_0,
                      						"org.integratedmodelling.kim.Kim.Quantification");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:13479:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
            // InternalKim.g:13480:4: (lv_concept_1_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13480:4: (lv_concept_1_0= ruleConceptDeclaration )
            // InternalKim.g:13481:5: lv_concept_1_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImplicationAccess().getConceptConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_174);
            lv_concept_1_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImplicationRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_1_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13498:3: (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==27) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // InternalKim.g:13499:4: otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) )
                    {
                    otherlv_2=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImplicationAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalKim.g:13503:4: ( (lv_target_3_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13504:5: (lv_target_3_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13504:5: (lv_target_3_0= ruleConceptDeclaration )
                    // InternalKim.g:13505:6: lv_target_3_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImplicationAccess().getTargetConceptDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_3_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImplicationRule());
                      						}
                      						set(
                      							current,
                      							"target",
                      							lv_target_3_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplication"


    // $ANTLR start "entryRuleQuantification"
    // InternalKim.g:13527:1: entryRuleQuantification returns [EObject current=null] : iv_ruleQuantification= ruleQuantification EOF ;
    public final EObject entryRuleQuantification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantification = null;


        try {
            // InternalKim.g:13527:55: (iv_ruleQuantification= ruleQuantification EOF )
            // InternalKim.g:13528:2: iv_ruleQuantification= ruleQuantification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantification=ruleQuantification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantification"


    // $ANTLR start "ruleQuantification"
    // InternalKim.g:13534:1: ruleQuantification returns [EObject current=null] : ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) ;
    public final EObject ruleQuantification() throws RecognitionException {
        EObject current = null;

        Token lv_only_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token lv_atMost_5_0=null;
        Token lv_cardinality_6_0=null;
        Token otherlv_7=null;
        Token lv_orMore_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:13540:2: ( ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) )
            // InternalKim.g:13541:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            {
            // InternalKim.g:13541:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            // InternalKim.g:13542:3: () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            {
            // InternalKim.g:13542:3: ()
            // InternalKim.g:13543:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuantificationAccess().getQuantificationAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:13552:3: ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            int alt287=3;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==88) ) {
                alt287=1;
            }
            else if ( (LA287_0==RULE_INT||(LA287_0>=205 && LA287_0<=206)) ) {
                alt287=2;
            }
            switch (alt287) {
                case 1 :
                    // InternalKim.g:13553:4: ( (lv_only_1_0= 'only' ) )
                    {
                    // InternalKim.g:13553:4: ( (lv_only_1_0= 'only' ) )
                    // InternalKim.g:13554:5: (lv_only_1_0= 'only' )
                    {
                    // InternalKim.g:13554:5: (lv_only_1_0= 'only' )
                    // InternalKim.g:13555:6: lv_only_1_0= 'only'
                    {
                    lv_only_1_0=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_1_0, grammarAccess.getQuantificationAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantificationRule());
                      						}
                      						setWithLastConsumed(current, "only", lv_only_1_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13568:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:13568:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    // InternalKim.g:13569:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    {
                    // InternalKim.g:13569:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )?
                    int alt285=3;
                    int LA285_0 = input.LA(1);

                    if ( (LA285_0==205) ) {
                        alt285=1;
                    }
                    else if ( (LA285_0==206) ) {
                        alt285=2;
                    }
                    switch (alt285) {
                        case 1 :
                            // InternalKim.g:13570:6: ( (lv_exactly_2_0= 'exactly' ) )
                            {
                            // InternalKim.g:13570:6: ( (lv_exactly_2_0= 'exactly' ) )
                            // InternalKim.g:13571:7: (lv_exactly_2_0= 'exactly' )
                            {
                            // InternalKim.g:13571:7: (lv_exactly_2_0= 'exactly' )
                            // InternalKim.g:13572:8: lv_exactly_2_0= 'exactly'
                            {
                            lv_exactly_2_0=(Token)match(input,205,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_2_0, grammarAccess.getQuantificationAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "exactly", lv_exactly_2_0 != null, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13585:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:13585:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            // InternalKim.g:13586:7: otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            {
                            otherlv_3=(Token)match(input,206,FOLLOW_175); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getQuantificationAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:13590:7: ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            int alt284=2;
                            int LA284_0 = input.LA(1);

                            if ( (LA284_0==207) ) {
                                alt284=1;
                            }
                            else if ( (LA284_0==208) ) {
                                alt284=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 284, 0, input);

                                throw nvae;
                            }
                            switch (alt284) {
                                case 1 :
                                    // InternalKim.g:13591:8: ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    // InternalKim.g:13591:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:13592:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:13592:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:13593:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,207,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getQuantificationAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", lv_atLeast_4_0 != null, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13606:8: ( (lv_atMost_5_0= 'most' ) )
                                    {
                                    // InternalKim.g:13606:8: ( (lv_atMost_5_0= 'most' ) )
                                    // InternalKim.g:13607:9: (lv_atMost_5_0= 'most' )
                                    {
                                    // InternalKim.g:13607:9: (lv_atMost_5_0= 'most' )
                                    // InternalKim.g:13608:10: lv_atMost_5_0= 'most'
                                    {
                                    lv_atMost_5_0=(Token)match(input,208,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_5_0, grammarAccess.getQuantificationAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", lv_atMost_5_0 != null, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13623:5: ( (lv_cardinality_6_0= RULE_INT ) )
                    // InternalKim.g:13624:6: (lv_cardinality_6_0= RULE_INT )
                    {
                    // InternalKim.g:13624:6: (lv_cardinality_6_0= RULE_INT )
                    // InternalKim.g:13625:7: lv_cardinality_6_0= RULE_INT
                    {
                    lv_cardinality_6_0=(Token)match(input,RULE_INT,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_6_0, grammarAccess.getQuantificationAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getQuantificationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_6_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13641:5: (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    int alt286=2;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==168) ) {
                        alt286=1;
                    }
                    switch (alt286) {
                        case 1 :
                            // InternalKim.g:13642:6: otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) )
                            {
                            otherlv_7=(Token)match(input,168,FOLLOW_176); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getQuantificationAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13646:6: ( (lv_orMore_8_0= 'more' ) )
                            // InternalKim.g:13647:7: (lv_orMore_8_0= 'more' )
                            {
                            // InternalKim.g:13647:7: (lv_orMore_8_0= 'more' )
                            // InternalKim.g:13648:8: lv_orMore_8_0= 'more'
                            {
                            lv_orMore_8_0=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_8_0, grammarAccess.getQuantificationAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "orMore", lv_orMore_8_0 != null, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantification"


    // $ANTLR start "entryRulePropertyStatement"
    // InternalKim.g:13667:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyStatement = null;


        try {
            // InternalKim.g:13667:58: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // InternalKim.g:13668:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyStatement=rulePropertyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyStatement"


    // $ANTLR start "rulePropertyStatement"
    // InternalKim.g:13674:1: rulePropertyStatement returns [EObject current=null] : ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_property_0_2=null;
        Token lv_has_1_0=null;
        Token lv_contains_2_0=null;
        Token lv_uses_3_0=null;
        Token lv_only_4_0=null;
        Token lv_exactly_5_0=null;
        Token otherlv_6=null;
        Token lv_atLeast_7_0=null;
        Token lv_atMost_8_0=null;
        Token lv_cardinality_9_0=null;
        Token otherlv_10=null;
        Token lv_orMore_11_0=null;
        AntlrDatatypeRuleToken lv_property_0_1 = null;

        EObject lv_propertyTarget_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13680:2: ( ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:13681:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:13681:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            // InternalKim.g:13682:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            {
            // InternalKim.g:13682:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) )
            int alt289=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_BACKCASE_ID:
                {
                alt289=1;
                }
                break;
            case 194:
                {
                alt289=2;
                }
                break;
            case 210:
                {
                alt289=3;
                }
                break;
            case 204:
                {
                alt289=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }

            switch (alt289) {
                case 1 :
                    // InternalKim.g:13683:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:13683:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:13684:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:13684:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    // InternalKim.g:13685:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:13685:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    int alt288=2;
                    int LA288_0 = input.LA(1);

                    if ( ((LA288_0>=RULE_LOWERCASE_ID && LA288_0<=RULE_UPPERCASE_ID)||LA288_0==RULE_LOWERCASE_DASHID) ) {
                        alt288=1;
                    }
                    else if ( (LA288_0==RULE_BACKCASE_ID) ) {
                        alt288=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 288, 0, input);

                        throw nvae;
                    }
                    switch (alt288) {
                        case 1 :
                            // InternalKim.g:13686:7: lv_property_0_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_177);
                            lv_property_0_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
                              							}
                              							set(
                              								current,
                              								"property",
                              								lv_property_0_1,
                              								"org.integratedmodelling.kim.Kim.PropertyId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13702:7: lv_property_0_2= RULE_BACKCASE_ID
                            {
                            lv_property_0_2=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_177); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPropertyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"property",
                              								lv_property_0_2,
                              								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13720:4: ( (lv_has_1_0= 'has' ) )
                    {
                    // InternalKim.g:13720:4: ( (lv_has_1_0= 'has' ) )
                    // InternalKim.g:13721:5: (lv_has_1_0= 'has' )
                    {
                    // InternalKim.g:13721:5: (lv_has_1_0= 'has' )
                    // InternalKim.g:13722:6: lv_has_1_0= 'has'
                    {
                    lv_has_1_0=(Token)match(input,194,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "has", lv_has_1_0 != null, "has");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13735:4: ( (lv_contains_2_0= 'contains' ) )
                    {
                    // InternalKim.g:13735:4: ( (lv_contains_2_0= 'contains' ) )
                    // InternalKim.g:13736:5: (lv_contains_2_0= 'contains' )
                    {
                    // InternalKim.g:13736:5: (lv_contains_2_0= 'contains' )
                    // InternalKim.g:13737:6: lv_contains_2_0= 'contains'
                    {
                    lv_contains_2_0=(Token)match(input,210,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "contains", lv_contains_2_0 != null, "contains");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13750:4: ( (lv_uses_3_0= 'uses' ) )
                    {
                    // InternalKim.g:13750:4: ( (lv_uses_3_0= 'uses' ) )
                    // InternalKim.g:13751:5: (lv_uses_3_0= 'uses' )
                    {
                    // InternalKim.g:13751:5: (lv_uses_3_0= 'uses' )
                    // InternalKim.g:13752:6: lv_uses_3_0= 'uses'
                    {
                    lv_uses_3_0=(Token)match(input,204,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "uses", lv_uses_3_0 != null, "uses");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:13765:3: ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )?
            int alt293=3;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==88) ) {
                alt293=1;
            }
            else if ( (LA293_0==RULE_INT||(LA293_0>=205 && LA293_0<=206)) ) {
                alt293=2;
            }
            switch (alt293) {
                case 1 :
                    // InternalKim.g:13766:4: ( (lv_only_4_0= 'only' ) )
                    {
                    // InternalKim.g:13766:4: ( (lv_only_4_0= 'only' ) )
                    // InternalKim.g:13767:5: (lv_only_4_0= 'only' )
                    {
                    // InternalKim.g:13767:5: (lv_only_4_0= 'only' )
                    // InternalKim.g:13768:6: lv_only_4_0= 'only'
                    {
                    lv_only_4_0=(Token)match(input,88,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "only", lv_only_4_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13781:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:13781:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    // InternalKim.g:13782:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    {
                    // InternalKim.g:13782:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )?
                    int alt291=3;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==205) ) {
                        alt291=1;
                    }
                    else if ( (LA291_0==206) ) {
                        alt291=2;
                    }
                    switch (alt291) {
                        case 1 :
                            // InternalKim.g:13783:6: ( (lv_exactly_5_0= 'exactly' ) )
                            {
                            // InternalKim.g:13783:6: ( (lv_exactly_5_0= 'exactly' ) )
                            // InternalKim.g:13784:7: (lv_exactly_5_0= 'exactly' )
                            {
                            // InternalKim.g:13784:7: (lv_exactly_5_0= 'exactly' )
                            // InternalKim.g:13785:8: lv_exactly_5_0= 'exactly'
                            {
                            lv_exactly_5_0=(Token)match(input,205,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "exactly", lv_exactly_5_0 != null, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13798:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:13798:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            // InternalKim.g:13799:7: otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            {
                            otherlv_6=(Token)match(input,206,FOLLOW_175); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:13803:7: ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            int alt290=2;
                            int LA290_0 = input.LA(1);

                            if ( (LA290_0==207) ) {
                                alt290=1;
                            }
                            else if ( (LA290_0==208) ) {
                                alt290=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 290, 0, input);

                                throw nvae;
                            }
                            switch (alt290) {
                                case 1 :
                                    // InternalKim.g:13804:8: ( (lv_atLeast_7_0= 'least' ) )
                                    {
                                    // InternalKim.g:13804:8: ( (lv_atLeast_7_0= 'least' ) )
                                    // InternalKim.g:13805:9: (lv_atLeast_7_0= 'least' )
                                    {
                                    // InternalKim.g:13805:9: (lv_atLeast_7_0= 'least' )
                                    // InternalKim.g:13806:10: lv_atLeast_7_0= 'least'
                                    {
                                    lv_atLeast_7_0=(Token)match(input,207,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", lv_atLeast_7_0 != null, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13819:8: ( (lv_atMost_8_0= 'most' ) )
                                    {
                                    // InternalKim.g:13819:8: ( (lv_atMost_8_0= 'most' ) )
                                    // InternalKim.g:13820:9: (lv_atMost_8_0= 'most' )
                                    {
                                    // InternalKim.g:13820:9: (lv_atMost_8_0= 'most' )
                                    // InternalKim.g:13821:10: lv_atMost_8_0= 'most'
                                    {
                                    lv_atMost_8_0=(Token)match(input,208,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", lv_atMost_8_0 != null, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13836:5: ( (lv_cardinality_9_0= RULE_INT ) )
                    // InternalKim.g:13837:6: (lv_cardinality_9_0= RULE_INT )
                    {
                    // InternalKim.g:13837:6: (lv_cardinality_9_0= RULE_INT )
                    // InternalKim.g:13838:7: lv_cardinality_9_0= RULE_INT
                    {
                    lv_cardinality_9_0=(Token)match(input,RULE_INT,FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPropertyStatementRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13854:5: (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==168) ) {
                        alt292=1;
                    }
                    switch (alt292) {
                        case 1 :
                            // InternalKim.g:13855:6: otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) )
                            {
                            otherlv_10=(Token)match(input,168,FOLLOW_176); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13859:6: ( (lv_orMore_11_0= 'more' ) )
                            // InternalKim.g:13860:7: (lv_orMore_11_0= 'more' )
                            {
                            // InternalKim.g:13860:7: (lv_orMore_11_0= 'more' )
                            // InternalKim.g:13861:8: lv_orMore_11_0= 'more'
                            {
                            lv_orMore_11_0=(Token)match(input,209,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "orMore", lv_orMore_11_0 != null, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:13876:3: ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            // InternalKim.g:13877:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            {
            // InternalKim.g:13877:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            // InternalKim.g:13878:5: lv_propertyTarget_12_0= ruleSimpleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_propertyTarget_12_0=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
              					}
              					set(
              						current,
              						"propertyTarget",
              						lv_propertyTarget_12_0,
              						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyStatement"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:13899:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:13899:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:13900:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:13906:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13912:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13913:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13913:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13914:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13914:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13915:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13915:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:13916:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_179);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13933:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==211) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // InternalKim.g:13934:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,211,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13938:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13939:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13939:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:13940:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_180);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,169,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:13961:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13962:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13962:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:13963:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:13985:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:13985:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:13986:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:13992:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:13998:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:13999:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:13999:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==RULE_CAMELCASE_ID||LA296_0==176) ) {
                alt296=1;
            }
            else if ( (LA296_0==40) ) {
                alt296=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }
            switch (alt296) {
                case 1 :
                    // InternalKim.g:14000:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14000:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14001:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14001:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( (LA295_0==176) ) {
                        alt295=1;
                    }
                    switch (alt295) {
                        case 1 :
                            // InternalKim.g:14002:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:14002:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:14003:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,176,FOLLOW_181); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", lv_abstract_0_0 != null, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:14015:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14016:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14016:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:14017:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14035:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:14035:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:14036:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,40,FOLLOW_150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:14060:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:14060:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:14061:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:14067:1: ruleIdentityRequirement returns [EObject current=null] : ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token lv_type_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_authority_5_1=null;
        Token lv_authority_5_2=null;
        EObject lv_identities_1_0 = null;

        EObject lv_identities_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14073:2: ( ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:14074:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:14074:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( ((LA300_0>=212 && LA300_0<=215)) ) {
                alt300=1;
            }
            else if ( (LA300_0==185) ) {
                alt300=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }
            switch (alt300) {
                case 1 :
                    // InternalKim.g:14075:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:14075:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:14076:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:14076:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) )
                    // InternalKim.g:14077:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    {
                    // InternalKim.g:14077:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    // InternalKim.g:14078:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    {
                    // InternalKim.g:14078:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    int alt297=4;
                    switch ( input.LA(1) ) {
                    case 212:
                        {
                        alt297=1;
                        }
                        break;
                    case 213:
                        {
                        alt297=2;
                        }
                        break;
                    case 214:
                        {
                        alt297=3;
                        }
                        break;
                    case 215:
                        {
                        alt297=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 297, 0, input);

                        throw nvae;
                    }

                    switch (alt297) {
                        case 1 :
                            // InternalKim.g:14079:7: lv_type_0_1= 'identity'
                            {
                            lv_type_0_1=(Token)match(input,212,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_1, grammarAccess.getIdentityRequirementAccess().getTypeIdentityKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14090:7: lv_type_0_2= 'attribute'
                            {
                            lv_type_0_2=(Token)match(input,213,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_2, grammarAccess.getIdentityRequirementAccess().getTypeAttributeKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14101:7: lv_type_0_3= 'realm'
                            {
                            lv_type_0_3=(Token)match(input,214,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_3, grammarAccess.getIdentityRequirementAccess().getTypeRealmKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:14112:7: lv_type_0_4= 'extent'
                            {
                            lv_type_0_4=(Token)match(input,215,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_4, grammarAccess.getIdentityRequirementAccess().getTypeExtentKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14125:4: ( (lv_identities_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14126:5: (lv_identities_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14126:5: (lv_identities_1_0= ruleConceptDeclaration )
                    // InternalKim.g:14127:6: lv_identities_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_identities_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14144:4: (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    loop298:
                    do {
                        int alt298=2;
                        int LA298_0 = input.LA(1);

                        if ( (LA298_0==29) ) {
                            int LA298_1 = input.LA(2);

                            if ( ((LA298_1>=RULE_LOWERCASE_ID && LA298_1<=RULE_UPPERCASE_ID)||LA298_1==RULE_CAMELCASE_ID||LA298_1==RULE_LOWERCASE_DASHID||LA298_1==RULE_UPPERCASE_PATH||LA298_1==40||(LA298_1>=137 && LA298_1<=138)||(LA298_1>=146 && LA298_1<=147)||(LA298_1>=149 && LA298_1<=154)||(LA298_1>=156 && LA298_1<=167)) ) {
                                alt298=1;
                            }


                        }


                        switch (alt298) {
                    	case 1 :
                    	    // InternalKim.g:14145:5: otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_2=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:14149:5: ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:14150:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:14150:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    // InternalKim.g:14151:7: lv_identities_3_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_identities_3_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop298;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14171:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:14171:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:14172:4: otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_4=(Token)match(input,185,FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:14176:4: ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:14177:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:14177:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:14178:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:14178:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==RULE_UPPERCASE_ID) ) {
                        alt299=1;
                    }
                    else if ( (LA299_0==RULE_UPPERCASE_PATH) ) {
                        alt299=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 299, 0, input);

                        throw nvae;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalKim.g:14179:7: lv_authority_5_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_5_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14194:7: lv_authority_5_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_5_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:14216:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:14216:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:14217:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:14223:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14229:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:14230:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:14230:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:14231:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:14231:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:14232:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:14232:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:14233:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:14249:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt302=2;
            alt302 = dfa302.predict(input);
            switch (alt302) {
                case 1 :
                    // InternalKim.g:14250:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    // InternalKim.g:14250:4: ( ( '(' )=>otherlv_1= '(' )
                    // InternalKim.g:14251:5: ( '(' )=>otherlv_1= '('
                    {
                    otherlv_1=(Token)match(input,40,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      				
                    }

                    }

                    // InternalKim.g:14257:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt301=2;
                    int LA301_0 = input.LA(1);

                    if ( ((LA301_0>=RULE_LOWERCASE_ID && LA301_0<=RULE_STRING)||(LA301_0>=RULE_EXPR && LA301_0<=RULE_LOWERCASE_DASHID)||LA301_0==RULE_UPPERCASE_PATH||LA301_0==RULE_TEMPLATE_VAR||(LA301_0>=30 && LA301_0<=31)||LA301_0==40||LA301_0==48||(LA301_0>=55 && LA301_0<=56)||(LA301_0>=82 && LA301_0<=85)||LA301_0==88||LA301_0==90||LA301_0==118||LA301_0==123||(LA301_0>=137 && LA301_0<=138)||(LA301_0>=146 && LA301_0<=147)||(LA301_0>=149 && LA301_0<=154)||(LA301_0>=156 && LA301_0<=167)||LA301_0==216||(LA301_0>=251 && LA301_0<=252)) ) {
                        alt301=1;
                    }
                    switch (alt301) {
                        case 1 :
                            // InternalKim.g:14258:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:14258:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:14259:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:14285:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:14285:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:14286:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:14292:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_contents_2_0 = null;

        EObject lv_contents_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14298:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) )
            // InternalKim.g:14299:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            {
            // InternalKim.g:14299:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            // InternalKim.g:14300:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')'
            {
            // InternalKim.g:14300:3: ()
            // InternalKim.g:14301:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,40,FOLLOW_184); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:14314:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?
            int alt303=2;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    // InternalKim.g:14315:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14315:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14316:5: lv_contents_2_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_184);
                    lv_contents_2_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getListRule());
                      					}
                      					add(
                      						current,
                      						"contents",
                      						lv_contents_2_0,
                      						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14333:3: ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( ((LA305_0>=RULE_LOWERCASE_ID && LA305_0<=RULE_STRING)||(LA305_0>=RULE_EXPR && LA305_0<=RULE_LOWERCASE_DASHID)||LA305_0==RULE_UPPERCASE_PATH||LA305_0==RULE_TEMPLATE_VAR||(LA305_0>=29 && LA305_0<=31)||LA305_0==40||LA305_0==48||(LA305_0>=55 && LA305_0<=56)||(LA305_0>=82 && LA305_0<=85)||LA305_0==88||LA305_0==90||LA305_0==118||LA305_0==123||(LA305_0>=137 && LA305_0<=138)||(LA305_0>=146 && LA305_0<=147)||(LA305_0>=149 && LA305_0<=154)||(LA305_0>=156 && LA305_0<=167)||LA305_0==216||(LA305_0>=251 && LA305_0<=252)) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // InternalKim.g:14334:4: (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    {
            	    // InternalKim.g:14334:4: (otherlv_3= ',' )?
            	    int alt304=2;
            	    int LA304_0 = input.LA(1);

            	    if ( (LA304_0==29) ) {
            	        alt304=1;
            	    }
            	    switch (alt304) {
            	        case 1 :
            	            // InternalKim.g:14335:5: otherlv_3= ','
            	            {
            	            otherlv_3=(Token)match(input,29,FOLLOW_185); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_3_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:14340:4: ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    // InternalKim.g:14341:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    {
            	    // InternalKim.g:14341:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    // InternalKim.g:14342:6: lv_contents_4_0= ruleValueWithIdAndConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_184);
            	    lv_contents_4_0=ruleValueWithIdAndConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_4_0,
            	      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);

            otherlv_5=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getListAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:14368:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:14368:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:14369:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:14375:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14381:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:14382:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:14382:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt307=4;
            alt307 = dfa307.predict(input);
            switch (alt307) {
                case 1 :
                    // InternalKim.g:14383:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14383:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14384:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14384:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14385:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14385:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14386:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14403:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14404:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14410:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14411:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14415:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14416:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14435:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14435:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14436:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14436:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14437:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14455:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14455:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14456:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14456:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14457:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14474:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14474:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14475:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14475:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14476:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14476:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt306=2;
                    int LA306_0 = input.LA(1);

                    if ( (LA306_0==30) ) {
                        alt306=1;
                    }
                    else if ( (LA306_0==31) ) {
                        alt306=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 306, 0, input);

                        throw nvae;
                    }
                    switch (alt306) {
                        case 1 :
                            // InternalKim.g:14477:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14488:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:14505:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:14505:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:14506:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:14512:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14518:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:14519:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:14519:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt309=6;
            alt309 = dfa309.predict(input);
            switch (alt309) {
                case 1 :
                    // InternalKim.g:14520:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14520:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14521:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14521:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14522:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14522:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14523:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14540:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14541:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14547:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14548:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14552:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14553:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14572:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14572:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14573:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14573:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14574:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14592:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14592:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14593:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14593:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14594:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14611:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14611:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14612:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14612:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14613:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14613:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt308=2;
                    int LA308_0 = input.LA(1);

                    if ( (LA308_0==30) ) {
                        alt308=1;
                    }
                    else if ( (LA308_0==31) ) {
                        alt308=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 308, 0, input);

                        throw nvae;
                    }
                    switch (alt308) {
                        case 1 :
                            // InternalKim.g:14614:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14625:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14639:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:14639:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:14640:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:14640:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:14641:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14658:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:14658:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:14659:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:14659:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:14660:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", lv_comma_7_0 != null, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:14676:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:14676:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:14677:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:14683:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14689:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:14690:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:14690:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:14691:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:14691:3: ()
            // InternalKim.g:14692:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,216,FOLLOW_186); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:14705:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( ((LA312_0>=RULE_LOWERCASE_ID && LA312_0<=RULE_STRING)||(LA312_0>=RULE_CAMELCASE_ID && LA312_0<=RULE_LOWERCASE_DASHID)||LA312_0==RULE_UPPERCASE_PATH||(LA312_0>=30 && LA312_0<=31)||LA312_0==40||LA312_0==45||LA312_0==48||LA312_0==55||(LA312_0>=82 && LA312_0<=85)||LA312_0==90||(LA312_0>=137 && LA312_0<=138)||(LA312_0>=146 && LA312_0<=147)||(LA312_0>=149 && LA312_0<=154)||(LA312_0>=156 && LA312_0<=167)||(LA312_0>=251 && LA312_0<=252)) ) {
                alt312=1;
            }
            switch (alt312) {
                case 1 :
                    // InternalKim.g:14706:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:14706:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:14707:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:14707:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:14708:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_187);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14725:4: ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop311:
                    do {
                        int alt311=2;
                        int LA311_0 = input.LA(1);

                        if ( ((LA311_0>=RULE_LOWERCASE_ID && LA311_0<=RULE_STRING)||(LA311_0>=RULE_CAMELCASE_ID && LA311_0<=RULE_LOWERCASE_DASHID)||LA311_0==RULE_UPPERCASE_PATH||(LA311_0>=29 && LA311_0<=31)||LA311_0==40||LA311_0==45||LA311_0==48||LA311_0==55||(LA311_0>=82 && LA311_0<=85)||LA311_0==90||(LA311_0>=137 && LA311_0<=138)||(LA311_0>=146 && LA311_0<=147)||(LA311_0>=149 && LA311_0<=154)||(LA311_0>=156 && LA311_0<=167)||(LA311_0>=251 && LA311_0<=252)) ) {
                            alt311=1;
                        }


                        switch (alt311) {
                    	case 1 :
                    	    // InternalKim.g:14726:5: ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:14726:5: ( ( ',' )=>otherlv_3= ',' )?
                    	    int alt310=2;
                    	    int LA310_0 = input.LA(1);

                    	    if ( (LA310_0==29) && (synpred552_InternalKim())) {
                    	        alt310=1;
                    	    }
                    	    switch (alt310) {
                    	        case 1 :
                    	            // InternalKim.g:14727:6: ( ',' )=>otherlv_3= ','
                    	            {
                    	            otherlv_3=(Token)match(input,29,FOLLOW_188); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:14734:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:14735:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:14735:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:14736:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_187);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop311;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:14763:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:14763:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:14764:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:14770:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14776:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14777:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14777:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14778:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14778:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) )
            // InternalKim.g:14779:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            {
            // InternalKim.g:14779:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            // InternalKim.g:14780:5: lv_classifier_0_0= ruleClassifierRHSWithIdNoSet
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdNoSetParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_classifier_0_0=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithIdNoSet");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,111,FOLLOW_185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:14801:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14802:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14802:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14803:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:14824:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:14824:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:14825:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:14831:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14837:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14838:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14838:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14839:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14839:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) )
            // InternalKim.g:14840:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            {
            // InternalKim.g:14840:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            // InternalKim.g:14841:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            {
            // InternalKim.g:14841:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            int alt313=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA313_1 = input.LA(2);

                if ( (synpred555_InternalKim()) ) {
                    alt313=1;
                }
                else if ( (synpred556_InternalKim()) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt313=1;
                }
                break;
            case 166:
                {
                alt313=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }

            switch (alt313) {
                case 1 :
                    // InternalKim.g:14842:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_189);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14858:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:14873:6: lv_name_0_3= 'value'
                    {
                    lv_name_0_3=(Token)match(input,166,FOLLOW_189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:14886:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==217) ) {
                alt314=1;
            }
            else if ( (LA314_0==48) ) {
                alt314=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 314, 0, input);

                throw nvae;
            }
            switch (alt314) {
                case 1 :
                    // InternalKim.g:14887:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:14887:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:14888:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:14888:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:14889:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,217,FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", lv_interactive_1_0 != null, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14902:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,48,FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14907:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14908:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14908:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14909:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:14930:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:14930:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:14931:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:14937:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;

        EObject lv_singleValue_5_0 = null;

        EObject lv_pairs_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14943:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) )
            // InternalKim.g:14944:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            {
            // InternalKim.g:14944:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            int alt318=2;
            alt318 = dfa318.predict(input);
            switch (alt318) {
                case 1 :
                    // InternalKim.g:14945:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:14945:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:14946:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:14946:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:14947:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:14947:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:14948:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14965:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop315:
                    do {
                        int alt315=2;
                        int LA315_0 = input.LA(1);

                        if ( (LA315_0==29) ) {
                            alt315=1;
                        }


                        switch (alt315) {
                    	case 1 :
                    	    // InternalKim.g:14966:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:14966:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:14967:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,29,FOLLOW_190); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14973:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:14974:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:14974:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:14975:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop315;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14995:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    {
                    // InternalKim.g:14995:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    // InternalKim.g:14996:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    {
                    // InternalKim.g:14996:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:14997:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14997:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14998:6: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"singleValue",
                      							lv_singleValue_3_0,
                      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15015:4: ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    loop317:
                    do {
                        int alt317=2;
                        int LA317_0 = input.LA(1);

                        if ( (LA317_0==29) ) {
                            alt317=1;
                        }


                        switch (alt317) {
                    	case 1 :
                    	    // InternalKim.g:15016:5: ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    {
                    	    // InternalKim.g:15016:5: ( ( ',' )=>otherlv_4= ',' )
                    	    // InternalKim.g:15017:6: ( ',' )=>otherlv_4= ','
                    	    {
                    	    otherlv_4=(Token)match(input,29,FOLLOW_185); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:15023:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    int alt316=2;
                    	    alt316 = dfa316.predict(input);
                    	    switch (alt316) {
                    	        case 1 :
                    	            // InternalKim.g:15024:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            {
                    	            // InternalKim.g:15024:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            // InternalKim.g:15025:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            {
                    	            // InternalKim.g:15025:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            // InternalKim.g:15026:8: lv_singleValue_5_0= ruleValueWithIdAndConcept
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_40);
                    	            lv_singleValue_5_0=ruleValueWithIdAndConcept();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"singleValue",
                    	              									lv_singleValue_5_0,
                    	              									"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:15044:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            {
                    	            // InternalKim.g:15044:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            // InternalKim.g:15045:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            {
                    	            // InternalKim.g:15045:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            // InternalKim.g:15046:8: lv_pairs_6_0= ruleKeyValuePair
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_40);
                    	            lv_pairs_6_0=ruleKeyValuePair();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"pairs",
                    	              									lv_pairs_6_0,
                    	              									"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop317;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:15070:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:15070:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:15071:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:15077:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_5_0=null;
        Token lv_templatevar_6_0=null;
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        Token lv_null_13_0=null;
        EObject lv_map_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_date_3_0 = null;

        EObject lv_literal_4_0 = null;

        AntlrDatatypeRuleToken lv_id_7_1 = null;

        EObject lv_table_8_0 = null;

        EObject lv_list_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_op_11_0 = null;

        EObject lv_expression_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15083:2: ( ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) ) )
            // InternalKim.g:15084:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )
            {
            // InternalKim.g:15084:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )
            int alt320=13;
            alt320 = dfa320.predict(input);
            switch (alt320) {
                case 1 :
                    // InternalKim.g:15085:3: ( (lv_map_0_0= ruleMap ) )
                    {
                    // InternalKim.g:15085:3: ( (lv_map_0_0= ruleMap ) )
                    // InternalKim.g:15086:4: (lv_map_0_0= ruleMap )
                    {
                    // InternalKim.g:15086:4: (lv_map_0_0= ruleMap )
                    // InternalKim.g:15087:5: lv_map_0_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_0_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_0_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15105:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
                    {
                    // InternalKim.g:15105:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
                    // InternalKim.g:15106:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
                    {
                    // InternalKim.g:15106:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
                    // InternalKim.g:15107:5: lv_concept_1_0= ruleSimpleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleSimpleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15125:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15125:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15126:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15126:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15127:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15145:3: ( (lv_date_3_0= ruleDate ) )
                    {
                    // InternalKim.g:15145:3: ( (lv_date_3_0= ruleDate ) )
                    // InternalKim.g:15146:4: (lv_date_3_0= ruleDate )
                    {
                    // InternalKim.g:15146:4: (lv_date_3_0= ruleDate )
                    // InternalKim.g:15147:5: lv_date_3_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_3_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_3_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15165:3: ( (lv_literal_4_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15165:3: ( (lv_literal_4_0= ruleLiteral ) )
                    // InternalKim.g:15166:4: (lv_literal_4_0= ruleLiteral )
                    {
                    // InternalKim.g:15166:4: (lv_literal_4_0= ruleLiteral )
                    // InternalKim.g:15167:5: lv_literal_4_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_4_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_4_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15185:3: ( (lv_expr_5_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:15185:3: ( (lv_expr_5_0= RULE_EXPR ) )
                    // InternalKim.g:15186:4: (lv_expr_5_0= RULE_EXPR )
                    {
                    // InternalKim.g:15186:4: (lv_expr_5_0= RULE_EXPR )
                    // InternalKim.g:15187:5: lv_expr_5_0= RULE_EXPR
                    {
                    lv_expr_5_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_5_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_5_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15204:3: ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) )
                    {
                    // InternalKim.g:15204:3: ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) )
                    // InternalKim.g:15205:4: (lv_templatevar_6_0= RULE_TEMPLATE_VAR )
                    {
                    // InternalKim.g:15205:4: (lv_templatevar_6_0= RULE_TEMPLATE_VAR )
                    // InternalKim.g:15206:5: lv_templatevar_6_0= RULE_TEMPLATE_VAR
                    {
                    lv_templatevar_6_0=(Token)match(input,RULE_TEMPLATE_VAR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_templatevar_6_0, grammarAccess.getValueWithIdAndConceptAccess().getTemplatevarTEMPLATE_VARTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"templatevar",
                      						lv_templatevar_6_0,
                      						"org.integratedmodelling.kim.Kim.TEMPLATE_VAR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15223:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15223:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15224:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15224:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15225:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15225:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    int alt319=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA319_1 = input.LA(2);

                        if ( (synpred571_InternalKim()) ) {
                            alt319=1;
                        }
                        else if ( (synpred572_InternalKim()) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        int LA319_2 = input.LA(2);

                        if ( (synpred571_InternalKim()) ) {
                            alt319=1;
                        }
                        else if ( (synpred573_InternalKim()) ) {
                            alt319=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt319=1;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt319=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 319, 0, input);

                        throw nvae;
                    }

                    switch (alt319) {
                        case 1 :
                            // InternalKim.g:15226:6: lv_id_7_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_7_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_7_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15242:6: lv_id_7_2= RULE_LOWERCASE_ID
                            {
                            lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_7_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15257:6: lv_id_7_3= RULE_UPPERCASE_ID
                            {
                            lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_7_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:15272:6: lv_id_7_4= RULE_CAMELCASE_ID
                            {
                            lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_7_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15290:3: ( (lv_table_8_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15290:3: ( (lv_table_8_0= ruleLookupTable ) )
                    // InternalKim.g:15291:4: (lv_table_8_0= ruleLookupTable )
                    {
                    // InternalKim.g:15291:4: (lv_table_8_0= ruleLookupTable )
                    // InternalKim.g:15292:5: lv_table_8_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_8_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_8_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15310:3: ( (lv_list_9_0= ruleList ) )
                    {
                    // InternalKim.g:15310:3: ( (lv_list_9_0= ruleList ) )
                    // InternalKim.g:15311:4: (lv_list_9_0= ruleList )
                    {
                    // InternalKim.g:15311:4: (lv_list_9_0= ruleList )
                    // InternalKim.g:15312:5: lv_list_9_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_9_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_9_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:15330:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15330:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:15331:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:15331:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:15332:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:15350:3: ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:15350:3: ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) )
                    // InternalKim.g:15351:4: ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) )
                    {
                    // InternalKim.g:15351:4: ( (lv_op_11_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:15352:5: (lv_op_11_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:15352:5: (lv_op_11_0= ruleREL_OPERATOR )
                    // InternalKim.g:15353:6: lv_op_11_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getOpREL_OPERATORParserRuleCall_11_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_11_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_11_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15370:4: ( (lv_expression_12_0= ruleNumber ) )
                    // InternalKim.g:15371:5: (lv_expression_12_0= ruleNumber )
                    {
                    // InternalKim.g:15371:5: (lv_expression_12_0= ruleNumber )
                    // InternalKim.g:15372:6: lv_expression_12_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getExpressionNumberParserRuleCall_11_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_12_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_12_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:15391:3: ( (lv_null_13_0= 'unknown' ) )
                    {
                    // InternalKim.g:15391:3: ( (lv_null_13_0= 'unknown' ) )
                    // InternalKim.g:15392:4: (lv_null_13_0= 'unknown' )
                    {
                    // InternalKim.g:15392:4: (lv_null_13_0= 'unknown' )
                    // InternalKim.g:15393:5: lv_null_13_0= 'unknown'
                    {
                    lv_null_13_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_13_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_13_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:15409:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:15409:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:15410:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:15416:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_11_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;

        EObject lv_table_7_0 = null;

        EObject lv_quantity_8_0 = null;

        EObject lv_date_9_0 = null;

        EObject lv_map_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15422:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) )
            // InternalKim.g:15423:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            {
            // InternalKim.g:15423:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            int alt323=10;
            alt323 = dfa323.predict(input);
            switch (alt323) {
                case 1 :
                    // InternalKim.g:15424:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:15424:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:15425:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:15425:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:15426:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15444:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:15444:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:15445:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:15445:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:15446:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15464:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    {
                    // InternalKim.g:15464:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    // InternalKim.g:15465:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    {
                    // InternalKim.g:15465:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:15466:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:15466:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:15467:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:15483:4: (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    int alt321=2;
                    int LA321_0 = input.LA(1);

                    if ( (LA321_0==54) ) {
                        alt321=1;
                    }
                    switch (alt321) {
                        case 1 :
                            // InternalKim.g:15484:5: otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            {
                            otherlv_3=(Token)match(input,54,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:15488:5: ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:15489:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:15489:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:15490:7: lv_language_4_0= RULE_UPPERCASE_ID
                            {
                            lv_language_4_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"language",
                              								lv_language_4_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15509:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15509:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15510:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15510:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15511:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15511:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt322=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt322=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt322=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt322=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 322, 0, input);

                        throw nvae;
                    }

                    switch (alt322) {
                        case 1 :
                            // InternalKim.g:15512:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15527:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15542:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15560:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:15560:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:15561:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:15561:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:15562:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15580:3: ( (lv_table_7_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15580:3: ( (lv_table_7_0= ruleLookupTable ) )
                    // InternalKim.g:15581:4: (lv_table_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:15581:4: (lv_table_7_0= ruleLookupTable )
                    // InternalKim.g:15582:5: lv_table_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_7_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15600:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15600:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    // InternalKim.g:15601:4: (lv_quantity_8_0= ruleQuantity )
                    {
                    // InternalKim.g:15601:4: (lv_quantity_8_0= ruleQuantity )
                    // InternalKim.g:15602:5: lv_quantity_8_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_8_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_8_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15620:3: ( (lv_date_9_0= ruleDate ) )
                    {
                    // InternalKim.g:15620:3: ( (lv_date_9_0= ruleDate ) )
                    // InternalKim.g:15621:4: (lv_date_9_0= ruleDate )
                    {
                    // InternalKim.g:15621:4: (lv_date_9_0= ruleDate )
                    // InternalKim.g:15622:5: lv_date_9_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_9_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_9_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15640:3: ( (lv_map_10_0= ruleMap ) )
                    {
                    // InternalKim.g:15640:3: ( (lv_map_10_0= ruleMap ) )
                    // InternalKim.g:15641:4: (lv_map_10_0= ruleMap )
                    {
                    // InternalKim.g:15641:4: (lv_map_10_0= ruleMap )
                    // InternalKim.g:15642:5: lv_map_10_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_10_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_10_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15660:3: ( (lv_null_11_0= 'unknown' ) )
                    {
                    // InternalKim.g:15660:3: ( (lv_null_11_0= 'unknown' ) )
                    // InternalKim.g:15661:4: (lv_null_11_0= 'unknown' )
                    {
                    // InternalKim.g:15661:4: (lv_null_11_0= 'unknown' )
                    // InternalKim.g:15662:5: lv_null_11_0= 'unknown'
                    {
                    lv_null_11_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_11_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleLiteralValueWithConcept"
    // InternalKim.g:15678:1: entryRuleLiteralValueWithConcept returns [EObject current=null] : iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF ;
    public final EObject entryRuleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueWithConcept = null;


        try {
            // InternalKim.g:15678:64: (iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF )
            // InternalKim.g:15679:2: iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueWithConcept"


    // $ANTLR start "ruleLiteralValueWithConcept"
    // InternalKim.g:15685:1: ruleLiteralValueWithConcept returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) ;
    public final EObject ruleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_6_1=null;
        Token lv_id_6_2=null;
        Token lv_id_6_3=null;
        EObject lv_literal_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_quantity_4_0 = null;

        EObject lv_date_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15691:2: ( ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) )
            // InternalKim.g:15692:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            {
            // InternalKim.g:15692:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            int alt325=7;
            alt325 = dfa325.predict(input);
            switch (alt325) {
                case 1 :
                    // InternalKim.g:15693:3: ( (lv_literal_0_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15693:3: ( (lv_literal_0_0= ruleLiteral ) )
                    // InternalKim.g:15694:4: (lv_literal_0_0= ruleLiteral )
                    {
                    // InternalKim.g:15694:4: (lv_literal_0_0= ruleLiteral )
                    // InternalKim.g:15695:5: lv_literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15713:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:15713:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:15714:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:15714:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:15715:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15733:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15733:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15734:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15734:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15735:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15753:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:15753:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:15754:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:15754:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:15755:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15772:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15772:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    // InternalKim.g:15773:4: (lv_quantity_4_0= ruleQuantity )
                    {
                    // InternalKim.g:15773:4: (lv_quantity_4_0= ruleQuantity )
                    // InternalKim.g:15774:5: lv_quantity_4_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_4_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_4_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15792:3: ( (lv_date_5_0= ruleDate ) )
                    {
                    // InternalKim.g:15792:3: ( (lv_date_5_0= ruleDate ) )
                    // InternalKim.g:15793:4: (lv_date_5_0= ruleDate )
                    {
                    // InternalKim.g:15793:4: (lv_date_5_0= ruleDate )
                    // InternalKim.g:15794:5: lv_date_5_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_5_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_5_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15812:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15812:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15813:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15813:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15814:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15814:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    int alt324=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt324=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt324=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt324=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 324, 0, input);

                        throw nvae;
                    }

                    switch (alt324) {
                        case 1 :
                            // InternalKim.g:15815:6: lv_id_6_1= RULE_LOWERCASE_ID
                            {
                            lv_id_6_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15830:6: lv_id_6_2= RULE_UPPERCASE_ID
                            {
                            lv_id_6_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15845:6: lv_id_6_3= RULE_CAMELCASE_ID
                            {
                            lv_id_6_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueWithConcept"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:15866:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:15866:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:15867:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:15873:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15879:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:15880:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:15880:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:15881:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:15881:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:15882:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:15882:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:15883:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,40,FOLLOW_183); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:15904:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( ((LA326_0>=RULE_LOWERCASE_ID && LA326_0<=RULE_STRING)||(LA326_0>=RULE_EXPR && LA326_0<=RULE_LOWERCASE_DASHID)||LA326_0==RULE_UPPERCASE_PATH||LA326_0==RULE_TEMPLATE_VAR||(LA326_0>=30 && LA326_0<=31)||LA326_0==40||LA326_0==48||(LA326_0>=55 && LA326_0<=56)||(LA326_0>=82 && LA326_0<=85)||LA326_0==88||LA326_0==90||LA326_0==118||LA326_0==123||(LA326_0>=137 && LA326_0<=138)||(LA326_0>=146 && LA326_0<=147)||(LA326_0>=149 && LA326_0<=154)||(LA326_0>=156 && LA326_0<=167)||LA326_0==216||(LA326_0>=251 && LA326_0<=252)) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // InternalKim.g:15905:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:15905:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:15906:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_36);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleOption"
    // InternalKim.g:15931:1: entryRuleOption returns [EObject current=null] : iv_ruleOption= ruleOption EOF ;
    public final EObject entryRuleOption() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOption = null;


        try {
            // InternalKim.g:15931:47: (iv_ruleOption= ruleOption EOF )
            // InternalKim.g:15932:2: iv_ruleOption= ruleOption EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOption=ruleOption();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOption; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOption"


    // $ANTLR start "ruleOption"
    // InternalKim.g:15938:1: ruleOption returns [EObject current=null] : ( ( (lv_key_0_0= RULE_OPTION_KEY ) ) ( (lv_value_1_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleOption() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        EObject lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15944:2: ( ( ( (lv_key_0_0= RULE_OPTION_KEY ) ) ( (lv_value_1_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:15945:2: ( ( (lv_key_0_0= RULE_OPTION_KEY ) ) ( (lv_value_1_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:15945:2: ( ( (lv_key_0_0= RULE_OPTION_KEY ) ) ( (lv_value_1_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:15946:3: ( (lv_key_0_0= RULE_OPTION_KEY ) ) ( (lv_value_1_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:15946:3: ( (lv_key_0_0= RULE_OPTION_KEY ) )
            // InternalKim.g:15947:4: (lv_key_0_0= RULE_OPTION_KEY )
            {
            // InternalKim.g:15947:4: (lv_key_0_0= RULE_OPTION_KEY )
            // InternalKim.g:15948:5: lv_key_0_0= RULE_OPTION_KEY
            {
            lv_key_0_0=(Token)match(input,RULE_OPTION_KEY,FOLLOW_185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getOptionAccess().getKeyOPTION_KEYTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOptionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.integratedmodelling.kim.Kim.OPTION_KEY");
              				
            }

            }


            }

            // InternalKim.g:15964:3: ( (lv_value_1_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:15965:4: (lv_value_1_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:15965:4: (lv_value_1_0= ruleValueWithIdAndConcept )
            // InternalKim.g:15966:5: lv_value_1_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOptionAccess().getValueValueWithIdAndConceptParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOptionRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOption"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:15987:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:15987:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:15988:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:15994:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:16000:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:16001:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:16001:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==218) ) {
                alt327=1;
            }
            else if ( (LA327_0==101||(LA327_0>=174 && LA327_0<=175)||LA327_0==195||(LA327_0>=212 && LA327_0<=215)||(LA327_0>=219 && LA327_0<=247)) ) {
                alt327=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;
            }
            switch (alt327) {
                case 1 :
                    // InternalKim.g:16002:3: kw= 'quality'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16008:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:16022:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:16022:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:16023:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:16029:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:16035:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:16036:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:16036:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt328=10;
            switch ( input.LA(1) ) {
            case 219:
                {
                alt328=1;
                }
                break;
            case 220:
                {
                alt328=2;
                }
                break;
            case 221:
                {
                alt328=3;
                }
                break;
            case 175:
                {
                alt328=4;
                }
                break;
            case 222:
                {
                alt328=5;
                }
                break;
            case 215:
                {
                alt328=6;
                }
                break;
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
                {
                alt328=7;
                }
                break;
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
                {
                alt328=8;
                }
                break;
            case 174:
            case 245:
            case 246:
            case 247:
                {
                alt328=9;
                }
                break;
            case 101:
            case 195:
            case 212:
            case 213:
            case 214:
            case 223:
                {
                alt328=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 328, 0, input);

                throw nvae;
            }

            switch (alt328) {
                case 1 :
                    // InternalKim.g:16037:3: kw= 'class'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16043:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16049:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16055:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16061:3: kw= 'bond'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16067:3: kw= 'extent'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16073:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16084:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:16095:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:16106:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:16120:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:16120:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:16121:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:16127:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16133:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:16134:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:16134:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt329=6;
            switch ( input.LA(1) ) {
            case 223:
                {
                alt329=1;
                }
                break;
            case 213:
                {
                alt329=2;
                }
                break;
            case 212:
                {
                alt329=3;
                }
                break;
            case 195:
                {
                alt329=4;
                }
                break;
            case 214:
                {
                alt329=5;
                }
                break;
            case 101:
                {
                alt329=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;
            }

            switch (alt329) {
                case 1 :
                    // InternalKim.g:16135:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16141:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16147:3: kw= 'identity'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16153:3: kw= 'role'
                    {
                    kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16159:3: kw= 'realm'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16165:3: kw= 'domain'
                    {
                    kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:16174:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:16174:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:16175:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:16181:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16187:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:16188:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:16188:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt330=8;
            switch ( input.LA(1) ) {
            case 224:
                {
                alt330=1;
                }
                break;
            case 225:
                {
                alt330=2;
                }
                break;
            case 226:
                {
                alt330=3;
                }
                break;
            case 227:
                {
                alt330=4;
                }
                break;
            case 228:
                {
                alt330=5;
                }
                break;
            case 229:
                {
                alt330=6;
                }
                break;
            case 230:
                {
                alt330=7;
                }
                break;
            case 231:
                {
                alt330=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 330, 0, input);

                throw nvae;
            }

            switch (alt330) {
                case 1 :
                    // InternalKim.g:16189:3: kw= 'amount'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16195:3: kw= 'length'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16201:3: kw= 'mass'
                    {
                    kw=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16207:3: kw= 'volume'
                    {
                    kw=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16213:3: kw= 'weight'
                    {
                    kw=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16219:3: kw= 'money'
                    {
                    kw=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16225:3: kw= 'duration'
                    {
                    kw=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16231:3: kw= 'area'
                    {
                    kw=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:16240:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:16240:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:16241:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:16247:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16253:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:16254:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:16254:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt331=13;
            switch ( input.LA(1) ) {
            case 232:
                {
                alt331=1;
                }
                break;
            case 233:
                {
                alt331=2;
                }
                break;
            case 234:
                {
                alt331=3;
                }
                break;
            case 235:
                {
                alt331=4;
                }
                break;
            case 236:
                {
                alt331=5;
                }
                break;
            case 237:
                {
                alt331=6;
                }
                break;
            case 238:
                {
                alt331=7;
                }
                break;
            case 239:
                {
                alt331=8;
                }
                break;
            case 240:
                {
                alt331=9;
                }
                break;
            case 241:
                {
                alt331=10;
                }
                break;
            case 242:
                {
                alt331=11;
                }
                break;
            case 243:
                {
                alt331=12;
                }
                break;
            case 244:
                {
                alt331=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;
            }

            switch (alt331) {
                case 1 :
                    // InternalKim.g:16255:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16261:3: kw= 'energy'
                    {
                    kw=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16267:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16273:3: kw= 'priority'
                    {
                    kw=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16279:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16285:3: kw= 'charge'
                    {
                    kw=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16291:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16297:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:16303:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:16309:3: kw= 'angle'
                    {
                    kw=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:16315:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:16321:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:16327:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:16336:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:16336:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:16337:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:16343:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16349:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:16350:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:16350:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt332=4;
            switch ( input.LA(1) ) {
            case 245:
                {
                alt332=1;
                }
                break;
            case 246:
                {
                alt332=2;
                }
                break;
            case 174:
                {
                alt332=3;
                }
                break;
            case 247:
                {
                alt332=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 332, 0, input);

                throw nvae;
            }

            switch (alt332) {
                case 1 :
                    // InternalKim.g:16351:3: kw= 'thing'
                    {
                    kw=(Token)match(input,245,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16357:3: kw= 'process'
                    {
                    kw=(Token)match(input,246,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16363:3: kw= 'agent'
                    {
                    kw=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16369:3: kw= 'event'
                    {
                    kw=(Token)match(input,247,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:16378:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:16378:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:16379:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:16385:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16391:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:16392:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:16392:2: (kw= 'functional' | kw= 'structural' )
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==248) ) {
                alt333=1;
            }
            else if ( (LA333_0==249) ) {
                alt333=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;
            }
            switch (alt333) {
                case 1 :
                    // InternalKim.g:16393:3: kw= 'functional'
                    {
                    kw=(Token)match(input,248,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16399:3: kw= 'structural'
                    {
                    kw=(Token)match(input,249,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleDependencyObservableSemantics"
    // InternalKim.g:16408:1: entryRuleDependencyObservableSemantics returns [EObject current=null] : iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF ;
    public final EObject entryRuleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16412:2: (iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF )
            // InternalKim.g:16413:2: iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependencyObservableSemantics"


    // $ANTLR start "ruleDependencyObservableSemantics"
    // InternalKim.g:16422:1: ruleDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_optional_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16431:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:16432:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:16432:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:16433:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:16433:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt334=2;
            alt334 = dfa334.predict(input);
            switch (alt334) {
                case 1 :
                    // InternalKim.g:16434:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16434:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16435:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16435:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16436:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,27,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16458:3: ( (lv_generic_2_0= 'any' ) )?
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==118) ) {
                alt335=1;
            }
            switch (alt335) {
                case 1 :
                    // InternalKim.g:16459:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16459:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16460:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16472:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16473:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16473:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16474:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16491:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:16492:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:16492:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:16493:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16496:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:16497:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:16497:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop341:
            do {
                int alt341=7;
                alt341 = dfa341.predict(input);
                switch (alt341) {
            	case 1 :
            	    // InternalKim.g:16498:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16498:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16499:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16499:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16500:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16503:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16503:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16503:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16503:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16511:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16512:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16512:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16513:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16536:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16536:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16537:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16537:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16538:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16541:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16541:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16541:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt337=2;
            	    int LA337_0 = input.LA(1);

            	    if ( (LA337_0==54) ) {
            	        alt337=1;
            	    }
            	    else if ( (LA337_0==119) ) {
            	        alt337=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 337, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt337) {
            	        case 1 :
            	            // InternalKim.g:16541:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16541:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16542:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,54,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16546:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt336=2;
            	            int LA336_0 = input.LA(1);

            	            if ( (LA336_0==EOF||LA336_0==RULE_LOWERCASE_ID||(LA336_0>=RULE_CAMELCASE_ID && LA336_0<=RULE_INT)||LA336_0==RULE_BACKCASE_ID||LA336_0==RULE_OPTION_KEY||LA336_0==22||LA336_0==29||(LA336_0>=33 && LA336_0<=35)||LA336_0==37||(LA336_0>=39 && LA336_0<=40)||(LA336_0>=42 && LA336_0<=43)||LA336_0==45||LA336_0==48||LA336_0==54||(LA336_0>=60 && LA336_0<=62)||(LA336_0>=68 && LA336_0<=73)||(LA336_0>=82 && LA336_0<=94)||LA336_0==113||(LA336_0>=119 && LA336_0<=122)||(LA336_0>=124 && LA336_0<=127)||(LA336_0>=251 && LA336_0<=252)||LA336_0==259) ) {
            	                alt336=1;
            	            }
            	            else if ( (LA336_0==RULE_UPPERCASE_ID) ) {
            	                int LA336_2 = input.LA(2);

            	                if ( (LA336_2==EOF||LA336_2==RULE_INT||LA336_2==RULE_OPTION_KEY||LA336_2==22||LA336_2==29||(LA336_2>=33 && LA336_2<=35)||LA336_2==37||LA336_2==39||(LA336_2>=42 && LA336_2<=43)||LA336_2==45||LA336_2==48||LA336_2==54||(LA336_2>=60 && LA336_2<=62)||(LA336_2>=68 && LA336_2<=73)||(LA336_2>=82 && LA336_2<=94)||LA336_2==113||(LA336_2>=119 && LA336_2<=122)||(LA336_2>=124 && LA336_2<=127)||(LA336_2>=251 && LA336_2<=252)||LA336_2==259) ) {
            	                    alt336=1;
            	                }
            	                else if ( (LA336_2==250) ) {
            	                    alt336=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 336, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 336, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt336) {
            	                case 1 :
            	                    // InternalKim.g:16547:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16547:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16548:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16548:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16549:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16567:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16567:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16568:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16568:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16569:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16589:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16589:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16590:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,119,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16594:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16595:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16595:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16596:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16620:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16620:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16621:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16621:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16622:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16625:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16625:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16625:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16625:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16625:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16626:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16626:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16627:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16648:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16649:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16649:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16650:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16673:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16673:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16674:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16674:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16675:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16678:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16678:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16678:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16678:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16678:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16679:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16679:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16680:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16697:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop338:
            	    do {
            	        int alt338=2;
            	        alt338 = dfa338.predict(input);
            	        switch (alt338) {
            	    	case 1 :
            	    	    // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16699:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop338;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:16722:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:16722:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    // InternalKim.g:16723:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:16723:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    // InternalKim.g:16724:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:16727:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    // InternalKim.g:16727:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16727:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    int alt339=2;
            	    int LA339_0 = input.LA(1);

            	    if ( (LA339_0==120) ) {
            	        alt339=1;
            	    }
            	    else if ( (LA339_0==121) ) {
            	        alt339=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 339, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt339) {
            	        case 1 :
            	            // InternalKim.g:16727:20: ( (lv_optional_18_0= 'optional' ) )
            	            {
            	            // InternalKim.g:16727:20: ( (lv_optional_18_0= 'optional' ) )
            	            // InternalKim.g:16728:10: (lv_optional_18_0= 'optional' )
            	            {
            	            // InternalKim.g:16728:10: (lv_optional_18_0= 'optional' )
            	            // InternalKim.g:16729:11: lv_optional_18_0= 'optional'
            	            {
            	            lv_optional_18_0=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_18_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16742:9: otherlv_19= 'required'
            	            {
            	            otherlv_19=(Token)match(input,121,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:16752:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16752:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:16753:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:16753:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:16754:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:16757:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:16757:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16757:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:16757:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,122,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:16761:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:16762:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:16762:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:16763:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:16763:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt340=2;
            	    int LA340_0 = input.LA(1);

            	    if ( (LA340_0==RULE_LOWERCASE_ID) ) {
            	        alt340=1;
            	    }
            	    else if ( (LA340_0==RULE_STRING) ) {
            	        alt340=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 340, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt340) {
            	        case 1 :
            	            // InternalKim.g:16764:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16779:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop341;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependencyObservableSemantics"


    // $ANTLR start "entryRuleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16816:1: entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null] : iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF ;
    public final EObject entryRuleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlternativeDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16820:2: (iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF )
            // InternalKim.g:16821:2: iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlternativeDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAlternativeDependencyObservableSemantics"


    // $ANTLR start "ruleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16830:1: ruleAlternativeDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) ;
    public final EObject ruleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        Token lv_condition_19_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16839:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) )
            // InternalKim.g:16840:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            {
            // InternalKim.g:16840:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            // InternalKim.g:16841:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            {
            // InternalKim.g:16841:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt342=2;
            alt342 = dfa342.predict(input);
            switch (alt342) {
                case 1 :
                    // InternalKim.g:16842:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16842:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16843:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16843:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16844:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,27,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16866:3: ( (lv_generic_2_0= 'any' ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==118) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // InternalKim.g:16867:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16867:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16868:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16880:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16881:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16881:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16882:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_191);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16899:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) )
            // InternalKim.g:16900:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            {
            // InternalKim.g:16900:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            // InternalKim.g:16901:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16904:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            // InternalKim.g:16905:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            {
            // InternalKim.g:16905:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            loop347:
            do {
                int alt347=5;
                alt347 = dfa347.predict(input);
                switch (alt347) {
            	case 1 :
            	    // InternalKim.g:16906:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16906:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16907:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16907:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16908:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16911:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16911:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16911:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16911:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16919:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16920:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16920:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16921:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_191);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16944:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16944:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16945:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16945:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16946:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16949:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16949:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16949:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt345=2;
            	    int LA345_0 = input.LA(1);

            	    if ( (LA345_0==54) ) {
            	        alt345=1;
            	    }
            	    else if ( (LA345_0==119) ) {
            	        alt345=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 345, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt345) {
            	        case 1 :
            	            // InternalKim.g:16949:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16949:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16950:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,54,FOLLOW_192); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16954:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt344=2;
            	            int LA344_0 = input.LA(1);

            	            if ( (LA344_0==EOF||LA344_0==RULE_LOWERCASE_ID||(LA344_0>=RULE_CAMELCASE_ID && LA344_0<=RULE_INT)||LA344_0==RULE_BACKCASE_ID||LA344_0==29||LA344_0==37||(LA344_0>=40 && LA344_0<=41)||LA344_0==45||LA344_0==48||LA344_0==50||LA344_0==54||LA344_0==61||(LA344_0>=82 && LA344_0<=94)||LA344_0==113||LA344_0==119||(LA344_0>=124 && LA344_0<=127)||(LA344_0>=251 && LA344_0<=252)||LA344_0==259) ) {
            	                alt344=1;
            	            }
            	            else if ( (LA344_0==RULE_UPPERCASE_ID) ) {
            	                int LA344_2 = input.LA(2);

            	                if ( (LA344_2==EOF||LA344_2==RULE_INT||LA344_2==29||LA344_2==37||LA344_2==41||LA344_2==45||LA344_2==48||LA344_2==50||LA344_2==54||LA344_2==61||(LA344_2>=82 && LA344_2<=94)||LA344_2==113||LA344_2==119||(LA344_2>=124 && LA344_2<=127)||(LA344_2>=251 && LA344_2<=252)||LA344_2==259) ) {
            	                    alt344=1;
            	                }
            	                else if ( (LA344_2==250) ) {
            	                    alt344=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 344, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 344, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt344) {
            	                case 1 :
            	                    // InternalKim.g:16955:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16955:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16956:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16956:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16957:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_191);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16975:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16975:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16976:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16976:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16977:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_191);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16997:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16997:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16998:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,119,FOLLOW_193); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:17002:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:17003:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:17003:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:17004:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_191);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:17028:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:17028:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:17029:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:17029:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:17030:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:17033:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:17033:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17033:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:17033:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:17033:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:17034:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:17034:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:17035:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:17056:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:17057:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:17057:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:17058:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_191);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:17081:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:17081:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:17082:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:17082:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:17083:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:17086:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:17086:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17086:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:17086:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:17086:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:17087:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:17087:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:17088:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_191);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:17105:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop346:
            	    do {
            	        int alt346=2;
            	        alt346 = dfa346.predict(input);
            	        switch (alt346) {
            	    	case 1 :
            	    	    // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:17107:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_191);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop346;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }

            // InternalKim.g:17137:3: (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==50) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // InternalKim.g:17138:4: otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) )
                    {
                    otherlv_18=(Token)match(input,50,FOLLOW_194); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalKim.g:17142:4: ( (lv_condition_19_0= RULE_EXPR ) )
                    // InternalKim.g:17143:5: (lv_condition_19_0= RULE_EXPR )
                    {
                    // InternalKim.g:17143:5: (lv_condition_19_0= RULE_EXPR )
                    // InternalKim.g:17144:6: lv_condition_19_0= RULE_EXPR
                    {
                    lv_condition_19_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"condition",
                      							lv_condition_19_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAlternativeDependencyObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:17168:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:17168:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:17169:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:17175:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17181:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) )
            // InternalKim.g:17182:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            {
            // InternalKim.g:17182:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            // InternalKim.g:17183:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            {
            // InternalKim.g:17183:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:17184:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:17184:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:17185:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_195);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,122,FOLLOW_196); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:17206:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            // InternalKim.g:17207:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            {
            // InternalKim.g:17207:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            // InternalKim.g:17208:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            {
            // InternalKim.g:17208:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            int alt349=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt349=1;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt349=2;
                }
                break;
            case RULE_STRING:
                {
                alt349=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;
            }

            switch (alt349) {
                case 1 :
                    // InternalKim.g:17209:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17224:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17239:6: lv_name_2_3= RULE_STRING
                    {
                    lv_name_2_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_3,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:17260:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:17260:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:17261:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:17267:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:17273:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:17274:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:17274:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt350=6;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt350=1;
                }
                break;
            case 85:
                {
                alt350=2;
                }
                break;
            case 48:
                {
                alt350=3;
                }
                break;
            case 90:
                {
                alt350=4;
                }
                break;
            case 84:
                {
                alt350=5;
                }
                break;
            case 83:
                {
                alt350=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 350, 0, input);

                throw nvae;
            }

            switch (alt350) {
                case 1 :
                    // InternalKim.g:17275:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:17275:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:17276:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:17276:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:17277:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", lv_gt_0_0 != null, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17290:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:17290:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:17291:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:17291:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:17292:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", lv_lt_1_0 != null, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:17305:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:17305:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:17306:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:17306:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:17307:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", lv_eq_2_0 != null, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:17320:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:17320:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:17321:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:17321:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:17322:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", lv_ne_3_0 != null, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:17335:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:17335:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:17336:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:17336:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:17337:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", lv_le_4_0 != null, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:17350:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:17350:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:17351:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:17351:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:17352:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", lv_ge_5_0 != null, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:17368:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:17368:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:17369:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:17375:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        Token lv_id_0_4=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unit_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17381:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) )
            // InternalKim.g:17382:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            {
            // InternalKim.g:17382:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( ((LA352_0>=RULE_LOWERCASE_ID && LA352_0<=RULE_UPPERCASE_ID)||LA352_0==RULE_CAMELCASE_ID||LA352_0==RULE_BACKCASE_ID) ) {
                alt352=1;
            }
            else if ( (LA352_0==40) ) {
                alt352=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 352, 0, input);

                throw nvae;
            }
            switch (alt352) {
                case 1 :
                    // InternalKim.g:17383:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:17383:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:17384:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:17384:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    // InternalKim.g:17385:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:17385:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    int alt351=4;
                    switch ( input.LA(1) ) {
                    case RULE_CAMELCASE_ID:
                        {
                        alt351=1;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                        {
                        alt351=2;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt351=3;
                        }
                        break;
                    case RULE_BACKCASE_ID:
                        {
                        alt351=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 351, 0, input);

                        throw nvae;
                    }

                    switch (alt351) {
                        case 1 :
                            // InternalKim.g:17386:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17401:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:17416:6: lv_id_0_3= RULE_UPPERCASE_ID
                            {
                            lv_id_0_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:17431:6: lv_id_0_4= RULE_BACKCASE_ID
                            {
                            lv_id_0_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_4,
                              							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17449:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    {
                    // InternalKim.g:17449:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    // InternalKim.g:17450:4: otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,40,FOLLOW_197); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:17454:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:17455:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:17455:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:17456:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:17482:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:17482:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:17483:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:17489:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17495:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17496:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17496:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17497:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17497:3: ()
            // InternalKim.g:17498:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:17507:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt353=2;
            alt353 = dfa353.predict(input);
            switch (alt353) {
                case 1 :
                    // InternalKim.g:17508:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:17508:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:17509:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_198);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17526:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==45) ) {
                    int LA354_2 = input.LA(2);

                    if ( ((LA354_2>=RULE_LOWERCASE_ID && LA354_2<=RULE_UPPERCASE_ID)||LA354_2==RULE_CAMELCASE_ID||LA354_2==RULE_BACKCASE_ID||LA354_2==40) ) {
                        alt354=1;
                    }


                }
                else if ( (LA354_0==113||LA354_0==259) ) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    // InternalKim.g:17527:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17527:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:17528:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:17534:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:17535:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:17535:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:17536:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_199);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:17554:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:17555:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17555:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:17556:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_198);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:17578:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:17578:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:17579:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:17585:1: ruleCurrency returns [EObject current=null] : ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token otherlv_3=null;
        EObject lv_units_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17591:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17592:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17592:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17593:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17593:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:17594:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:17594:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:17595:5: lv_id_0_0= RULE_UPPERCASE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_200); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCurrencyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            // InternalKim.g:17611:3: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
            // InternalKim.g:17612:4: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
            {
            otherlv_1=(Token)match(input,250,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
              			
            }
            // InternalKim.g:17616:4: ( (lv_year_2_0= RULE_INT ) )
            // InternalKim.g:17617:5: (lv_year_2_0= RULE_INT )
            {
            // InternalKim.g:17617:5: (lv_year_2_0= RULE_INT )
            // InternalKim.g:17618:6: lv_year_2_0= RULE_INT
            {
            lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_201); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCurrencyRule());
              						}
              						setWithLastConsumed(
              							current,
              							"year",
              							lv_year_2_0,
              							"org.eclipse.xtext.common.Terminals.INT");
              					
            }

            }


            }


            }

            // InternalKim.g:17635:3: ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==113) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // InternalKim.g:17636:4: ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17636:4: ( ( '/' )=>otherlv_3= '/' )
            	    // InternalKim.g:17637:5: ( '/' )=>otherlv_3= '/'
            	    {
            	    otherlv_3=(Token)match(input,113,FOLLOW_199); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:17643:4: ( (lv_units_4_0= ruleUnitElement ) )
            	    // InternalKim.g:17644:5: (lv_units_4_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17644:5: (lv_units_4_0= ruleUnitElement )
            	    // InternalKim.g:17645:6: lv_units_4_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_201);
            	    lv_units_4_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_4_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:17667:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:17667:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:17668:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:17674:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_long_3_0=null;
        Token lv_decimal_4_0=null;
        Token lv_decimalPart_5_0=null;
        Token lv_exponential_6_1=null;
        Token lv_exponential_6_2=null;
        Token otherlv_7=null;
        Token lv_expNegative_8_0=null;
        Token lv_exp_9_0=null;


        	enterRule();

        try {
            // InternalKim.g:17680:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:17681:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:17681:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            // InternalKim.g:17682:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:17682:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt356=3;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==251) ) {
                alt356=1;
            }
            else if ( (LA356_0==252) ) {
                alt356=2;
            }
            switch (alt356) {
                case 1 :
                    // InternalKim.g:17683:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,251,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17688:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:17688:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:17689:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:17689:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:17690:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,252,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", lv_negative_1_0 != null, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17703:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:17704:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:17708:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:17709:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_202); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17725:3: ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==253) && (synpred680_InternalKim())) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // InternalKim.g:17726:4: ( ( 'l' ) )=> (lv_long_3_0= 'l' )
                    {
                    // InternalKim.g:17730:4: (lv_long_3_0= 'l' )
                    // InternalKim.g:17731:5: lv_long_3_0= 'l'
                    {
                    lv_long_3_0=(Token)match(input,253,FOLLOW_203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNumberRule());
                      					}
                      					setWithLastConsumed(current, "long", lv_long_3_0 != null, "l");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17743:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )?
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==114) ) {
                int LA358_1 = input.LA(2);

                if ( (LA358_1==RULE_INT) ) {
                    int LA358_3 = input.LA(3);

                    if ( (synpred681_InternalKim()) ) {
                        alt358=1;
                    }
                }
            }
            switch (alt358) {
                case 1 :
                    // InternalKim.g:17744:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17757:4: ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    // InternalKim.g:17758:5: ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) )
                    {
                    // InternalKim.g:17758:5: ( (lv_decimal_4_0= '.' ) )
                    // InternalKim.g:17759:6: (lv_decimal_4_0= '.' )
                    {
                    // InternalKim.g:17759:6: (lv_decimal_4_0= '.' )
                    // InternalKim.g:17760:7: lv_decimal_4_0= '.'
                    {
                    lv_decimal_4_0=(Token)match(input,114,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", lv_decimal_4_0 != null, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:17772:5: ( (lv_decimalPart_5_0= RULE_INT ) )
                    // InternalKim.g:17773:6: (lv_decimalPart_5_0= RULE_INT )
                    {
                    // InternalKim.g:17773:6: (lv_decimalPart_5_0= RULE_INT )
                    // InternalKim.g:17774:7: lv_decimalPart_5_0= RULE_INT
                    {
                    lv_decimalPart_5_0=(Token)match(input,RULE_INT,FOLLOW_204); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_5_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17792:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==254) && (synpred685_InternalKim())) {
                alt361=1;
            }
            else if ( (LA361_0==255) && (synpred685_InternalKim())) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // InternalKim.g:17793:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17819:4: ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    // InternalKim.g:17820:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) )
                    {
                    // InternalKim.g:17820:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) )
                    // InternalKim.g:17821:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    {
                    // InternalKim.g:17821:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    // InternalKim.g:17822:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    {
                    // InternalKim.g:17822:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    int alt359=2;
                    int LA359_0 = input.LA(1);

                    if ( (LA359_0==254) ) {
                        alt359=1;
                    }
                    else if ( (LA359_0==255) ) {
                        alt359=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 359, 0, input);

                        throw nvae;
                    }
                    switch (alt359) {
                        case 1 :
                            // InternalKim.g:17823:8: lv_exponential_6_1= 'e'
                            {
                            lv_exponential_6_1=(Token)match(input,254,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", lv_exponential_6_1 != null, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17834:8: lv_exponential_6_2= 'E'
                            {
                            lv_exponential_6_2=(Token)match(input,255,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", lv_exponential_6_2 != null, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:17847:5: (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )?
                    int alt360=3;
                    int LA360_0 = input.LA(1);

                    if ( (LA360_0==251) ) {
                        alt360=1;
                    }
                    else if ( (LA360_0==252) ) {
                        alt360=2;
                    }
                    switch (alt360) {
                        case 1 :
                            // InternalKim.g:17848:6: otherlv_7= '+'
                            {
                            otherlv_7=(Token)match(input,251,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17853:6: ( (lv_expNegative_8_0= '-' ) )
                            {
                            // InternalKim.g:17853:6: ( (lv_expNegative_8_0= '-' ) )
                            // InternalKim.g:17854:7: (lv_expNegative_8_0= '-' )
                            {
                            // InternalKim.g:17854:7: (lv_expNegative_8_0= '-' )
                            // InternalKim.g:17855:8: lv_expNegative_8_0= '-'
                            {
                            lv_expNegative_8_0=(Token)match(input,252,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", lv_expNegative_8_0 != null, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:17868:5: ( (lv_exp_9_0= RULE_INT ) )
                    // InternalKim.g:17869:6: (lv_exp_9_0= RULE_INT )
                    {
                    // InternalKim.g:17869:6: (lv_exp_9_0= RULE_INT )
                    // InternalKim.g:17870:7: lv_exp_9_0= RULE_INT
                    {
                    lv_exp_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleQuantity"
    // InternalKim.g:17892:1: entryRuleQuantity returns [EObject current=null] : iv_ruleQuantity= ruleQuantity EOF ;
    public final EObject entryRuleQuantity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantity = null;


        try {
            // InternalKim.g:17892:49: (iv_ruleQuantity= ruleQuantity EOF )
            // InternalKim.g:17893:2: iv_ruleQuantity= ruleQuantity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantity=ruleQuantity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantity"


    // $ANTLR start "ruleQuantity"
    // InternalKim.g:17899:1: ruleQuantity returns [EObject current=null] : ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) ;
    public final EObject ruleQuantity() throws RecognitionException {
        EObject current = null;

        Token lv_over_1_0=null;
        Token otherlv_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_unit_3_0 = null;

        EObject lv_currency_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17905:2: ( ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) )
            // InternalKim.g:17906:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            {
            // InternalKim.g:17906:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            // InternalKim.g:17907:3: ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            {
            // InternalKim.g:17907:3: ( (lv_value_0_0= ruleNumber ) )
            // InternalKim.g:17908:4: (lv_value_0_0= ruleNumber )
            {
            // InternalKim.g:17908:4: (lv_value_0_0= ruleNumber )
            // InternalKim.g:17909:5: lv_value_0_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_205);
            lv_value_0_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuantityRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.integratedmodelling.kim.Kim.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:17926:3: ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' )
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==113) ) {
                alt362=1;
            }
            else if ( (LA362_0==114) ) {
                alt362=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 362, 0, input);

                throw nvae;
            }
            switch (alt362) {
                case 1 :
                    // InternalKim.g:17927:4: ( (lv_over_1_0= '/' ) )
                    {
                    // InternalKim.g:17927:4: ( (lv_over_1_0= '/' ) )
                    // InternalKim.g:17928:5: (lv_over_1_0= '/' )
                    {
                    // InternalKim.g:17928:5: (lv_over_1_0= '/' )
                    // InternalKim.g:17929:6: lv_over_1_0= '/'
                    {
                    lv_over_1_0=(Token)match(input,113,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantityRule());
                      						}
                      						setWithLastConsumed(current, "over", lv_over_1_0 != null, "/");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17942:4: otherlv_2= '.'
                    {
                    otherlv_2=(Token)match(input,114,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17947:3: ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==EOF||LA363_0==RULE_LOWERCASE_ID||(LA363_0>=RULE_STRING && LA363_0<=RULE_BACKCASE_ID)||(LA363_0>=RULE_TEMPLATE_VAR && LA363_0<=RULE_OPTION_KEY)||LA363_0==22||LA363_0==27||(LA363_0>=29 && LA363_0<=35)||LA363_0==37||(LA363_0>=39 && LA363_0<=43)||LA363_0==45||LA363_0==48||(LA363_0>=50 && LA363_0<=51)||(LA363_0>=54 && LA363_0<=58)||(LA363_0>=60 && LA363_0<=62)||(LA363_0>=68 && LA363_0<=73)||LA363_0==75||(LA363_0>=82 && LA363_0<=94)||LA363_0==110||LA363_0==113||(LA363_0>=117 && LA363_0<=127)||(LA363_0>=137 && LA363_0<=138)||(LA363_0>=145 && LA363_0<=147)||(LA363_0>=149 && LA363_0<=154)||(LA363_0>=156 && LA363_0<=167)||LA363_0==216||(LA363_0>=251 && LA363_0<=252)||LA363_0==259) ) {
                alt363=1;
            }
            else if ( (LA363_0==RULE_UPPERCASE_ID) ) {
                int LA363_2 = input.LA(2);

                if ( (LA363_2==EOF||(LA363_2>=RULE_LOWERCASE_ID && LA363_2<=RULE_UPPERCASE_PATH)||(LA363_2>=RULE_TEMPLATE_VAR && LA363_2<=RULE_OPTION_KEY)||LA363_2==22||LA363_2==27||(LA363_2>=29 && LA363_2<=35)||LA363_2==37||(LA363_2>=39 && LA363_2<=43)||LA363_2==45||LA363_2==48||(LA363_2>=50 && LA363_2<=51)||(LA363_2>=54 && LA363_2<=58)||(LA363_2>=60 && LA363_2<=62)||(LA363_2>=68 && LA363_2<=73)||LA363_2==75||(LA363_2>=82 && LA363_2<=94)||(LA363_2>=110 && LA363_2<=111)||(LA363_2>=113 && LA363_2<=114)||(LA363_2>=117 && LA363_2<=127)||(LA363_2>=137 && LA363_2<=138)||(LA363_2>=145 && LA363_2<=147)||(LA363_2>=149 && LA363_2<=154)||(LA363_2>=156 && LA363_2<=167)||LA363_2==216||(LA363_2>=251 && LA363_2<=252)||LA363_2==259) ) {
                    alt363=1;
                }
                else if ( (LA363_2==250) ) {
                    alt363=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 363, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }
            switch (alt363) {
                case 1 :
                    // InternalKim.g:17948:4: ( (lv_unit_3_0= ruleUnit ) )
                    {
                    // InternalKim.g:17948:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:17949:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:17949:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:17950:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17968:4: ( (lv_currency_4_0= ruleCurrency ) )
                    {
                    // InternalKim.g:17968:4: ( (lv_currency_4_0= ruleCurrency ) )
                    // InternalKim.g:17969:5: (lv_currency_4_0= ruleCurrency )
                    {
                    // InternalKim.g:17969:5: (lv_currency_4_0= ruleCurrency )
                    // InternalKim.g:17970:6: lv_currency_4_0= ruleCurrency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_currency_4_0=ruleCurrency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"currency",
                      							lv_currency_4_0,
                      							"org.integratedmodelling.kim.Kim.Currency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantity"


    // $ANTLR start "entryRuleDate"
    // InternalKim.g:17992:1: entryRuleDate returns [EObject current=null] : iv_ruleDate= ruleDate EOF ;
    public final EObject entryRuleDate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDate = null;


        try {
            // InternalKim.g:17992:45: (iv_ruleDate= ruleDate EOF )
            // InternalKim.g:17993:2: iv_ruleDate= ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDate=ruleDate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalKim.g:17999:1: ruleDate returns [EObject current=null] : ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) ;
    public final EObject ruleDate() throws RecognitionException {
        EObject current = null;

        Token lv_year_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_bc_3_0=null;
        Token otherlv_4=null;
        Token lv_month_5_0=null;
        Token otherlv_6=null;
        Token lv_day_7_0=null;
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;


        	enterRule();

        try {
            // InternalKim.g:18005:2: ( ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) )
            // InternalKim.g:18006:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            {
            // InternalKim.g:18006:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            // InternalKim.g:18007:3: ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            {
            // InternalKim.g:18007:3: ( (lv_year_0_0= RULE_INT ) )
            // InternalKim.g:18008:4: (lv_year_0_0= RULE_INT )
            {
            // InternalKim.g:18008:4: (lv_year_0_0= RULE_INT )
            // InternalKim.g:18009:5: lv_year_0_0= RULE_INT
            {
            lv_year_0_0=(Token)match(input,RULE_INT,FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"year",
              						lv_year_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:18025:3: (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )?
            int alt364=4;
            switch ( input.LA(1) ) {
                case 256:
                    {
                    alt364=1;
                    }
                    break;
                case 257:
                    {
                    alt364=2;
                    }
                    break;
                case 258:
                    {
                    alt364=3;
                    }
                    break;
            }

            switch (alt364) {
                case 1 :
                    // InternalKim.g:18026:4: otherlv_1= 'AD'
                    {
                    otherlv_1=(Token)match(input,256,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18031:4: otherlv_2= 'CE'
                    {
                    otherlv_2=(Token)match(input,257,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18036:4: ( (lv_bc_3_0= 'BC' ) )
                    {
                    // InternalKim.g:18036:4: ( (lv_bc_3_0= 'BC' ) )
                    // InternalKim.g:18037:5: (lv_bc_3_0= 'BC' )
                    {
                    // InternalKim.g:18037:5: (lv_bc_3_0= 'BC' )
                    // InternalKim.g:18038:6: lv_bc_3_0= 'BC'
                    {
                    lv_bc_3_0=(Token)match(input,258,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(current, "bc", lv_bc_3_0 != null, "BC");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,252,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
              		
            }
            // InternalKim.g:18055:3: ( (lv_month_5_0= RULE_INT ) )
            // InternalKim.g:18056:4: (lv_month_5_0= RULE_INT )
            {
            // InternalKim.g:18056:4: (lv_month_5_0= RULE_INT )
            // InternalKim.g:18057:5: lv_month_5_0= RULE_INT
            {
            lv_month_5_0=(Token)match(input,RULE_INT,FOLLOW_207); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"month",
              						lv_month_5_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,252,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
              		
            }
            // InternalKim.g:18077:3: ( (lv_day_7_0= RULE_INT ) )
            // InternalKim.g:18078:4: (lv_day_7_0= RULE_INT )
            {
            // InternalKim.g:18078:4: (lv_day_7_0= RULE_INT )
            // InternalKim.g:18079:5: lv_day_7_0= RULE_INT
            {
            lv_day_7_0=(Token)match(input,RULE_INT,FOLLOW_208); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"day",
              						lv_day_7_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:18095:3: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            int alt367=2;
            int LA367_0 = input.LA(1);

            if ( (LA367_0==RULE_INT) ) {
                int LA367_1 = input.LA(2);

                if ( (LA367_1==111) ) {
                    int LA367_3 = input.LA(3);

                    if ( (LA367_3==RULE_INT) ) {
                        int LA367_4 = input.LA(4);

                        if ( (synpred696_InternalKim()) ) {
                            alt367=1;
                        }
                    }
                }
            }
            switch (alt367) {
                case 1 :
                    // InternalKim.g:18096:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    {
                    // InternalKim.g:18096:4: ( (lv_hour_8_0= RULE_INT ) )
                    // InternalKim.g:18097:5: (lv_hour_8_0= RULE_INT )
                    {
                    // InternalKim.g:18097:5: (lv_hour_8_0= RULE_INT )
                    // InternalKim.g:18098:6: lv_hour_8_0= RULE_INT
                    {
                    lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"hour",
                      							lv_hour_8_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,111,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
                      			
                    }
                    // InternalKim.g:18118:4: ( (lv_min_10_0= RULE_INT ) )
                    // InternalKim.g:18119:5: (lv_min_10_0= RULE_INT )
                    {
                    // InternalKim.g:18119:5: (lv_min_10_0= RULE_INT )
                    // InternalKim.g:18120:6: lv_min_10_0= RULE_INT
                    {
                    lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_209); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_10_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    // InternalKim.g:18136:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    int alt366=2;
                    int LA366_0 = input.LA(1);

                    if ( (LA366_0==111) ) {
                        alt366=1;
                    }
                    switch (alt366) {
                        case 1 :
                            // InternalKim.g:18137:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            {
                            otherlv_11=(Token)match(input,111,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
                              				
                            }
                            // InternalKim.g:18141:5: ( (lv_sec_12_0= RULE_INT ) )
                            // InternalKim.g:18142:6: (lv_sec_12_0= RULE_INT )
                            {
                            // InternalKim.g:18142:6: (lv_sec_12_0= RULE_INT )
                            // InternalKim.g:18143:7: lv_sec_12_0= RULE_INT
                            {
                            lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDateRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"sec",
                              								lv_sec_12_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }

                            // InternalKim.g:18159:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            int alt365=2;
                            int LA365_0 = input.LA(1);

                            if ( (LA365_0==114) ) {
                                alt365=1;
                            }
                            switch (alt365) {
                                case 1 :
                                    // InternalKim.g:18160:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                                    {
                                    otherlv_13=(Token)match(input,114,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
                                      					
                                    }
                                    // InternalKim.g:18164:6: ( (lv_ms_14_0= RULE_INT ) )
                                    // InternalKim.g:18165:7: (lv_ms_14_0= RULE_INT )
                                    {
                                    // InternalKim.g:18165:7: (lv_ms_14_0= RULE_INT )
                                    // InternalKim.g:18166:8: lv_ms_14_0= RULE_INT
                                    {
                                    lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDateRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"ms",
                                      									lv_ms_14_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:18189:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:18189:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:18190:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:18196:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_UPPERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;


        	enterRule();

        try {
            // InternalKim.g:18202:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:18203:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:18203:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:18204:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:18204:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt368=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt368=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt368=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt368=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 368, 0, input);

                throw nvae;
            }

            switch (alt368) {
                case 1 :
                    // InternalKim.g:18205:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_210); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18213:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_210); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18221:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_210); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18229:3: (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop370:
            do {
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==114) ) {
                    alt370=1;
                }


                switch (alt370) {
            	case 1 :
            	    // InternalKim.g:18230:4: kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,114,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:18235:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt369=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt369=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt369=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt369=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 369, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt369) {
            	        case 1 :
            	            // InternalKim.g:18236:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_210); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18244:5: this_UPPERCASE_ID_5= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_5=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_210); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:18252:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_210); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:18265:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:18265:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:18266:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:18272:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_UPPERCASE_ID_6=null;
        Token this_LOWERCASE_DASHID_7=null;


        	enterRule();

        try {
            // InternalKim.g:18278:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:18279:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:18279:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:18280:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:18280:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt371=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt371=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt371=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt371=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;
            }

            switch (alt371) {
                case 1 :
                    // InternalKim.g:18281:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18289:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18297:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18305:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            loop374:
            do {
                int alt374=2;
                int LA374_0 = input.LA(1);

                if ( ((LA374_0>=113 && LA374_0<=114)) ) {
                    alt374=1;
                }


                switch (alt374) {
            	case 1 :
            	    // InternalKim.g:18306:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:18306:4: (kw= '.' | kw= '/' )
            	    int alt372=2;
            	    int LA372_0 = input.LA(1);

            	    if ( (LA372_0==114) ) {
            	        alt372=1;
            	    }
            	    else if ( (LA372_0==113) ) {
            	        alt372=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 372, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt372) {
            	        case 1 :
            	            // InternalKim.g:18307:5: kw= '.'
            	            {
            	            kw=(Token)match(input,114,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18313:5: kw= '/'
            	            {
            	            kw=(Token)match(input,113,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:18319:4: (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    int alt373=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt373=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt373=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt373=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 373, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt373) {
            	        case 1 :
            	            // InternalKim.g:18320:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_211); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18328:5: this_UPPERCASE_ID_6= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_6=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_211); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:18336:5: this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_7=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_211); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_7);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop374;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:18349:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:18349:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:18350:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:18356:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18362:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:18363:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:18363:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:18364:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,111,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRuleAuthorityId"
    // InternalKim.g:18390:1: entryRuleAuthorityId returns [String current=null] : iv_ruleAuthorityId= ruleAuthorityId EOF ;
    public final String entryRuleAuthorityId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAuthorityId = null;


        try {
            // InternalKim.g:18390:51: (iv_ruleAuthorityId= ruleAuthorityId EOF )
            // InternalKim.g:18391:2: iv_ruleAuthorityId= ruleAuthorityId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAuthorityIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAuthorityId=ruleAuthorityId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAuthorityId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAuthorityId"


    // $ANTLR start "ruleAuthorityId"
    // InternalKim.g:18397:1: ruleAuthorityId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment ) ;
    public final AntlrDatatypeRuleToken ruleAuthorityId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_UPPERCASE_PATH_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_UPPERCASE_ID_4=null;
        Token this_INT_5=null;
        Token this_STRING_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_UPPERCASE_ID_9=null;
        Token this_INT_10=null;
        Token this_STRING_11=null;
        AntlrDatatypeRuleToken this_WellFormedUrnIdWithFragment_12 = null;



        	enterRule();

        try {
            // InternalKim.g:18403:2: ( ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment ) )
            // InternalKim.g:18404:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )
            {
            // InternalKim.g:18404:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )
            int alt379=2;
            alt379 = dfa379.predict(input);
            switch (alt379) {
                case 1 :
                    // InternalKim.g:18405:3: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* )
                    {
                    // InternalKim.g:18405:3: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* )
                    // InternalKim.g:18406:4: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )*
                    {
                    // InternalKim.g:18406:4: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID )
                    int alt375=2;
                    int LA375_0 = input.LA(1);

                    if ( (LA375_0==RULE_UPPERCASE_PATH) ) {
                        alt375=1;
                    }
                    else if ( (LA375_0==RULE_UPPERCASE_ID) ) {
                        alt375=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 375, 0, input);

                        throw nvae;
                    }
                    switch (alt375) {
                        case 1 :
                            // InternalKim.g:18407:5: this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH
                            {
                            this_UPPERCASE_PATH_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_PATH_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_PATH_0, grammarAccess.getAuthorityIdAccess().getUPPERCASE_PATHTerminalRuleCall_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18415:5: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                            {
                            this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_ID_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_0_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,111,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalKim.g:18428:4: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING )
                    int alt376=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt376=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt376=2;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt376=3;
                        }
                        break;
                    case RULE_STRING:
                        {
                        alt376=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 376, 0, input);

                        throw nvae;
                    }

                    switch (alt376) {
                        case 1 :
                            // InternalKim.g:18429:5: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                            {
                            this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_ID_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18437:5: this_UPPERCASE_ID_4= RULE_UPPERCASE_ID
                            {
                            this_UPPERCASE_ID_4=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_ID_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_ID_4, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:18445:5: this_INT_5= RULE_INT
                            {
                            this_INT_5=(Token)match(input,RULE_INT,FOLLOW_210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_5);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_5, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_2_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:18453:5: this_STRING_6= RULE_STRING
                            {
                            this_STRING_6=(Token)match(input,RULE_STRING,FOLLOW_210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_STRING_6);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_STRING_6, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_2_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:18461:4: (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )*
                    loop378:
                    do {
                        int alt378=2;
                        int LA378_0 = input.LA(1);

                        if ( (LA378_0==114) ) {
                            alt378=1;
                        }


                        switch (alt378) {
                    	case 1 :
                    	    // InternalKim.g:18462:5: kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING )
                    	    {
                    	    kw=(Token)match(input,114,FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getFullStopKeyword_0_3_0());
                    	      				
                    	    }
                    	    // InternalKim.g:18467:5: (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING )
                    	    int alt377=4;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_LOWERCASE_ID:
                    	        {
                    	        alt377=1;
                    	        }
                    	        break;
                    	    case RULE_UPPERCASE_ID:
                    	        {
                    	        alt377=2;
                    	        }
                    	        break;
                    	    case RULE_INT:
                    	        {
                    	        alt377=3;
                    	        }
                    	        break;
                    	    case RULE_STRING:
                    	        {
                    	        alt377=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 377, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt377) {
                    	        case 1 :
                    	            // InternalKim.g:18468:6: this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    	            {
                    	            this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_210); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_LOWERCASE_ID_8);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_3_1_0());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:18476:6: this_UPPERCASE_ID_9= RULE_UPPERCASE_ID
                    	            {
                    	            this_UPPERCASE_ID_9=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_210); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UPPERCASE_ID_9);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_UPPERCASE_ID_9, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_3_1_1());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalKim.g:18484:6: this_INT_10= RULE_INT
                    	            {
                    	            this_INT_10=(Token)match(input,RULE_INT,FOLLOW_210); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_INT_10);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_INT_10, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_3_1_2());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalKim.g:18492:6: this_STRING_11= RULE_STRING
                    	            {
                    	            this_STRING_11=(Token)match(input,RULE_STRING,FOLLOW_210); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_STRING_11);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_STRING_11, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_3_1_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop378;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18503:3: this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAuthorityIdAccess().getWellFormedUrnIdWithFragmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WellFormedUrnIdWithFragment_12=ruleWellFormedUrnIdWithFragment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_WellFormedUrnIdWithFragment_12);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAuthorityId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:18517:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:18517:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:18518:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:18524:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_BACKCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18530:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:18531:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:18531:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:18532:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:18532:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==RULE_LOWERCASE_ID) ) {
                int LA380_1 = input.LA(2);

                if ( (synpred717_InternalKim()) ) {
                    alt380=1;
                }
                else if ( (true) ) {
                    alt380=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 380, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA380_0==RULE_UPPERCASE_ID||LA380_0==RULE_LOWERCASE_DASHID) ) {
                alt380=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 380, 0, input);

                throw nvae;
            }
            switch (alt380) {
                case 1 :
                    // InternalKim.g:18533:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_88);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18544:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,111,FOLLOW_212); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:18557:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            int alt381=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt381=1;
                }
                break;
            case RULE_BACKCASE_ID:
                {
                alt381=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt381=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 381, 0, input);

                throw nvae;
            }

            switch (alt381) {
                case 1 :
                    // InternalKim.g:18558:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18566:4: this_BACKCASE_ID_4= RULE_BACKCASE_ID
                    {
                    this_BACKCASE_ID_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BACKCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18574:4: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:18586:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:18586:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:18587:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:18593:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:18599:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:18600:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:18600:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:18601:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_213); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:18608:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==114) ) {
                alt383=1;
            }
            switch (alt383) {
                case 1 :
                    // InternalKim.g:18609:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,114,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_213); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:18621:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt382=2;
                    int LA382_0 = input.LA(1);

                    if ( (LA382_0==114) ) {
                        alt382=1;
                    }
                    switch (alt382) {
                        case 1 :
                            // InternalKim.g:18622:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,114,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:18636:3: (kw= '-' )?
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==252) ) {
                alt384=1;
            }
            switch (alt384) {
                case 1 :
                    // InternalKim.g:18637:4: kw= '-'
                    {
                    kw=(Token)match(input,252,FOLLOW_215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18643:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt385=3;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==RULE_LOWERCASE_ID) ) {
                int LA385_1 = input.LA(2);

                if ( (synpred723_InternalKim()) ) {
                    alt385=1;
                }
            }
            else if ( (LA385_0==RULE_UPPERCASE_ID) ) {
                int LA385_2 = input.LA(2);

                if ( (synpred724_InternalKim()) ) {
                    alt385=2;
                }
            }
            switch (alt385) {
                case 1 :
                    // InternalKim.g:18644:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18652:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:18664:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:18670:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:18671:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:18671:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt386=3;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt386=1;
                }
                break;
            case 259:
                {
                alt386=2;
                }
                break;
            case 45:
                {
                alt386=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 386, 0, input);

                throw nvae;
            }

            switch (alt386) {
                case 1 :
                    // InternalKim.g:18672:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:18672:3: (enumLiteral_0= '/' )
                    // InternalKim.g:18673:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18680:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:18680:3: (enumLiteral_1= '^' )
                    // InternalKim.g:18681:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,259,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:18688:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:18688:3: (enumLiteral_2= '*' )
                    // InternalKim.g:18689:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        {
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        int alt388=2;
        int LA388_0 = input.LA(1);

        if ( (LA388_0==24) ) {
            alt388=1;
        }
        switch (alt388) {
            case 1 :
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                {
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                {
                lv_projectPrivate_4_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        {
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        // InternalKim.g:416:11: lv_private_5_0= 'private'
        {
        lv_private_5_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred13_InternalKim
    public final void synpred13_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        loop390:
        do {
            int alt390=3;
            int LA390_0 = input.LA(1);

            if ( LA390_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt390=1;
            }
            else if ( LA390_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt390=2;
            }
            else if ( LA390_0 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt390=2;
            }


            switch (alt390) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,23,FOLLOW_216); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        	    {
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        	    int alt389=2;
        	    int LA389_0 = input.LA(1);

        	    if ( (LA389_0==24) ) {
        	        alt389=1;
        	    }
        	    switch (alt389) {
        	        case 1 :
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            {
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
        	            {
        	            lv_projectPrivate_4_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    {
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    // InternalKim.g:416:11: lv_private_5_0= 'private'
        	    {
        	    lv_private_5_0=(Token)match(input,25,FOLLOW_216); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop390;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalKim

    // $ANTLR start synpred20_InternalKim
    public final void synpred20_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:694:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_40);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop392:
        do {
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==29) ) {
                alt392=1;
            }


            switch (alt392) {
        	case 1 :
        	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,29,FOLLOW_14); if (state.failed) return ;
        	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop392;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred20_InternalKim

    // $ANTLR start synpred22_InternalKim
    public final void synpred22_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_5_0 = null;


        // InternalKim.g:761:5: ( ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_concept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalKim

    // $ANTLR start synpred24_InternalKim
    public final void synpred24_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;


        // InternalKim.g:693:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
        {
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
        int alt395=4;
        alt395 = dfa395.predict(input);
        switch (alt395) {
            case 1 :
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_13);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop393:
                do {
                    int alt393=2;
                    int LA393_0 = input.LA(1);

                    if ( (LA393_0==29) ) {
                        alt393=1;
                    }


                    switch (alt393) {
                	case 1 :
                	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,29,FOLLOW_14); if (state.failed) return ;
                	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_13);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop393;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                {
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                {
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_number_4_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                {
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_concept_5_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt394=2;
                int LA394_0 = input.LA(1);

                if ( (LA394_0==30) ) {
                    alt394=1;
                }
                else if ( (LA394_0==31) ) {
                    alt394=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 394, 0, input);

                    throw nvae;
                }
                switch (alt394) {
                    case 1 :
                        // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,30,FOLLOW_11); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,31,FOLLOW_11); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;

        }

        otherlv_7=(Token)match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_InternalKim

    // $ANTLR start synpred61_InternalKim
    public final void synpred61_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1806:5: ( 'to' )
        // InternalKim.g:1806:6: 'to'
        {
        match(input,38,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_InternalKim

    // $ANTLR start synpred65_InternalKim
    public final void synpred65_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1764:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1767:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_43);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1784:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt413=3;
        int LA413_0 = input.LA(1);

        if ( (LA413_0==52) ) {
            alt413=1;
        }
        else if ( (LA413_0==53) ) {
            alt413=2;
        }
        switch (alt413) {
            case 1 :
                // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1787:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,52,FOLLOW_25); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1800:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,53,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1805:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1806:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;

        }

        // InternalKim.g:1812:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1813:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1817:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1818:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_45);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1835:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt414=3;
        int LA414_0 = input.LA(1);

        if ( (LA414_0==52) ) {
            alt414=1;
        }
        else if ( (LA414_0==53) ) {
            alt414=2;
        }
        switch (alt414) {
            case 1 :
                // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1838:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1851:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalKim

    // $ANTLR start synpred66_InternalKim
    public final void synpred66_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1858:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1860:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalKim

    // $ANTLR start synpred69_InternalKim
    public final void synpred69_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1923:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1925:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalKim

    // $ANTLR start synpred72_InternalKim
    public final void synpred72_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1943:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1944:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,40,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:1948:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1950:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1967:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop415:
        do {
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==29) ) {
                alt415=1;
            }


            switch (alt415) {
        	case 1 :
        	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1969:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1975:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1977:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop415;
            }
        } while (true);

        otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2164:5: ( 'to' )
        // InternalKim.g:2164:6: 'to'
        {
        match(input,38,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred86_InternalKim
    public final void synpred86_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_11_0 = null;


        // InternalKim.g:2255:3: ( ( (lv_concept_11_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
        {
        // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
        // InternalKim.g:2257:5: lv_concept_11_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_11_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalKim

    // $ANTLR start synpred87_InternalKim
    public final void synpred87_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;

        // InternalKim.g:2278:6: (lv_id_12_1= RULE_LOWERCASE_ID )
        // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
        {
        lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalKim

    // $ANTLR start synpred88_InternalKim
    public final void synpred88_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;
        AntlrDatatypeRuleToken lv_id_12_2 = null;


        // InternalKim.g:2275:3: ( ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) )
        // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        {
        // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        {
        // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        {
        // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        int alt419=2;
        int LA419_0 = input.LA(1);

        if ( (LA419_0==RULE_LOWERCASE_ID) ) {
            int LA419_1 = input.LA(2);

            if ( (LA419_1==111||LA419_1==114) ) {
                alt419=2;
            }
            else if ( (LA419_1==EOF) ) {
                alt419=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 419, 1, input);

                throw nvae;
            }
        }
        else if ( (LA419_0==RULE_UPPERCASE_ID||LA419_0==RULE_LOWERCASE_DASHID) ) {
            alt419=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 419, 0, input);

            throw nvae;
        }
        switch (alt419) {
            case 1 :
                // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
                {
                lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2293:6: lv_id_12_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_12_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred88_InternalKim

    // $ANTLR start synpred91_InternalKim
    public final void synpred91_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:2404:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:2404:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred91_InternalKim

    // $ANTLR start synpred95_InternalKim
    public final void synpred95_InternalKim_fragment() throws RecognitionException {   
        EObject lv_table_2_1 = null;


        // InternalKim.g:2509:6: (lv_table_2_1= ruleTable )
        // InternalKim.g:2509:6: lv_table_2_1= ruleTable
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_table_2_1=ruleTable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalKim

    // $ANTLR start synpred110_InternalKim
    public final void synpred110_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3034:5: ( 'to' )
        // InternalKim.g:3034:6: 'to'
        {
        match(input,38,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalKim

    // $ANTLR start synpred130_InternalKim
    public final void synpred130_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;


        // InternalKim.g:3411:5: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )
        // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        {
        // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) )
        // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
        {
        // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
        // InternalKim.g:3413:7: lv_actions_5_0= ruleAction
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
          						
        }
        pushFollow(FOLLOW_40);
        lv_actions_5_0=ruleAction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:3430:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        loop426:
        do {
            int alt426=2;
            int LA426_0 = input.LA(1);

            if ( (LA426_0==29) ) {
                alt426=1;
            }


            switch (alt426) {
        	case 1 :
        	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
        	    {
        	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' )
        	    // InternalKim.g:3432:7: ( ',' )=>otherlv_6= ','
        	    {
        	    otherlv_6=(Token)match(input,29,FOLLOW_56); if (state.failed) return ;

        	    }

        	    // InternalKim.g:3438:6: ( (lv_actions_7_0= ruleAction ) )
        	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
        	    {
        	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
        	    // InternalKim.g:3440:8: lv_actions_7_0= ruleAction
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
        	      							
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_actions_7_0=ruleAction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop426;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred130_InternalKim

    // $ANTLR start synpred141_InternalKim
    public final void synpred141_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3688:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3690:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalKim

    // $ANTLR start synpred164_InternalKim
    public final void synpred164_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:4184:5: ( ( ruleValue ) )
        // InternalKim.g:4184:6: ( ruleValue )
        {
        // InternalKim.g:4184:6: ( ruleValue )
        // InternalKim.g:4185:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred164_InternalKim

    // $ANTLR start synpred168_InternalKim
    public final void synpred168_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:4308:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:4310:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred168_InternalKim

    // $ANTLR start synpred175_InternalKim
    public final void synpred175_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:4405:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt456=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt456=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt456=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt456=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 456, 0, input);

            throw nvae;
        }

        switch (alt456) {
            case 1 :
                // InternalKim.g:4408:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4423:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:4438:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred175_InternalKim

    // $ANTLR start synpred185_InternalKim
    public final void synpred185_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_condition_7_0 = null;


        // InternalKim.g:4707:4: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )
        // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
        {
        // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
        int alt460=2;
        int LA460_0 = input.LA(1);

        if ( (LA460_0==50) ) {
            alt460=1;
        }
        else if ( (LA460_0==51) ) {
            alt460=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 460, 0, input);

            throw nvae;
        }
        switch (alt460) {
            case 1 :
                // InternalKim.g:4708:5: otherlv_5= 'if'
                {
                otherlv_5=(Token)match(input,50,FOLLOW_12); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                {
                // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                {
                // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                // InternalKim.g:4715:7: lv_conditionNegated_6_0= 'unless'
                {
                lv_conditionNegated_6_0=(Token)match(input,51,FOLLOW_12); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:4728:4: ( (lv_condition_7_0= ruleValue ) )
        // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
        {
        // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
        // InternalKim.g:4730:6: lv_condition_7_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred185_InternalKim

    // $ANTLR start synpred208_InternalKim
    public final void synpred208_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:4990:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4991:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4991:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:4992:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4995:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:4995:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "true");
        }
        // InternalKim.g:4995:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
        {
        // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )?
        int alt462=2;
        int LA462_0 = input.LA(1);

        if ( (LA462_0==24) ) {
            alt462=1;
        }
        switch (alt462) {
            case 1 :
                // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
                {
                // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
                // InternalKim.g:4997:11: lv_projectPrivate_3_0= 'project'
                {
                lv_projectPrivate_3_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5009:9: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
        // InternalKim.g:5011:11: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred208_InternalKim

    // $ANTLR start synpred209_InternalKim
    public final void synpred209_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_5_0=null;

        // InternalKim.g:5029:4: ( ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )
        // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        // InternalKim.g:5030:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:5030:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        // InternalKim.g:5031:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:5034:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        // InternalKim.g:5034:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "true");
        }
        // InternalKim.g:5034:19: ( (lv_inactive_5_0= 'void' ) )
        // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
        {
        // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
        // InternalKim.g:5035:10: lv_inactive_5_0= 'void'
        {
        lv_inactive_5_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred209_InternalKim

    // $ANTLR start synpred213_InternalKim
    public final void synpred213_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;

        // InternalKim.g:5139:4: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        // InternalKim.g:5140:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred213_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:5140:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        // InternalKim.g:5141:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:5144:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        // InternalKim.g:5144:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred213_InternalKim", "true");
        }
        // InternalKim.g:5144:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        // InternalKim.g:5144:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        {
        otherlv_12=(Token)match(input,33,FOLLOW_74); if (state.failed) return ;
        otherlv_13=(Token)match(input,98,FOLLOW_75); if (state.failed) return ;
        // InternalKim.g:5152:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        {
        // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        // InternalKim.g:5154:11: lv_language_14_0= RULE_UPPERCASE_ID
        {
        lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred213_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;


        // InternalKim.g:5176:4: ( ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:5177:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:5177:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:5178:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:5181:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        // InternalKim.g:5181:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        }
        // InternalKim.g:5181:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        // InternalKim.g:5181:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        {
        otherlv_15=(Token)match(input,33,FOLLOW_76); if (state.failed) return ;
        // InternalKim.g:5185:9: ( (lv_imported_16_0= ruleImport ) )
        // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
        {
        // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
        // InternalKim.g:5187:11: lv_imported_16_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_imported_16_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5204:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        loop463:
        do {
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( (LA463_0==29) ) {
                alt463=1;
            }


            switch (alt463) {
        	case 1 :
        	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
        	    {
        	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' )
        	    // InternalKim.g:5206:11: ( ',' )=>otherlv_17= ','
        	    {
        	    otherlv_17=(Token)match(input,29,FOLLOW_76); if (state.failed) return ;

        	    }

        	    // InternalKim.g:5212:10: ( (lv_imported_18_0= ruleImport ) )
        	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
        	    {
        	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
        	    // InternalKim.g:5214:12: lv_imported_18_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_imported_18_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop463;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred218_InternalKim
    public final void synpred218_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;


        // InternalKim.g:5238:4: ( ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:5239:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:5239:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:5240:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:5243:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:5243:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        }
        // InternalKim.g:5243:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        // InternalKim.g:5243:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        {
        otherlv_19=(Token)match(input,99,FOLLOW_78); if (state.failed) return ;
        // InternalKim.g:5247:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
        // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
        {
        // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
        // InternalKim.g:5249:11: lv_owlImports_20_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_owlImports_20_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5266:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        loop464:
        do {
            int alt464=2;
            int LA464_0 = input.LA(1);

            if ( (LA464_0==29) ) {
                alt464=1;
            }


            switch (alt464) {
        	case 1 :
        	    // InternalKim.g:5267:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    {
        	    otherlv_21=(Token)match(input,29,FOLLOW_78); if (state.failed) return ;
        	    // InternalKim.g:5271:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
        	    // InternalKim.g:5273:12: lv_owlImports_22_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_owlImports_22_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop464;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred218_InternalKim

    // $ANTLR start synpred221_InternalKim
    public final void synpred221_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;


        // InternalKim.g:5297:4: ( ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:5298:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:5298:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:5299:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:5302:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        // InternalKim.g:5302:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "true");
        }
        // InternalKim.g:5302:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        // InternalKim.g:5302:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        {
        otherlv_23=(Token)match(input,100,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5306:9: ( (lv_coverage_24_0= ruleFunction ) )
        // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
        {
        // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
        // InternalKim.g:5308:11: lv_coverage_24_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_coverage_24_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5325:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        loop465:
        do {
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( (LA465_0==29) ) {
                alt465=1;
            }


            switch (alt465) {
        	case 1 :
        	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' )
        	    // InternalKim.g:5327:11: ( ',' )=>otherlv_25= ','
        	    {
        	    otherlv_25=(Token)match(input,29,FOLLOW_26); if (state.failed) return ;

        	    }

        	    // InternalKim.g:5333:10: ( (lv_coverage_26_0= ruleFunction ) )
        	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
        	    {
        	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
        	    // InternalKim.g:5335:12: lv_coverage_26_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_coverage_26_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop465;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred221_InternalKim

    // $ANTLR start synpred223_InternalKim
    public final void synpred223_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        EObject lv_domainConcept_30_0 = null;


        // InternalKim.g:5359:4: ( ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5360:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:5360:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5361:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:5364:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5364:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "true");
        }
        // InternalKim.g:5364:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:5364:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,54,FOLLOW_79); if (state.failed) return ;
        otherlv_28=(Token)match(input,101,FOLLOW_80); if (state.failed) return ;
        // InternalKim.g:5372:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        int alt466=2;
        int LA466_0 = input.LA(1);

        if ( (LA466_0==102) ) {
            alt466=1;
        }
        else if ( ((LA466_0>=RULE_LOWERCASE_ID && LA466_0<=RULE_UPPERCASE_ID)||LA466_0==RULE_CAMELCASE_ID||LA466_0==RULE_LOWERCASE_DASHID||LA466_0==RULE_UPPERCASE_PATH||LA466_0==40||(LA466_0>=137 && LA466_0<=138)||(LA466_0>=146 && LA466_0<=147)||(LA466_0>=149 && LA466_0<=154)||(LA466_0>=156 && LA466_0<=167)) ) {
            alt466=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 466, 0, input);

            throw nvae;
        }
        switch (alt466) {
            case 1 :
                // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
                {
                // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
                // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
                {
                // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
                // InternalKim.g:5375:12: lv_rootDomain_29_0= 'root'
                {
                lv_rootDomain_29_0=(Token)match(input,102,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
                {
                // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
                // InternalKim.g:5390:12: lv_domainConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred223_InternalKim

    // $ANTLR start synpred225_InternalKim
    public final void synpred225_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;


        // InternalKim.g:5414:4: ( ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) )
        // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
        {
        // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
        // InternalKim.g:5415:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:5415:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
        // InternalKim.g:5416:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:5419:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
        // InternalKim.g:5419:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "true");
        }
        // InternalKim.g:5419:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
        // InternalKim.g:5419:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
        {
        otherlv_31=(Token)match(input,103,FOLLOW_81); if (state.failed) return ;
        otherlv_32=(Token)match(input,104,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5427:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
        // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
        {
        // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
        // InternalKim.g:5429:11: lv_disjointNamespaces_33_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_disjointNamespaces_33_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5446:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
        loop467:
        do {
            int alt467=2;
            int LA467_0 = input.LA(1);

            if ( (LA467_0==29) ) {
                alt467=1;
            }


            switch (alt467) {
        	case 1 :
        	    // InternalKim.g:5447:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )
        	    {
        	    otherlv_34=(Token)match(input,29,FOLLOW_26); if (state.failed) return ;
        	    // InternalKim.g:5451:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )
        	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    {
        	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    // InternalKim.g:5453:12: lv_disjointNamespaces_35_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_disjointNamespaces_35_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop467;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred225_InternalKim

    // $ANTLR start synpred226_InternalKim
    public final void synpred226_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_version_37_0 = null;


        // InternalKim.g:5477:4: ( ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:5478:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:5478:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:5479:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:5482:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:5482:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "true");
        }
        // InternalKim.g:5482:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        // InternalKim.g:5482:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
        {
        otherlv_36=(Token)match(input,105,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:5486:9: ( (lv_version_37_0= ruleVersionNumber ) )
        // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
        {
        // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
        // InternalKim.g:5488:11: lv_version_37_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_37_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred226_InternalKim

    // $ANTLR start synpred229_InternalKim
    public final void synpred229_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;


        // InternalKim.g:5522:9: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        }
        // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "true");
        }
        // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        {
        otherlv_39=(Token)match(input,106,FOLLOW_139); if (state.failed) return ;
        // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        int alt470=2;
        int LA470_0 = input.LA(1);

        if ( (LA470_0==107) ) {
            alt470=1;
        }
        switch (alt470) {
            case 1 :
                // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
                {
                otherlv_40=(Token)match(input,107,FOLLOW_217); if (state.failed) return ;
                // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
                loop469:
                do {
                    int alt469=2;
                    int LA469_0 = input.LA(1);

                    if ( ((LA469_0>=RULE_LOWERCASE_ID && LA469_0<=RULE_UPPERCASE_ID)||LA469_0==RULE_LOWERCASE_DASHID) ) {
                        alt469=1;
                    }


                    switch (alt469) {
                	case 1 :
                	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
                	    {
                	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
                	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_217);
                	    lv_lookupNamespace_41_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop469;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred229_InternalKim

    // $ANTLR start synpred231_InternalKim
    public final void synpred231_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;


        // InternalKim.g:5562:9: ( ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        }
        // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "true");
        }
        // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        {
        otherlv_42=(Token)match(input,108,FOLLOW_217); if (state.failed) return ;
        // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        loop471:
        do {
            int alt471=2;
            int LA471_0 = input.LA(1);

            if ( ((LA471_0>=RULE_LOWERCASE_ID && LA471_0<=RULE_UPPERCASE_ID)||LA471_0==RULE_LOWERCASE_DASHID) ) {
                alt471=1;
            }


            switch (alt471) {
        	case 1 :
        	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    {
        	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_217);
        	    lv_blacklistNamespace_43_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop471;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred231_InternalKim

    // $ANTLR start synpred232_InternalKim
    public final void synpred232_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_weights_45_0 = null;


        // InternalKim.g:5596:9: ( ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        }
        // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "true");
        }
        // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        {
        otherlv_44=(Token)match(input,33,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
        // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        {
        // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_45_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred232_InternalKim

    // $ANTLR start synpred233_InternalKim
    public final void synpred233_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;


        // InternalKim.g:5511:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:5512:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
        }
        // InternalKim.g:5512:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:5513:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
        // InternalKim.g:5516:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:5516:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        }
        // InternalKim.g:5516:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:5517:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
        // InternalKim.g:5520:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
        int cnt475=0;
        loop475:
        do {
            int alt475=4;
            int LA475_0 = input.LA(1);

            if ( LA475_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
                alt475=1;
            }
            else if ( LA475_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
                alt475=2;
            }
            else if ( LA475_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
                alt475=3;
            }


            switch (alt475) {
        	case 1 :
        	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        	    }
        	    // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        	    // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    {
        	    otherlv_39=(Token)match(input,106,FOLLOW_218); if (state.failed) return ;
        	    // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    int alt473=2;
        	    int LA473_0 = input.LA(1);

        	    if ( (LA473_0==107) ) {
        	        alt473=1;
        	    }
        	    switch (alt473) {
        	        case 1 :
        	            // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            {
        	            otherlv_40=(Token)match(input,107,FOLLOW_219); if (state.failed) return ;
        	            // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            loop472:
        	            do {
        	                int alt472=2;
        	                int LA472_0 = input.LA(1);

        	                if ( ((LA472_0>=RULE_LOWERCASE_ID && LA472_0<=RULE_UPPERCASE_ID)||LA472_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt472=1;
        	                }


        	                switch (alt472) {
        	            	case 1 :
        	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_219);
        	            	    lv_lookupNamespace_41_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop472;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        	    }
        	    // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        	    // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    {
        	    otherlv_42=(Token)match(input,108,FOLLOW_219); if (state.failed) return ;
        	    // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    loop474:
        	    do {
        	        int alt474=2;
        	        int LA474_0 = input.LA(1);

        	        if ( ((LA474_0>=RULE_LOWERCASE_ID && LA474_0<=RULE_UPPERCASE_ID)||LA474_0==RULE_LOWERCASE_DASHID) ) {
        	            alt474=1;
        	        }


        	        switch (alt474) {
        	    	case 1 :
        	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_219);
        	    	    lv_blacklistNamespace_43_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop474;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    {
        	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        	    }
        	    // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        	    // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        	    {
        	    otherlv_44=(Token)match(input,33,FOLLOW_37); if (state.failed) return ;
        	    // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
        	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        	    {
        	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        	    // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_220);
        	    lv_weights_45_0=ruleMap();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt475 >= 1 ) break loop475;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(475, input);
                    throw eee;
            }
            cnt475++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred233_InternalKim

    // $ANTLR start synpred262_InternalKim
    public final void synpred262_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_4_0=null;

        // InternalKim.g:6541:9: ( (lv_docstring_4_0= RULE_STRING ) )
        // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
        {
        // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
        // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
        {
        lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred262_InternalKim

    // $ANTLR start synpred266_InternalKim
    public final void synpred266_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;


        // InternalKim.g:6615:9: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) )
        // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        {
        // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        }
        // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "true");
        }
        // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        {
        otherlv_10=(Token)match(input,32,FOLLOW_103); if (state.failed) return ;
        // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        {
        // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
          															
        }
        pushFollow(FOLLOW_40);
        lv_states_11_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        loop484:
        do {
            int alt484=2;
            int LA484_0 = input.LA(1);

            if ( (LA484_0==29) ) {
                alt484=1;
            }


            switch (alt484) {
        	case 1 :
        	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    {
        	    otherlv_12=(Token)match(input,29,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_states_13_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop484;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred266_InternalKim

    // $ANTLR start synpred268_InternalKim
    public final void synpred268_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;


        // InternalKim.g:6674:9: ( ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )
        // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        {
        // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        }
        // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "true");
        }
        // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        {
        otherlv_14=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        {
        otherlv_15=(Token)match(input,40,FOLLOW_99); if (state.failed) return ;
        // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        {
        // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
          																
        }
        pushFollow(FOLLOW_36);
        lv_observations_16_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,41,FOLLOW_40); if (state.failed) return ;

        }

        // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        loop485:
        do {
            int alt485=2;
            int LA485_0 = input.LA(1);

            if ( (LA485_0==29) ) {
                alt485=1;
            }


            switch (alt485) {
        	case 1 :
        	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    {
        	    otherlv_18=(Token)match(input,29,FOLLOW_46); if (state.failed) return ;
        	    otherlv_19=(Token)match(input,40,FOLLOW_99); if (state.failed) return ;
        	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_36);
        	    lv_observations_20_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_21=(Token)match(input,41,FOLLOW_40); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop485;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred268_InternalKim

    // $ANTLR start synpred270_InternalKim
    public final void synpred270_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;


        // InternalKim.g:6491:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) )
        // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        {
        // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        // InternalKim.g:6492:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:6492:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        // InternalKim.g:6493:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:6496:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        // InternalKim.g:6496:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        }
        // InternalKim.g:6496:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
        {
        // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt486=2;
        alt486 = dfa486.predict(input);
        switch (alt486) {
            case 1 :
                // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:6499:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_11);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,27,FOLLOW_100); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:6521:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:6523:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_221);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6540:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt487=2;
        int LA487_0 = input.LA(1);

        if ( (LA487_0==RULE_STRING) ) {
            alt487=1;
        }
        switch (alt487) {
            case 1 :
                // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_222); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:6558:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt489=2;
        int LA489_0 = input.LA(1);

        if ( (LA489_0==116) ) {
            alt489=1;
        }
        switch (alt489) {
            case 1 :
                // InternalKim.g:6559:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,116,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:6563:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:6565:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_223);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:6582:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop488:
                do {
                    int alt488=2;
                    int LA488_0 = input.LA(1);

                    if ( (LA488_0==29) ) {
                        alt488=1;
                    }


                    switch (alt488) {
                	case 1 :
                	    // InternalKim.g:6583:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,29,FOLLOW_26); if (state.failed) return ;
                	    // InternalKim.g:6587:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:6589:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_223);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop488;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:6608:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
        // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        {
        // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        // InternalKim.g:6610:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
        // InternalKim.g:6613:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        {
        // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        loop492:
        do {
            int alt492=3;
            int LA492_0 = input.LA(1);

            if ( LA492_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
                alt492=1;
            }
            else if ( LA492_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
                alt492=2;
            }


            switch (alt492) {
        	case 1 :
        	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    {
        	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        	    }
        	    // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        	    // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        	    }
        	    // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    {
        	    otherlv_10=(Token)match(input,32,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        	    // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_223);
        	    lv_states_11_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    loop490:
        	    do {
        	        int alt490=2;
        	        int LA490_0 = input.LA(1);

        	        if ( (LA490_0==29) ) {
        	            alt490=1;
        	        }


        	        switch (alt490) {
        	    	case 1 :
        	    	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    {
        	    	    otherlv_12=(Token)match(input,29,FOLLOW_103); if (state.failed) return ;
        	    	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    {
        	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_223);
        	    	    lv_states_13_0=ruleObservableSemantics();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop490;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    {
        	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        	    }
        	    // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        	    // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        	    }
        	    // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    {
        	    otherlv_14=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        	    // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        	    // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        	    {
        	    otherlv_15=(Token)match(input,40,FOLLOW_99); if (state.failed) return ;
        	    // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_36);
        	    lv_observations_16_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_17=(Token)match(input,41,FOLLOW_223); if (state.failed) return ;

        	    }

        	    // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    loop491:
        	    do {
        	        int alt491=2;
        	        int LA491_0 = input.LA(1);

        	        if ( (LA491_0==29) ) {
        	            alt491=1;
        	        }


        	        switch (alt491) {
        	    	case 1 :
        	    	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    	    {
        	    	    otherlv_18=(Token)match(input,29,FOLLOW_46); if (state.failed) return ;
        	    	    otherlv_19=(Token)match(input,40,FOLLOW_99); if (state.failed) return ;
        	    	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    {
        	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_36);
        	    	    lv_observations_20_0=ruleObserveStatementBody();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }

        	    	    otherlv_21=(Token)match(input,41,FOLLOW_223); if (state.failed) return ;

        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop491;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop492;
            }
        } while (true);


        }


        }


        }

        // InternalKim.g:6758:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
        loop493:
        do {
            int alt493=2;
            int LA493_0 = input.LA(1);

            if ( ((LA493_0>=60 && LA493_0<=62)||(LA493_0>=68 && LA493_0<=73)) ) {
                alt493=1;
            }


            switch (alt493) {
        	case 1 :
        	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
        	    // InternalKim.g:6760:10: lv_actions_22_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_224);
        	    lv_actions_22_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop493;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred270_InternalKim

    // $ANTLR start synpred272_InternalKim
    public final void synpred272_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_accessor_24_0 = null;


        // InternalKim.g:6783:3: ( ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) )
        // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        {
        // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        // InternalKim.g:6784:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:6784:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        // InternalKim.g:6785:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:6788:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        // InternalKim.g:6788:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "true");
        }
        // InternalKim.g:6788:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        // InternalKim.g:6788:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
        {
        otherlv_23=(Token)match(input,33,FOLLOW_217); if (state.failed) return ;
        // InternalKim.g:6792:8: ( (lv_accessor_24_0= ruleFunction ) )?
        int alt494=2;
        int LA494_0 = input.LA(1);

        if ( ((LA494_0>=RULE_LOWERCASE_ID && LA494_0<=RULE_UPPERCASE_ID)||LA494_0==RULE_LOWERCASE_DASHID) ) {
            alt494=1;
        }
        switch (alt494) {
            case 1 :
                // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
                {
                // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
                // InternalKim.g:6794:10: lv_accessor_24_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
                  									
                }
                pushFollow(FOLLOW_2);
                lv_accessor_24_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred272_InternalKim

    // $ANTLR start synpred273_InternalKim
    public final void synpred273_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:6817:3: ( ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:6818:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred273_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
        }
        // InternalKim.g:6818:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        // InternalKim.g:6819:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
        // InternalKim.g:6822:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        // InternalKim.g:6822:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred273_InternalKim", "true");
        }
        // InternalKim.g:6822:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        // InternalKim.g:6822:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
        {
        otherlv_25=(Token)match(input,43,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:6826:8: ( (lv_metadata_26_0= ruleMap ) )
        // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
        {
        // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
        // InternalKim.g:6828:10: lv_metadata_26_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred273_InternalKim

    // $ANTLR start synpred274_InternalKim
    public final void synpred274_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6891:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:6893:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalKim

    // $ANTLR start synpred276_InternalKim
    public final void synpred276_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:6955:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6956:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6956:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6957:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6960:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:6960:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "true");
        }
        // InternalKim.g:6960:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:6960:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:6968:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:6970:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred276_InternalKim

    // $ANTLR start synpred280_InternalKim
    public final void synpred280_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:7051:11: ( 'per' )
        // InternalKim.g:7051:12: 'per'
        {
        match(input,119,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalKim

    // $ANTLR start synpred281_InternalKim
    public final void synpred281_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:6993:4: ( ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6994:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6994:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6995:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6998:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6998:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "true");
        }
        // InternalKim.g:6998:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt497=2;
        int LA497_0 = input.LA(1);

        if ( (LA497_0==54) ) {
            alt497=1;
        }
        else if ( (LA497_0==119) && (synpred280_InternalKim())) {
            alt497=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 497, 0, input);

            throw nvae;
        }
        switch (alt497) {
            case 1 :
                // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' )
                // InternalKim.g:7000:11: ( 'in' )=>otherlv_8= 'in'
                {
                otherlv_8=(Token)match(input,54,FOLLOW_108); if (state.failed) return ;

                }

                // InternalKim.g:7006:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt496=2;
                int LA496_0 = input.LA(1);

                if ( (LA496_0==EOF||LA496_0==RULE_LOWERCASE_ID||LA496_0==RULE_CAMELCASE_ID||LA496_0==RULE_BACKCASE_ID||LA496_0==40||LA496_0==45||LA496_0==113||LA496_0==259) ) {
                    alt496=1;
                }
                else if ( (LA496_0==RULE_UPPERCASE_ID) ) {
                    int LA496_2 = input.LA(2);

                    if ( (LA496_2==250) ) {
                        alt496=2;
                    }
                    else if ( (LA496_2==EOF||LA496_2==45||LA496_2==113||LA496_2==259) ) {
                        alt496=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 496, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 496, 0, input);

                    throw nvae;
                }
                switch (alt496) {
                    case 1 :
                        // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:7009:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:7029:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
                {
                // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' )
                // InternalKim.g:7051:11: ( 'per' )=>otherlv_11= 'per'
                {
                otherlv_11=(Token)match(input,119,FOLLOW_225); if (state.failed) return ;

                }

                // InternalKim.g:7057:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:7059:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred281_InternalKim

    // $ANTLR start synpred283_InternalKim
    public final void synpred283_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:7112:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred283_InternalKim

    // $ANTLR start synpred284_InternalKim
    public final void synpred284_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:7083:4: ( ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7084:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:7084:116: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7085:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:7088:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7088:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "true");
        }
        // InternalKim.g:7088:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:7089:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:7093:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:7094:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_226);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop498:
        do {
            int alt498=2;
            int LA498_0 = input.LA(1);

            if ( (LA498_0==48||LA498_0==61||(LA498_0>=82 && LA498_0<=94)||(LA498_0>=124 && LA498_0<=127)) ) {
                alt498=1;
            }


            switch (alt498) {
        	case 1 :
        	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_226);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop498;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred284_InternalKim

    // $ANTLR start synpred286_InternalKim
    public final void synpred286_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:7136:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:7137:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:7137:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:7138:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:7141:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:7141:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "true");
        }
        // InternalKim.g:7141:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt499=2;
        int LA499_0 = input.LA(1);

        if ( (LA499_0==120) ) {
            alt499=1;
        }
        else if ( (LA499_0==121) ) {
            alt499=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 499, 0, input);

            throw nvae;
        }
        switch (alt499) {
            case 1 :
                // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:7143:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7156:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,121,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred286_InternalKim

    // $ANTLR start synpred287_InternalKim
    public final void synpred287_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;


        // InternalKim.g:7166:4: ( ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7167:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred287_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:7167:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7168:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:7171:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        // InternalKim.g:7171:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred287_InternalKim", "true");
        }
        // InternalKim.g:7171:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        // InternalKim.g:7171:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
        {
        // InternalKim.g:7171:20: ( (lv_from_17_0= ruleNumber ) )
        // InternalKim.g:7172:10: (lv_from_17_0= ruleNumber )
        {
        // InternalKim.g:7172:10: (lv_from_17_0= ruleNumber )
        // InternalKim.g:7173:11: lv_from_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7194:9: ( (lv_to_19_0= ruleNumber ) )
        // InternalKim.g:7195:10: (lv_to_19_0= ruleNumber )
        {
        // InternalKim.g:7195:10: (lv_to_19_0= ruleNumber )
        // InternalKim.g:7196:11: lv_to_19_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_19_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred287_InternalKim

    // $ANTLR start synpred289_InternalKim
    public final void synpred289_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:7219:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7219:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7219:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7220:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred289_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:7220:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7221:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:7224:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7224:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred289_InternalKim", "true");
        }
        // InternalKim.g:7224:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:7224:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,122,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:7228:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:7229:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:7229:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:7230:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:7230:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt500=2;
        int LA500_0 = input.LA(1);

        if ( (LA500_0==RULE_LOWERCASE_ID) ) {
            alt500=1;
        }
        else if ( (LA500_0==RULE_STRING) ) {
            alt500=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 500, 0, input);

            throw nvae;
        }
        switch (alt500) {
            case 1 :
                // InternalKim.g:7231:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7246:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred289_InternalKim

    // $ANTLR start synpred299_InternalKim
    public final void synpred299_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:7461:12: ( 'per' )
        // InternalKim.g:7461:13: 'per'
        {
        match(input,119,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred299_InternalKim

    // $ANTLR start synpred300_InternalKim
    public final void synpred300_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;


        // InternalKim.g:7380:4: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) )
        // InternalKim.g:7380:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        {
        // InternalKim.g:7380:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:7381:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:7381:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:7382:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:7385:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:7385:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "true");
        }
        // InternalKim.g:7385:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        // InternalKim.g:7385:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        {
        // InternalKim.g:7385:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        int alt504=2;
        int LA504_0 = input.LA(1);

        if ( (LA504_0==54) ) {
            alt504=1;
        }
        else if ( (LA504_0==119) && (synpred299_InternalKim())) {
            alt504=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 504, 0, input);

            throw nvae;
        }
        switch (alt504) {
            case 1 :
                // InternalKim.g:7386:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                {
                // InternalKim.g:7386:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                // InternalKim.g:7387:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:7407:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                // InternalKim.g:7408:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                {
                // InternalKim.g:7408:12: ( ( 'in' )=>otherlv_5= 'in' )
                // InternalKim.g:7409:13: ( 'in' )=>otherlv_5= 'in'
                {
                otherlv_5=(Token)match(input,54,FOLLOW_108); if (state.failed) return ;

                }

                // InternalKim.g:7415:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                int alt503=2;
                int LA503_0 = input.LA(1);

                if ( (LA503_0==EOF||LA503_0==RULE_LOWERCASE_ID||LA503_0==RULE_CAMELCASE_ID||LA503_0==RULE_BACKCASE_ID||LA503_0==40||LA503_0==45||LA503_0==113||LA503_0==259) ) {
                    alt503=1;
                }
                else if ( (LA503_0==RULE_UPPERCASE_ID) ) {
                    int LA503_2 = input.LA(2);

                    if ( (LA503_2==EOF||LA503_2==45||LA503_2==113||LA503_2==259) ) {
                        alt503=1;
                    }
                    else if ( (LA503_2==250) ) {
                        alt503=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 503, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 503, 0, input);

                    throw nvae;
                }
                switch (alt503) {
                    case 1 :
                        // InternalKim.g:7416:13: ( (lv_unit_6_0= ruleUnit ) )
                        {
                        // InternalKim.g:7416:13: ( (lv_unit_6_0= ruleUnit ) )
                        // InternalKim.g:7417:14: (lv_unit_6_0= ruleUnit )
                        {
                        // InternalKim.g:7417:14: (lv_unit_6_0= ruleUnit )
                        // InternalKim.g:7418:15: lv_unit_6_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_6_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7436:13: ( (lv_currency_7_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7436:13: ( (lv_currency_7_0= ruleCurrency ) )
                        // InternalKim.g:7437:14: (lv_currency_7_0= ruleCurrency )
                        {
                        // InternalKim.g:7437:14: (lv_currency_7_0= ruleCurrency )
                        // InternalKim.g:7438:15: lv_currency_7_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_7_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7459:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                {
                // InternalKim.g:7459:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                // InternalKim.g:7460:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
                {
                // InternalKim.g:7460:11: ( ( 'per' )=>otherlv_8= 'per' )
                // InternalKim.g:7461:12: ( 'per' )=>otherlv_8= 'per'
                {
                otherlv_8=(Token)match(input,119,FOLLOW_225); if (state.failed) return ;

                }

                // InternalKim.g:7467:11: ( (lv_unit_9_0= ruleUnit ) )
                // InternalKim.g:7468:12: (lv_unit_9_0= ruleUnit )
                {
                // InternalKim.g:7468:12: (lv_unit_9_0= ruleUnit )
                // InternalKim.g:7469:13: lv_unit_9_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
                  												
                }
                pushFollow(FOLLOW_2);
                lv_unit_9_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred300_InternalKim

    // $ANTLR start synpred302_InternalKim
    public final void synpred302_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:7523:10: ( (lv_valueOperators_11_0= ruleValueOperator ) )
        // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
        {
        // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
        // InternalKim.g:7524:11: lv_valueOperators_11_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_11_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred302_InternalKim

    // $ANTLR start synpred303_InternalKim
    public final void synpred303_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:7494:4: ( ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7494:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7494:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7495:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:7495:122: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7496:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:7499:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7499:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "true");
        }
        // InternalKim.g:7499:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        // InternalKim.g:7499:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7499:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) )
        // InternalKim.g:7500:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator )
        {
        // InternalKim.g:7504:10: (lv_valueOperators_10_0= ruleValueOperator )
        // InternalKim.g:7505:11: lv_valueOperators_10_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
          										
        }
        pushFollow(FOLLOW_226);
        lv_valueOperators_10_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7522:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        loop505:
        do {
            int alt505=2;
            int LA505_0 = input.LA(1);

            if ( (LA505_0==48||LA505_0==61||(LA505_0>=82 && LA505_0<=94)||(LA505_0>=124 && LA505_0<=127)) ) {
                alt505=1;
            }


            switch (alt505) {
        	case 1 :
        	    // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7523:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    // InternalKim.g:7524:11: lv_valueOperators_11_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_226);
        	    lv_valueOperators_11_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop505;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred303_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;


        // InternalKim.g:7547:4: ( ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7547:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7547:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7548:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:7548:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7549:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:7552:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        // InternalKim.g:7552:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "true");
        }
        // InternalKim.g:7552:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        // InternalKim.g:7552:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
        {
        // InternalKim.g:7552:20: ( (lv_from_12_0= ruleNumber ) )
        // InternalKim.g:7553:10: (lv_from_12_0= ruleNumber )
        {
        // InternalKim.g:7553:10: (lv_from_12_0= ruleNumber )
        // InternalKim.g:7554:11: lv_from_12_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_12_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7575:9: ( (lv_to_14_0= ruleNumber ) )
        // InternalKim.g:7576:10: (lv_to_14_0= ruleNumber )
        {
        // InternalKim.g:7576:10: (lv_to_14_0= ruleNumber )
        // InternalKim.g:7577:11: lv_to_14_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_14_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred306_InternalKim
    public final void synpred306_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonValue_3_0 = null;


        // InternalKim.g:7673:5: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) )
        // InternalKim.g:7673:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        {
        // InternalKim.g:7673:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        // InternalKim.g:7674:6: (lv_comparisonValue_3_0= ruleNumber )
        {
        // InternalKim.g:7674:6: (lv_comparisonValue_3_0= ruleNumber )
        // InternalKim.g:7675:7: lv_comparisonValue_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonValue_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred306_InternalKim

    // $ANTLR start synpred307_InternalKim
    public final void synpred307_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonQuantity_4_0 = null;


        // InternalKim.g:7693:5: ( ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) )
        // InternalKim.g:7693:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        {
        // InternalKim.g:7693:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        // InternalKim.g:7694:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        {
        // InternalKim.g:7694:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        // InternalKim.g:7695:7: lv_comparisonQuantity_4_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonQuantity_4_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred307_InternalKim

    // $ANTLR start synpred308_InternalKim
    public final void synpred308_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonConcept_5_0 = null;


        // InternalKim.g:7713:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:7713:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:7713:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:7714:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:7714:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        // InternalKim.g:7715:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonConcept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred308_InternalKim

    // $ANTLR start synpred313_InternalKim
    public final void synpred313_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;


        // InternalKim.g:7858:4: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )
        // InternalKim.g:7858:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
        {
        // InternalKim.g:7858:4: ( (lv_value_1_0= ruleValue ) )
        // InternalKim.g:7859:5: (lv_value_1_0= ruleValue )
        {
        // InternalKim.g:7859:5: (lv_value_1_0= ruleValue )
        // InternalKim.g:7860:6: lv_value_1_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_1_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred313_InternalKim

    // $ANTLR start synpred315_InternalKim
    public final void synpred315_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;


        // InternalKim.g:7922:4: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:7922:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:7922:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:7923:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred315_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
        }
        // InternalKim.g:7923:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:7924:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
        // InternalKim.g:7927:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        // InternalKim.g:7927:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred315_InternalKim", "true");
        }
        // InternalKim.g:7927:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        // InternalKim.g:7927:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
        {
        otherlv_6=(Token)match(input,37,FOLLOW_25); if (state.failed) return ;
        otherlv_7=(Token)match(input,38,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:7935:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
        // InternalKim.g:7936:10: (lv_accordingTo_8_0= rulePropertyId )
        {
        // InternalKim.g:7936:10: (lv_accordingTo_8_0= rulePropertyId )
        // InternalKim.g:7937:11: lv_accordingTo_8_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_8_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred315_InternalKim

    // $ANTLR start synpred318_InternalKim
    public final void synpred318_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;


        // InternalKim.g:7960:4: ( ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:7960:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:7960:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:7961:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred318_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
        }
        // InternalKim.g:7961:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:7962:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
        // InternalKim.g:7965:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        // InternalKim.g:7965:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred318_InternalKim", "true");
        }
        // InternalKim.g:7965:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        int alt510=2;
        int LA510_0 = input.LA(1);

        if ( (LA510_0==54) ) {
            alt510=1;
        }
        else if ( (LA510_0==119) ) {
            alt510=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 510, 0, input);

            throw nvae;
        }
        switch (alt510) {
            case 1 :
                // InternalKim.g:7965:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:7965:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                // InternalKim.g:7966:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                {
                otherlv_9=(Token)match(input,54,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:7970:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                int alt509=2;
                int LA509_0 = input.LA(1);

                if ( (LA509_0==EOF||LA509_0==RULE_LOWERCASE_ID||LA509_0==RULE_CAMELCASE_ID||LA509_0==RULE_BACKCASE_ID||LA509_0==40||LA509_0==45||LA509_0==113||LA509_0==259) ) {
                    alt509=1;
                }
                else if ( (LA509_0==RULE_UPPERCASE_ID) ) {
                    int LA509_2 = input.LA(2);

                    if ( (LA509_2==EOF||LA509_2==45||LA509_2==113||LA509_2==259) ) {
                        alt509=1;
                    }
                    else if ( (LA509_2==250) ) {
                        alt509=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 509, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 509, 0, input);

                    throw nvae;
                }
                switch (alt509) {
                    case 1 :
                        // InternalKim.g:7971:11: ( (lv_unit_10_0= ruleUnit ) )
                        {
                        // InternalKim.g:7971:11: ( (lv_unit_10_0= ruleUnit ) )
                        // InternalKim.g:7972:12: (lv_unit_10_0= ruleUnit )
                        {
                        // InternalKim.g:7972:12: (lv_unit_10_0= ruleUnit )
                        // InternalKim.g:7973:13: lv_unit_10_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_10_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7991:11: ( (lv_currency_11_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7991:11: ( (lv_currency_11_0= ruleCurrency ) )
                        // InternalKim.g:7992:12: (lv_currency_11_0= ruleCurrency )
                        {
                        // InternalKim.g:7992:12: (lv_currency_11_0= ruleCurrency )
                        // InternalKim.g:7993:13: lv_currency_11_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_11_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8013:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                {
                // InternalKim.g:8013:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                // InternalKim.g:8014:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
                {
                otherlv_12=(Token)match(input,119,FOLLOW_225); if (state.failed) return ;
                // InternalKim.g:8018:10: ( (lv_unit_13_0= ruleUnit ) )
                // InternalKim.g:8019:11: (lv_unit_13_0= ruleUnit )
                {
                // InternalKim.g:8019:11: (lv_unit_13_0= ruleUnit )
                // InternalKim.g:8020:12: lv_unit_13_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_13_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred318_InternalKim

    // $ANTLR start synpred319_InternalKim
    public final void synpred319_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:8069:10: ( (lv_valueOperators_15_0= ruleValueOperator ) )
        // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
        {
        // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
        // InternalKim.g:8070:11: lv_valueOperators_15_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_15_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred319_InternalKim

    // $ANTLR start synpred320_InternalKim
    public final void synpred320_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:8044:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:8044:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:8044:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:8045:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred320_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
        }
        // InternalKim.g:8045:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:8046:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
        // InternalKim.g:8049:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        // InternalKim.g:8049:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred320_InternalKim", "true");
        }
        // InternalKim.g:8049:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        // InternalKim.g:8049:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        {
        // InternalKim.g:8049:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:8050:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:8050:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:8051:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
          										
        }
        pushFollow(FOLLOW_226);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:8068:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        loop511:
        do {
            int alt511=2;
            int LA511_0 = input.LA(1);

            if ( (LA511_0==48||LA511_0==61||(LA511_0>=82 && LA511_0<=94)||(LA511_0>=124 && LA511_0<=127)) ) {
                alt511=1;
            }


            switch (alt511) {
        	case 1 :
        	    // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:8069:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    // InternalKim.g:8070:11: lv_valueOperators_15_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_226);
        	    lv_valueOperators_15_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop511;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred320_InternalKim

    // $ANTLR start synpred322_InternalKim
    public final void synpred322_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_16_0=null;
        Token otherlv_17=null;

        // InternalKim.g:8093:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) )
        // InternalKim.g:8093:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        {
        // InternalKim.g:8093:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        // InternalKim.g:8094:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
        }
        // InternalKim.g:8094:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        // InternalKim.g:8095:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
        // InternalKim.g:8098:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        // InternalKim.g:8098:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "true");
        }
        // InternalKim.g:8098:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        int alt512=2;
        int LA512_0 = input.LA(1);

        if ( (LA512_0==120) ) {
            alt512=1;
        }
        else if ( (LA512_0==121) ) {
            alt512=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 512, 0, input);

            throw nvae;
        }
        switch (alt512) {
            case 1 :
                // InternalKim.g:8098:20: ( (lv_optional_16_0= 'optional' ) )
                {
                // InternalKim.g:8098:20: ( (lv_optional_16_0= 'optional' ) )
                // InternalKim.g:8099:10: (lv_optional_16_0= 'optional' )
                {
                // InternalKim.g:8099:10: (lv_optional_16_0= 'optional' )
                // InternalKim.g:8100:11: lv_optional_16_0= 'optional'
                {
                lv_optional_16_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8113:9: otherlv_17= 'required'
                {
                otherlv_17=(Token)match(input,121,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred322_InternalKim

    // $ANTLR start synpred323_InternalKim
    public final void synpred323_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;


        // InternalKim.g:8123:4: ( ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:8123:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:8123:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:8124:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred323_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
        }
        // InternalKim.g:8124:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        // InternalKim.g:8125:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
        // InternalKim.g:8128:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        // InternalKim.g:8128:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred323_InternalKim", "true");
        }
        // InternalKim.g:8128:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        // InternalKim.g:8128:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
        {
        // InternalKim.g:8128:20: ( (lv_from_18_0= ruleNumber ) )
        // InternalKim.g:8129:10: (lv_from_18_0= ruleNumber )
        {
        // InternalKim.g:8129:10: (lv_from_18_0= ruleNumber )
        // InternalKim.g:8130:11: lv_from_18_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_18_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:8151:9: ( (lv_to_20_0= ruleNumber ) )
        // InternalKim.g:8152:10: (lv_to_20_0= ruleNumber )
        {
        // InternalKim.g:8152:10: (lv_to_20_0= ruleNumber )
        // InternalKim.g:8153:11: lv_to_20_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_20_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred323_InternalKim

    // $ANTLR start synpred325_InternalKim
    public final void synpred325_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;

        // InternalKim.g:8176:4: ( ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:8176:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:8176:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:8177:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred325_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
        }
        // InternalKim.g:8177:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8178:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
        // InternalKim.g:8181:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:8181:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred325_InternalKim", "true");
        }
        // InternalKim.g:8181:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        // InternalKim.g:8181:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        {
        otherlv_21=(Token)match(input,122,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:8185:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        // InternalKim.g:8186:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        {
        // InternalKim.g:8186:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        // InternalKim.g:8187:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        {
        // InternalKim.g:8187:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        int alt513=2;
        int LA513_0 = input.LA(1);

        if ( (LA513_0==RULE_LOWERCASE_ID) ) {
            alt513=1;
        }
        else if ( (LA513_0==RULE_STRING) ) {
            alt513=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 513, 0, input);

            throw nvae;
        }
        switch (alt513) {
            case 1 :
                // InternalKim.g:8188:12: lv_name_22_1= RULE_LOWERCASE_ID
                {
                lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8203:12: lv_name_22_2= RULE_STRING
                {
                lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred325_InternalKim

    // $ANTLR start synpred327_InternalKim
    public final void synpred327_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;

        // InternalKim.g:8289:8: (lv_modelReference_1_1= RULE_LOWERCASE_ID )
        // InternalKim.g:8289:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred327_InternalKim

    // $ANTLR start synpred328_InternalKim
    public final void synpred328_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;


        // InternalKim.g:8304:8: (lv_modelReference_1_2= rulePathName )
        // InternalKim.g:8304:8: lv_modelReference_1_2= rulePathName
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
          							
        }
        pushFollow(FOLLOW_2);
        lv_modelReference_1_2=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred328_InternalKim

    // $ANTLR start synpred330_InternalKim
    public final void synpred330_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;


        // InternalKim.g:8286:5: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) )
        // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
        {
        // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
        // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
        {
        // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
        // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
        {
        // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
        int alt514=4;
        alt514 = dfa514.predict(input);
        switch (alt514) {
            case 1 :
                // InternalKim.g:8289:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                {
                lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8304:8: lv_modelReference_1_2= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_modelReference_1_2=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:8320:8: lv_modelReference_1_3= ruleUrnId
                {
                pushFollow(FOLLOW_2);
                lv_modelReference_1_3=ruleUrnId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:8336:8: lv_modelReference_1_4= RULE_STRING
                {
                lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred330_InternalKim

    // $ANTLR start synpred333_InternalKim
    public final void synpred333_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_options_3_0 = null;

        EObject lv_options_4_0 = null;


        // InternalKim.g:8285:4: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) )
        // InternalKim.g:8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )
        {
        // InternalKim.g:8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )
        int alt519=2;
        alt519 = dfa519.predict(input);
        switch (alt519) {
            case 1 :
                // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                {
                // InternalKim.g:8286:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                {
                // InternalKim.g:8287:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                {
                // InternalKim.g:8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                int alt516=4;
                alt516 = dfa516.predict(input);
                switch (alt516) {
                    case 1 :
                        // InternalKim.g:8289:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                        {
                        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:8304:8: lv_modelReference_1_2= rulePathName
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_2=rulePathName();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:8320:8: lv_modelReference_1_3= ruleUrnId
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_3=ruleUrnId();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalKim.g:8336:8: lv_modelReference_1_4= RULE_STRING
                        {
                        lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8354:5: ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? )
                {
                // InternalKim.g:8354:5: ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? )
                // InternalKim.g:8355:6: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )?
                {
                // InternalKim.g:8355:6: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                // InternalKim.g:8356:7: (lv_observable_2_0= ruleDependencyObservableSemantics )
                {
                // InternalKim.g:8356:7: (lv_observable_2_0= ruleDependencyObservableSemantics )
                // InternalKim.g:8357:8: lv_observable_2_0= ruleDependencyObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_113);
                lv_observable_2_0=ruleDependencyObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:8374:6: ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )?
                int alt518=2;
                int LA518_0 = input.LA(1);

                if ( (LA518_0==RULE_OPTION_KEY) ) {
                    alt518=1;
                }
                switch (alt518) {
                    case 1 :
                        // InternalKim.g:8375:7: ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )*
                        {
                        // InternalKim.g:8375:7: ( (lv_options_3_0= ruleOption ) )
                        // InternalKim.g:8376:8: (lv_options_3_0= ruleOption )
                        {
                        // InternalKim.g:8376:8: (lv_options_3_0= ruleOption )
                        // InternalKim.g:8377:9: lv_options_3_0= ruleOption
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_0_0());
                          								
                        }
                        pushFollow(FOLLOW_113);
                        lv_options_3_0=ruleOption();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }

                        // InternalKim.g:8394:7: ( (lv_options_4_0= ruleOption ) )*
                        loop517:
                        do {
                            int alt517=2;
                            int LA517_0 = input.LA(1);

                            if ( (LA517_0==RULE_OPTION_KEY) ) {
                                alt517=1;
                            }


                            switch (alt517) {
                        	case 1 :
                        	    // InternalKim.g:8395:8: (lv_options_4_0= ruleOption )
                        	    {
                        	    // InternalKim.g:8395:8: (lv_options_4_0= ruleOption )
                        	    // InternalKim.g:8396:9: lv_options_4_0= ruleOption
                        	    {
                        	    if ( state.backtracking==0 ) {

                        	      									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_1_0());
                        	      								
                        	    }
                        	    pushFollow(FOLLOW_113);
                        	    lv_options_4_0=ruleOption();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop517;
                            }
                        } while (true);


                        }
                        break;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred333_InternalKim

    // $ANTLR start synpred337_InternalKim
    public final void synpred337_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_optional_11_0=null;
        Token otherlv_12=null;
        EObject lv_alternativeObservables_7_0 = null;

        EObject lv_alternativeObservables_9_0 = null;


        // InternalKim.g:8424:5: ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) )
        // InternalKim.g:8424:5: ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) )
        {
        // InternalKim.g:8424:5: ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) )
        // InternalKim.g:8425:6: {...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred337_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
        }
        // InternalKim.g:8425:110: ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) )
        // InternalKim.g:8426:7: ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
        // InternalKim.g:8429:10: ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) )
        // InternalKim.g:8429:11: {...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred337_InternalKim", "true");
        }
        // InternalKim.g:8429:20: (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? )
        // InternalKim.g:8429:21: otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )?
        {
        otherlv_6=(Token)match(input,40,FOLLOW_103); if (state.failed) return ;
        // InternalKim.g:8433:10: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        // InternalKim.g:8434:11: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        {
        // InternalKim.g:8434:11: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        // InternalKim.g:8435:12: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
          											
        }
        pushFollow(FOLLOW_29);
        lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:8452:10: (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )*
        loop520:
        do {
            int alt520=2;
            int LA520_0 = input.LA(1);

            if ( (LA520_0==29) ) {
                alt520=1;
            }


            switch (alt520) {
        	case 1 :
        	    // InternalKim.g:8453:11: otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) )
        	    {
        	    otherlv_8=(Token)match(input,29,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:8457:11: ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) )
        	    // InternalKim.g:8458:12: (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics )
        	    {
        	    // InternalKim.g:8458:12: (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics )
        	    // InternalKim.g:8459:13: lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_alternativeObservables_9_0=ruleAlternativeDependencyObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop520;
            }
        } while (true);

        otherlv_10=(Token)match(input,41,FOLLOW_227); if (state.failed) return ;
        // InternalKim.g:8481:10: ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )?
        int alt521=3;
        int LA521_0 = input.LA(1);

        if ( (LA521_0==120) ) {
            alt521=1;
        }
        else if ( (LA521_0==121) ) {
            alt521=2;
        }
        switch (alt521) {
            case 1 :
                // InternalKim.g:8482:11: ( (lv_optional_11_0= 'optional' ) )
                {
                // InternalKim.g:8482:11: ( (lv_optional_11_0= 'optional' ) )
                // InternalKim.g:8483:12: (lv_optional_11_0= 'optional' )
                {
                // InternalKim.g:8483:12: (lv_optional_11_0= 'optional' )
                // InternalKim.g:8484:13: lv_optional_11_0= 'optional'
                {
                lv_optional_11_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8497:11: otherlv_12= 'required'
                {
                otherlv_12=(Token)match(input,121,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred337_InternalKim

    // $ANTLR start synpred339_InternalKim
    public final void synpred339_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token lv_name_14_1=null;
        Token lv_name_14_2=null;

        // InternalKim.g:8508:5: ( ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:8508:5: ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:8508:5: ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:8509:6: {...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred339_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
        }
        // InternalKim.g:8509:110: ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8510:7: ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
        // InternalKim.g:8513:10: ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:8513:11: {...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred339_InternalKim", "true");
        }
        // InternalKim.g:8513:20: (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) )
        // InternalKim.g:8513:21: otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) )
        {
        otherlv_13=(Token)match(input,122,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:8517:10: ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) )
        // InternalKim.g:8518:11: ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) )
        {
        // InternalKim.g:8518:11: ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) )
        // InternalKim.g:8519:12: (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING )
        {
        // InternalKim.g:8519:12: (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING )
        int alt522=2;
        int LA522_0 = input.LA(1);

        if ( (LA522_0==RULE_LOWERCASE_ID) ) {
            alt522=1;
        }
        else if ( (LA522_0==RULE_STRING) ) {
            alt522=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 522, 0, input);

            throw nvae;
        }
        switch (alt522) {
            case 1 :
                // InternalKim.g:8520:13: lv_name_14_1= RULE_LOWERCASE_ID
                {
                lv_name_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8535:13: lv_name_14_2= RULE_STRING
                {
                lv_name_14_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred339_InternalKim

    // $ANTLR start synpred340_InternalKim
    public final void synpred340_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:8600:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:8600:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:8600:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:8601:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred340_InternalKim

    // $ANTLR start synpred342_InternalKim
    public final void synpred342_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:8625:4: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) )
        // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        {
        // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8626:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:8626:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8627:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:8630:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8630:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "true");
        }
        // InternalKim.g:8630:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8631:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_2=(Token)match(input,128,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8635:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        int alt523=2;
        int LA523_0 = input.LA(1);

        if ( (LA523_0==28) ) {
            alt523=1;
        }
        switch (alt523) {
            case 1 :
                // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
                {
                // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
                // InternalKim.g:8638:13: lv_distributedOfInherency_3_0= 'each'
                {
                lv_distributedOfInherency_3_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8650:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8652:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred342_InternalKim

    // $ANTLR start synpred344_InternalKim
    public final void synpred344_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        EObject lv_motivation_7_0 = null;


        // InternalKim.g:8677:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8678:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8678:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8679:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:8682:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8682:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "true");
        }
        // InternalKim.g:8682:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8682:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_5=(Token)match(input,75,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8686:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        int alt524=2;
        int LA524_0 = input.LA(1);

        if ( (LA524_0==28) ) {
            alt524=1;
        }
        switch (alt524) {
            case 1 :
                // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
                {
                // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
                // InternalKim.g:8689:12: lv_distributedForInherency_6_0= 'each'
                {
                lv_distributedForInherency_6_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8701:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8703:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_motivation_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred344_InternalKim

    // $ANTLR start synpred345_InternalKim
    public final void synpred345_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_compresent_9_0 = null;


        // InternalKim.g:8727:4: ( ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8728:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:8728:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8729:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:8732:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8732:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "true");
        }
        // InternalKim.g:8732:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8732:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,104,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8736:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8738:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_9_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred345_InternalKim

    // $ANTLR start synpred346_InternalKim
    public final void synpred346_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_causant_12_0 = null;


        // InternalKim.g:8761:4: ( ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8762:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:8762:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8763:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:8766:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8766:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "true");
        }
        // InternalKim.g:8766:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8766:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_10=(Token)match(input,129,FOLLOW_119); if (state.failed) return ;
        otherlv_11=(Token)match(input,94,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8774:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8776:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_12_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred346_InternalKim

    // $ANTLR start synpred347_InternalKim
    public final void synpred347_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_adjacent_15_0 = null;


        // InternalKim.g:8799:4: ( ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8800:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:8800:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8801:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:8804:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8804:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "true");
        }
        // InternalKim.g:8804:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8804:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_13=(Token)match(input,130,FOLLOW_25); if (state.failed) return ;
        otherlv_14=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8812:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8814:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred347_InternalKim

    // $ANTLR start synpred348_InternalKim
    public final void synpred348_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_container_18_0 = null;


        // InternalKim.g:8837:4: ( ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8838:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:8838:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8839:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:8842:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8842:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "true");
        }
        // InternalKim.g:8842:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8842:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_16=(Token)match(input,131,FOLLOW_120); if (state.failed) return ;
        otherlv_17=(Token)match(input,54,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8850:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8852:11: lv_container_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred348_InternalKim

    // $ANTLR start synpred349_InternalKim
    public final void synpred349_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_contained_20_0 = null;


        // InternalKim.g:8875:4: ( ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8876:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:8876:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8877:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:8880:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8880:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "true");
        }
        // InternalKim.g:8880:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8880:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,132,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8884:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8886:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred349_InternalKim

    // $ANTLR start synpred350_InternalKim
    public final void synpred350_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_caused_22_0 = null;


        // InternalKim.g:8909:4: ( ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8910:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:8910:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8911:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:8914:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8914:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "true");
        }
        // InternalKim.g:8914:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8914:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,133,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8918:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8920:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred350_InternalKim

    // $ANTLR start synpred352_InternalKim
    public final void synpred352_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        EObject lv_during_25_0 = null;


        // InternalKim.g:8943:4: ( ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8944:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:8944:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8945:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:8948:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8948:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "true");
        }
        // InternalKim.g:8948:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8948:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_23=(Token)match(input,134,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:8952:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        int alt525=2;
        int LA525_0 = input.LA(1);

        if ( (LA525_0==28) ) {
            alt525=1;
        }
        switch (alt525) {
            case 1 :
                // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
                {
                // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
                // InternalKim.g:8955:12: lv_distributedTemporalInherency_24_0= 'each'
                {
                lv_distributedTemporalInherency_24_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8967:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8969:12: lv_during_25_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_during_25_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred352_InternalKim

    // $ANTLR start synpred354_InternalKim
    public final void synpred354_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        EObject lv_context_28_0 = null;


        // InternalKim.g:8993:4: ( ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8994:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred354_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:8994:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8995:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:8998:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8998:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred354_InternalKim", "true");
        }
        // InternalKim.g:8998:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8998:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_26=(Token)match(input,135,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:9002:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        int alt526=2;
        int LA526_0 = input.LA(1);

        if ( (LA526_0==28) ) {
            alt526=1;
        }
        switch (alt526) {
            case 1 :
                // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
                {
                // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
                // InternalKim.g:9005:12: lv_distributedWithinInherency_27_0= 'each'
                {
                lv_distributedWithinInherency_27_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:9017:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9019:12: lv_context_28_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_context_28_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred354_InternalKim

    // $ANTLR start synpred355_InternalKim
    public final void synpred355_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:9043:4: ( ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9044:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        }
        // InternalKim.g:9044:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9045:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        // InternalKim.g:9048:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9048:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "true");
        }
        // InternalKim.g:9048:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9048:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_29=(Token)match(input,136,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:9052:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9054:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_31=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:9075:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9077:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred355_InternalKim

    // $ANTLR start synpred356_InternalKim
    public final void synpred356_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:8619:4: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:8619:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:8619:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:8620:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:8623:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop531:
        do {
            int alt531=12;
            alt531 = dfa531.predict(input);
            switch (alt531) {
        	case 1 :
        	    // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8625:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        	    // InternalKim.g:8626:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:8626:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8627:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:8630:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8630:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8630:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    // InternalKim.g:8630:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8631:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_2=(Token)match(input,128,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8635:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8636:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        	    int alt527=2;
        	    int LA527_0 = input.LA(1);

        	    if ( (LA527_0==28) ) {
        	        alt527=1;
        	    }
        	    switch (alt527) {
        	        case 1 :
        	            // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
        	            {
        	            // InternalKim.g:8637:12: (lv_distributedOfInherency_3_0= 'each' )
        	            // InternalKim.g:8638:13: lv_distributedOfInherency_3_0= 'each'
        	            {
        	            lv_distributedOfInherency_3_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8650:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8651:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8652:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8677:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8678:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:8678:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8679:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:8682:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8682:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8682:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8682:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_5=(Token)match(input,75,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8686:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8687:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        	    int alt528=2;
        	    int LA528_0 = input.LA(1);

        	    if ( (LA528_0==28) ) {
        	        alt528=1;
        	    }
        	    switch (alt528) {
        	        case 1 :
        	            // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
        	            {
        	            // InternalKim.g:8688:11: (lv_distributedForInherency_6_0= 'each' )
        	            // InternalKim.g:8689:12: lv_distributedForInherency_6_0= 'each'
        	            {
        	            lv_distributedForInherency_6_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8701:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8702:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8703:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8727:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8728:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:8728:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8729:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:8732:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8732:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8732:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8732:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,104,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8736:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8737:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8738:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8761:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8762:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:8762:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8763:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:8766:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8766:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8766:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8766:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_10=(Token)match(input,129,FOLLOW_119); if (state.failed) return ;
        	    otherlv_11=(Token)match(input,94,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8774:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8775:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8776:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_causant_12_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8799:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8800:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:8800:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8801:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:8804:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8804:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8804:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8804:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_13=(Token)match(input,130,FOLLOW_25); if (state.failed) return ;
        	    otherlv_14=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8812:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8813:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8814:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8837:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8838:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:8838:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8839:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:8842:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8842:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8842:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8842:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_16=(Token)match(input,131,FOLLOW_120); if (state.failed) return ;
        	    otherlv_17=(Token)match(input,54,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8850:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8851:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8852:11: lv_container_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_container_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8875:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8876:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:8876:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8877:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:8880:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8880:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8880:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8880:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,132,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8884:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8885:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8886:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_contained_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8909:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8910:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:8910:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8911:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:8914:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8914:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8914:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8914:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,133,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8918:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8919:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8920:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_caused_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8944:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:8944:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8945:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:8948:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8948:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8948:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8948:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_23=(Token)match(input,134,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:8952:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8953:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        	    int alt529=2;
        	    int LA529_0 = input.LA(1);

        	    if ( (LA529_0==28) ) {
        	        alt529=1;
        	    }
        	    switch (alt529) {
        	        case 1 :
        	            // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            {
        	            // InternalKim.g:8954:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            // InternalKim.g:8955:12: lv_distributedTemporalInherency_24_0= 'each'
        	            {
        	            lv_distributedTemporalInherency_24_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8967:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8968:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8969:12: lv_during_25_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_during_25_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8993:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8994:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:8994:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8995:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:8998:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8998:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:8998:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8998:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_26=(Token)match(input,135,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:9002:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:9003:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        	    int alt530=2;
        	    int LA530_0 = input.LA(1);

        	    if ( (LA530_0==28) ) {
        	        alt530=1;
        	    }
        	    switch (alt530) {
        	        case 1 :
        	            // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            {
        	            // InternalKim.g:9004:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            // InternalKim.g:9005:12: lv_distributedWithinInherency_27_0= 'each'
        	            {
        	            lv_distributedWithinInherency_27_0=(Token)match(input,28,FOLLOW_117); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:9017:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9018:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9019:12: lv_context_28_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_context_28_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 11 :
        	    // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9043:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9044:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        	    }
        	    // InternalKim.g:9044:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9045:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        	    // InternalKim.g:9048:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9048:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        	    }
        	    // InternalKim.g:9048:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9048:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_29=(Token)match(input,136,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:9052:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9053:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9054:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_31=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:9075:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9076:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9077:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_118);
        	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop531;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred356_InternalKim

    // $ANTLR start synpred361_InternalKim
    public final void synpred361_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        EObject lv_extends_4_0 = null;


        // InternalKim.g:9217:5: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) )
        // InternalKim.g:9217:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
        {
        // InternalKim.g:9217:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
        // InternalKim.g:9218:6: ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) )
        {
        // InternalKim.g:9218:6: ( (lv_extends_4_0= ruleConcept ) )
        // InternalKim.g:9219:7: (lv_extends_4_0= ruleConcept )
        {
        // InternalKim.g:9219:7: (lv_extends_4_0= ruleConcept )
        // InternalKim.g:9220:8: lv_extends_4_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_4_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,111,FOLLOW_121); if (state.failed) return ;
        // InternalKim.g:9241:6: ( (lv_name_6_0= 'context' ) )
        // InternalKim.g:9242:7: (lv_name_6_0= 'context' )
        {
        // InternalKim.g:9242:7: (lv_name_6_0= 'context' )
        // InternalKim.g:9243:8: lv_name_6_0= 'context'
        {
        lv_name_6_0=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred361_InternalKim

    // $ANTLR start synpred362_InternalKim
    public final void synpred362_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        EObject lv_extends_7_0 = null;


        // InternalKim.g:9257:5: ( ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) )
        // InternalKim.g:9257:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
        {
        // InternalKim.g:9257:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
        // InternalKim.g:9258:6: ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) )
        {
        // InternalKim.g:9258:6: ( (lv_extends_7_0= ruleConcept ) )
        // InternalKim.g:9259:7: (lv_extends_7_0= ruleConcept )
        {
        // InternalKim.g:9259:7: (lv_extends_7_0= ruleConcept )
        // InternalKim.g:9260:8: lv_extends_7_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_7_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_8=(Token)match(input,111,FOLLOW_123); if (state.failed) return ;
        // InternalKim.g:9281:6: ( (lv_name_9_0= 'inherent' ) )
        // InternalKim.g:9282:7: (lv_name_9_0= 'inherent' )
        {
        // InternalKim.g:9282:7: (lv_name_9_0= 'inherent' )
        // InternalKim.g:9283:8: lv_name_9_0= 'inherent'
        {
        lv_name_9_0=(Token)match(input,139,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred362_InternalKim

    // $ANTLR start synpred363_InternalKim
    public final void synpred363_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_name_12_0=null;
        EObject lv_extends_10_0 = null;


        // InternalKim.g:9297:5: ( ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) )
        // InternalKim.g:9297:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
        {
        // InternalKim.g:9297:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
        // InternalKim.g:9298:6: ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) )
        {
        // InternalKim.g:9298:6: ( (lv_extends_10_0= ruleConcept ) )
        // InternalKim.g:9299:7: (lv_extends_10_0= ruleConcept )
        {
        // InternalKim.g:9299:7: (lv_extends_10_0= ruleConcept )
        // InternalKim.g:9300:8: lv_extends_10_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_10_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,111,FOLLOW_124); if (state.failed) return ;
        // InternalKim.g:9321:6: ( (lv_name_12_0= 'compresent' ) )
        // InternalKim.g:9322:7: (lv_name_12_0= 'compresent' )
        {
        // InternalKim.g:9322:7: (lv_name_12_0= 'compresent' )
        // InternalKim.g:9323:8: lv_name_12_0= 'compresent'
        {
        lv_name_12_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred363_InternalKim

    // $ANTLR start synpred364_InternalKim
    public final void synpred364_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_name_15_0=null;
        EObject lv_extends_13_0 = null;


        // InternalKim.g:9337:5: ( ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) )
        // InternalKim.g:9337:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
        {
        // InternalKim.g:9337:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
        // InternalKim.g:9338:6: ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) )
        {
        // InternalKim.g:9338:6: ( (lv_extends_13_0= ruleConcept ) )
        // InternalKim.g:9339:7: (lv_extends_13_0= ruleConcept )
        {
        // InternalKim.g:9339:7: (lv_extends_13_0= ruleConcept )
        // InternalKim.g:9340:8: lv_extends_13_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_13_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,111,FOLLOW_125); if (state.failed) return ;
        // InternalKim.g:9361:6: ( (lv_name_15_0= 'adjacent' ) )
        // InternalKim.g:9362:7: (lv_name_15_0= 'adjacent' )
        {
        // InternalKim.g:9362:7: (lv_name_15_0= 'adjacent' )
        // InternalKim.g:9363:8: lv_name_15_0= 'adjacent'
        {
        lv_name_15_0=(Token)match(input,130,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred364_InternalKim

    // $ANTLR start synpred365_InternalKim
    public final void synpred365_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token lv_name_18_0=null;
        EObject lv_extends_16_0 = null;


        // InternalKim.g:9377:5: ( ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) )
        // InternalKim.g:9377:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
        {
        // InternalKim.g:9377:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
        // InternalKim.g:9378:6: ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) )
        {
        // InternalKim.g:9378:6: ( (lv_extends_16_0= ruleConcept ) )
        // InternalKim.g:9379:7: (lv_extends_16_0= ruleConcept )
        {
        // InternalKim.g:9379:7: (lv_extends_16_0= ruleConcept )
        // InternalKim.g:9380:8: lv_extends_16_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_16_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,111,FOLLOW_126); if (state.failed) return ;
        // InternalKim.g:9401:6: ( (lv_name_18_0= 'container' ) )
        // InternalKim.g:9402:7: (lv_name_18_0= 'container' )
        {
        // InternalKim.g:9402:7: (lv_name_18_0= 'container' )
        // InternalKim.g:9403:8: lv_name_18_0= 'container'
        {
        lv_name_18_0=(Token)match(input,141,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred365_InternalKim

    // $ANTLR start synpred366_InternalKim
    public final void synpred366_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_0=null;
        EObject lv_extends_19_0 = null;


        // InternalKim.g:9417:5: ( ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) )
        // InternalKim.g:9417:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
        {
        // InternalKim.g:9417:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
        // InternalKim.g:9418:6: ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) )
        {
        // InternalKim.g:9418:6: ( (lv_extends_19_0= ruleConcept ) )
        // InternalKim.g:9419:7: (lv_extends_19_0= ruleConcept )
        {
        // InternalKim.g:9419:7: (lv_extends_19_0= ruleConcept )
        // InternalKim.g:9420:8: lv_extends_19_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_19_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,111,FOLLOW_127); if (state.failed) return ;
        // InternalKim.g:9441:6: ( (lv_name_21_0= 'contained' ) )
        // InternalKim.g:9442:7: (lv_name_21_0= 'contained' )
        {
        // InternalKim.g:9442:7: (lv_name_21_0= 'contained' )
        // InternalKim.g:9443:8: lv_name_21_0= 'contained'
        {
        lv_name_21_0=(Token)match(input,131,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred366_InternalKim

    // $ANTLR start synpred367_InternalKim
    public final void synpred367_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token lv_name_24_0=null;
        EObject lv_extends_22_0 = null;


        // InternalKim.g:9457:5: ( ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) )
        // InternalKim.g:9457:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
        {
        // InternalKim.g:9457:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
        // InternalKim.g:9458:6: ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) )
        {
        // InternalKim.g:9458:6: ( (lv_extends_22_0= ruleConcept ) )
        // InternalKim.g:9459:7: (lv_extends_22_0= ruleConcept )
        {
        // InternalKim.g:9459:7: (lv_extends_22_0= ruleConcept )
        // InternalKim.g:9460:8: lv_extends_22_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_22_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,111,FOLLOW_128); if (state.failed) return ;
        // InternalKim.g:9481:6: ( (lv_name_24_0= 'purpose' ) )
        // InternalKim.g:9482:7: (lv_name_24_0= 'purpose' )
        {
        // InternalKim.g:9482:7: (lv_name_24_0= 'purpose' )
        // InternalKim.g:9483:8: lv_name_24_0= 'purpose'
        {
        lv_name_24_0=(Token)match(input,142,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred367_InternalKim

    // $ANTLR start synpred368_InternalKim
    public final void synpred368_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token lv_name_27_0=null;
        EObject lv_extends_25_0 = null;


        // InternalKim.g:9497:5: ( ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) )
        // InternalKim.g:9497:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
        {
        // InternalKim.g:9497:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
        // InternalKim.g:9498:6: ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) )
        {
        // InternalKim.g:9498:6: ( (lv_extends_25_0= ruleConcept ) )
        // InternalKim.g:9499:7: (lv_extends_25_0= ruleConcept )
        {
        // InternalKim.g:9499:7: (lv_extends_25_0= ruleConcept )
        // InternalKim.g:9500:8: lv_extends_25_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_25_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_26=(Token)match(input,111,FOLLOW_129); if (state.failed) return ;
        // InternalKim.g:9521:6: ( (lv_name_27_0= 'causant' ) )
        // InternalKim.g:9522:7: (lv_name_27_0= 'causant' )
        {
        // InternalKim.g:9522:7: (lv_name_27_0= 'causant' )
        // InternalKim.g:9523:8: lv_name_27_0= 'causant'
        {
        lv_name_27_0=(Token)match(input,143,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred368_InternalKim

    // $ANTLR start synpred369_InternalKim
    public final void synpred369_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token lv_name_30_0=null;
        EObject lv_extends_28_0 = null;


        // InternalKim.g:9537:5: ( ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) )
        // InternalKim.g:9537:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
        {
        // InternalKim.g:9537:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
        // InternalKim.g:9538:6: ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) )
        {
        // InternalKim.g:9538:6: ( (lv_extends_28_0= ruleConcept ) )
        // InternalKim.g:9539:7: (lv_extends_28_0= ruleConcept )
        {
        // InternalKim.g:9539:7: (lv_extends_28_0= ruleConcept )
        // InternalKim.g:9540:8: lv_extends_28_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_28_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,111,FOLLOW_130); if (state.failed) return ;
        // InternalKim.g:9561:6: ( (lv_name_30_0= 'caused' ) )
        // InternalKim.g:9562:7: (lv_name_30_0= 'caused' )
        {
        // InternalKim.g:9562:7: (lv_name_30_0= 'caused' )
        // InternalKim.g:9563:8: lv_name_30_0= 'caused'
        {
        lv_name_30_0=(Token)match(input,129,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred369_InternalKim

    // $ANTLR start synpred397_InternalKim
    public final void synpred397_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_changedFrom_32_0 = null;

        EObject lv_changedTo_34_0 = null;


        // InternalKim.g:10228:5: ( ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10228:5: ( ( 'from' )=>otherlv_31= 'from' ) ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) ) otherlv_33= 'to' ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10228:5: ( ( 'from' )=>otherlv_31= 'from' )
        // InternalKim.g:10229:6: ( 'from' )=>otherlv_31= 'from'
        {
        otherlv_31=(Token)match(input,107,FOLLOW_117); if (state.failed) return ;

        }

        // InternalKim.g:10235:5: ( (lv_changedFrom_32_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10236:6: (lv_changedFrom_32_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10236:6: (lv_changedFrom_32_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10237:7: lv_changedFrom_32_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getChangedFromSimpleConceptDeclarationParserRuleCall_7_2_1_0());
          						
        }
        pushFollow(FOLLOW_25);
        lv_changedFrom_32_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_33=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:10258:5: ( (lv_changedTo_34_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10259:6: (lv_changedTo_34_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10259:6: (lv_changedTo_34_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10260:7: lv_changedTo_34_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getChangedToSimpleConceptDeclarationParserRuleCall_7_2_3_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_changedTo_34_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred397_InternalKim

    // $ANTLR start synpred405_InternalKim
    public final void synpred405_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        EObject lv_other_54_0 = null;


        // InternalKim.g:10519:5: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10519:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10519:5: ( ( 'in' )=>otherlv_53= 'in' )
        // InternalKim.g:10520:6: ( 'in' )=>otherlv_53= 'in'
        {
        otherlv_53=(Token)match(input,54,FOLLOW_117); if (state.failed) return ;

        }

        // InternalKim.g:10526:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10527:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10527:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10528:7: lv_other_54_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_54_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred405_InternalKim

    // $ANTLR start synpred408_InternalKim
    public final void synpred408_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_58=null;
        EObject lv_other_59_0 = null;


        // InternalKim.g:10587:5: ( ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10587:5: ( ( 'in' )=>otherlv_58= 'in' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10587:5: ( ( 'in' )=>otherlv_58= 'in' )
        // InternalKim.g:10588:6: ( 'in' )=>otherlv_58= 'in'
        {
        otherlv_58=(Token)match(input,54,FOLLOW_117); if (state.failed) return ;

        }

        // InternalKim.g:10594:5: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10595:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10595:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10596:7: lv_other_59_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_59_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred408_InternalKim

    // $ANTLR start synpred414_InternalKim
    public final void synpred414_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_69=null;
        EObject lv_other_70_0 = null;


        // InternalKim.g:10735:5: ( ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10735:5: ( ( 'over' )=>otherlv_69= 'over' ) ( (lv_other_70_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10735:5: ( ( 'over' )=>otherlv_69= 'over' )
        // InternalKim.g:10736:6: ( 'over' )=>otherlv_69= 'over'
        {
        otherlv_69=(Token)match(input,61,FOLLOW_117); if (state.failed) return ;

        }

        // InternalKim.g:10742:5: ( (lv_other_70_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10743:6: (lv_other_70_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10743:6: (lv_other_70_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10744:7: lv_other_70_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_16_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_70_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred414_InternalKim

    // $ANTLR start synpred417_InternalKim
    public final void synpred417_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10892:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:10892:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:10892:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:10893:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:10893:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:10894:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,168,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:10906:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:10907:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:10907:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:10908:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred417_InternalKim

    // $ANTLR start synpred419_InternalKim
    public final void synpred419_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10957:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:10957:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:10957:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:10958:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:10958:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:10959:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:10959:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt550=2;
        int LA550_0 = input.LA(1);

        if ( (LA550_0==169) ) {
            alt550=1;
        }
        else if ( (LA550_0==170) ) {
            alt550=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 550, 0, input);

            throw nvae;
        }
        switch (alt550) {
            case 1 :
                // InternalKim.g:10960:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,169,FOLLOW_23); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10971:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,170,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:10984:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:10985:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:10985:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:10986:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred419_InternalKim

    // $ANTLR start synpred421_InternalKim
    public final void synpred421_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:11042:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:11042:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:11042:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:11043:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred421_InternalKim

    // $ANTLR start synpred431_InternalKim
    public final void synpred431_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:11357:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:11357:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:11357:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:11358:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:11358:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:11359:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:11362:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:11362:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "true");
        }
        // InternalKim.g:11362:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:11362:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:11362:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:11363:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,176,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred431_InternalKim

    // $ANTLR start synpred432_InternalKim
    public final void synpred432_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:11380:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:11380:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:11380:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:11381:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred432_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:11381:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:11382:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:11385:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:11385:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred432_InternalKim", "true");
        }
        // InternalKim.g:11385:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:11385:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:11385:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:11386:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,177,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred432_InternalKim

    // $ANTLR start synpred433_InternalKim
    public final void synpred433_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:11403:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:11403:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:11403:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:11404:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:11404:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:11405:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:11408:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:11408:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "true");
        }
        // InternalKim.g:11408:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:11408:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:11408:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:11409:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,178,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred433_InternalKim

    // $ANTLR start synpred437_InternalKim
    public final void synpred437_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11491:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:11492:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred437_InternalKim

    // $ANTLR start synpred439_InternalKim
    public final void synpred439_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11426:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )
        // InternalKim.g:11426:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        {
        // InternalKim.g:11426:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        // InternalKim.g:11427:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:11427:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        // InternalKim.g:11428:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:11431:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        // InternalKim.g:11431:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "true");
        }
        // InternalKim.g:11431:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        int alt562=3;
        switch ( input.LA(1) ) {
        case 171:
        case 172:
        case 173:
            {
            alt562=1;
            }
            break;
        case 248:
        case 249:
            {
            alt562=2;
            }
            break;
        case 179:
            {
            alt562=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 562, 0, input);

            throw nvae;
        }

        switch (alt562) {
            case 1 :
                // InternalKim.g:11431:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:11431:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:11432:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:11432:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:11433:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:11433:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt560=3;
                switch ( input.LA(1) ) {
                case 171:
                    {
                    alt560=1;
                    }
                    break;
                case 172:
                    {
                    alt560=2;
                    }
                    break;
                case 173:
                    {
                    alt560=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 560, 0, input);

                    throw nvae;
                }

                switch (alt560) {
                    case 1 :
                        // InternalKim.g:11434:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,171,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:11445:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,172,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:11456:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,173,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11470:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:11470:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:11471:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:11471:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:11472:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:11472:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:11473:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_228);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11490:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop561:
                do {
                    int alt561=2;
                    int LA561_0 = input.LA(1);

                    if ( ((LA561_0>=248 && LA561_0<=249)) ) {
                        alt561=1;
                    }


                    switch (alt561) {
                	case 1 :
                	    // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:11491:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:11492:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_228);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop561;
                    }
                } while (true);


                }


                }
                break;
            case 3 :
                // InternalKim.g:11511:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                {
                // InternalKim.g:11511:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                // InternalKim.g:11512:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                {
                // InternalKim.g:11512:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                // InternalKim.g:11513:11: lv_attributeSpecifier_8_0= 'rescaling'
                {
                lv_attributeSpecifier_8_0=(Token)match(input,179,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred439_InternalKim

    // $ANTLR start synpred448_InternalKim
    public final void synpred448_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:11815:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:11815:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:11815:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:11816:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred448_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:11816:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:11817:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:11820:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:11820:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred448_InternalKim", "true");
        }
        // InternalKim.g:11820:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:11820:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:11820:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:11821:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred448_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:11842:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:11842:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:11842:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11843:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:11843:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11844:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:11847:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11847:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "true");
        }
        // InternalKim.g:11847:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11847:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:11847:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
        // InternalKim.g:11848:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
        {
        // InternalKim.g:11848:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
        int alt568=2;
        int LA568_0 = input.LA(1);

        if ( (LA568_0==180) ) {
            alt568=1;
        }
        else if ( (LA568_0==181) ) {
            alt568=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 568, 0, input);

            throw nvae;
        }
        switch (alt568) {
            case 1 :
                // InternalKim.g:11849:11: otherlv_12= 'is'
                {
                otherlv_12=(Token)match(input,180,FOLLOW_156); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11854:11: ( (lv_alias_13_0= 'equals' ) )
                {
                // InternalKim.g:11854:11: ( (lv_alias_13_0= 'equals' ) )
                // InternalKim.g:11855:12: (lv_alias_13_0= 'equals' )
                {
                // InternalKim.g:11855:12: (lv_alias_13_0= 'equals' )
                // InternalKim.g:11856:13: lv_alias_13_0= 'equals'
                {
                lv_alias_13_0=(Token)match(input,181,FOLLOW_156); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:11869:10: ( (lv_coreConcept_14_0= 'core' ) )?
        int alt569=2;
        int LA569_0 = input.LA(1);

        if ( (LA569_0==182) ) {
            alt569=1;
        }
        switch (alt569) {
            case 1 :
                // InternalKim.g:11870:11: (lv_coreConcept_14_0= 'core' )
                {
                // InternalKim.g:11870:11: (lv_coreConcept_14_0= 'core' )
                // InternalKim.g:11871:12: lv_coreConcept_14_0= 'core'
                {
                lv_coreConcept_14_0=(Token)match(input,182,FOLLOW_157); if (state.failed) return ;

                }


                }
                break;

        }


        }

        // InternalKim.g:11884:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt572=2;
        int LA572_0 = input.LA(1);

        if ( (LA572_0==183) ) {
            alt572=1;
        }
        else if ( ((LA572_0>=RULE_LOWERCASE_ID && LA572_0<=RULE_UPPERCASE_ID)||LA572_0==RULE_CAMELCASE_ID||LA572_0==RULE_LOWERCASE_DASHID||LA572_0==RULE_UPPERCASE_PATH||LA572_0==40||(LA572_0>=137 && LA572_0<=138)||(LA572_0>=146 && LA572_0<=147)||(LA572_0>=149 && LA572_0<=154)||(LA572_0>=156 && LA572_0<=167)) ) {
            alt572=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 572, 0, input);

            throw nvae;
        }
        switch (alt572) {
            case 1 :
                // InternalKim.g:11885:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:11885:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:11886:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:11886:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:11887:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,183,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11900:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11900:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11901:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11901:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:11902:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11902:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:11903:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_229);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11920:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop571:
                do {
                    int alt571=2;
                    int LA571_0 = input.LA(1);

                    if ( (LA571_0==29||(LA571_0>=168 && LA571_0<=169)) ) {
                        alt571=1;
                    }


                    switch (alt571) {
                	case 1 :
                	    // InternalKim.g:11921:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:11921:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:11922:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:11922:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:11923:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:11923:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt570=3;
                	    switch ( input.LA(1) ) {
                	    case 29:
                	        {
                	        alt570=1;
                	        }
                	        break;
                	    case 168:
                	        {
                	        alt570=2;
                	        }
                	        break;
                	    case 169:
                	        {
                	        alt570=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 570, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt570) {
                	        case 1 :
                	            // InternalKim.g:11924:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:11935:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,168,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:11946:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,169,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:11959:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11960:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11960:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:11961:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_229);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop571;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred458_InternalKim
    public final void synpred458_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_definedAuthority_21_1=null;
        Token lv_definedAuthority_21_2=null;
        EObject lv_upperConcept_22_0 = null;


        // InternalKim.g:11987:4: ( ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:11987:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:11987:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:11988:5: {...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:11988:117: ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:11989:6: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:11992:9: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
        // InternalKim.g:11992:10: {...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "true");
        }
        // InternalKim.g:11992:19: (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
        // InternalKim.g:11992:20: otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
        {
        otherlv_19=(Token)match(input,184,FOLLOW_159); if (state.failed) return ;
        // InternalKim.g:11996:9: ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
        int alt575=2;
        int LA575_0 = input.LA(1);

        if ( (LA575_0==185) ) {
            alt575=1;
        }
        else if ( ((LA575_0>=RULE_LOWERCASE_ID && LA575_0<=RULE_UPPERCASE_ID)||LA575_0==RULE_CAMELCASE_ID||LA575_0==RULE_LOWERCASE_DASHID||LA575_0==RULE_UPPERCASE_PATH||LA575_0==40||(LA575_0>=137 && LA575_0<=138)||(LA575_0>=146 && LA575_0<=147)||(LA575_0>=149 && LA575_0<=154)||(LA575_0>=156 && LA575_0<=167)) ) {
            alt575=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 575, 0, input);

            throw nvae;
        }
        switch (alt575) {
            case 1 :
                // InternalKim.g:11997:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
                {
                // InternalKim.g:11997:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
                // InternalKim.g:11998:11: otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
                {
                otherlv_20=(Token)match(input,185,FOLLOW_135); if (state.failed) return ;
                // InternalKim.g:12002:11: ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:12003:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
                {
                // InternalKim.g:12003:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:12004:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:12004:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
                int alt574=2;
                int LA574_0 = input.LA(1);

                if ( (LA574_0==RULE_UPPERCASE_ID) ) {
                    alt574=1;
                }
                else if ( (LA574_0==RULE_UPPERCASE_PATH) ) {
                    alt574=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 574, 0, input);

                    throw nvae;
                }
                switch (alt574) {
                    case 1 :
                        // InternalKim.g:12005:14: lv_definedAuthority_21_1= RULE_UPPERCASE_ID
                        {
                        lv_definedAuthority_21_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:12020:14: lv_definedAuthority_21_2= RULE_UPPERCASE_PATH
                        {
                        lv_definedAuthority_21_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:12039:10: ( (lv_upperConcept_22_0= ruleConcept ) )
                {
                // InternalKim.g:12039:10: ( (lv_upperConcept_22_0= ruleConcept ) )
                // InternalKim.g:12040:11: (lv_upperConcept_22_0= ruleConcept )
                {
                // InternalKim.g:12040:11: (lv_upperConcept_22_0= ruleConcept )
                // InternalKim.g:12041:12: lv_upperConcept_22_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_22_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred458_InternalKim

    // $ANTLR start synpred460_InternalKim
    public final void synpred460_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_requirements_24_0 = null;

        EObject lv_requirements_26_0 = null;


        // InternalKim.g:12065:4: ( ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:12065:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:12065:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:12066:5: {...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred460_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:12066:117: ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:12067:6: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:12070:9: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:12070:10: {...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred460_InternalKim", "true");
        }
        // InternalKim.g:12070:19: (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:12070:20: otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_23=(Token)match(input,186,FOLLOW_160); if (state.failed) return ;
        // InternalKim.g:12074:9: ( (lv_requirements_24_0= ruleIdentityRequirement ) )
        // InternalKim.g:12075:10: (lv_requirements_24_0= ruleIdentityRequirement )
        {
        // InternalKim.g:12075:10: (lv_requirements_24_0= ruleIdentityRequirement )
        // InternalKim.g:12076:11: lv_requirements_24_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_requirements_24_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12093:9: (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
        loop576:
        do {
            int alt576=2;
            int LA576_0 = input.LA(1);

            if ( (LA576_0==29) ) {
                alt576=1;
            }


            switch (alt576) {
        	case 1 :
        	    // InternalKim.g:12094:10: otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_25=(Token)match(input,29,FOLLOW_160); if (state.failed) return ;
        	    // InternalKim.g:12098:10: ( (lv_requirements_26_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:12099:11: (lv_requirements_26_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:12099:11: (lv_requirements_26_0= ruleIdentityRequirement )
        	    // InternalKim.g:12100:12: lv_requirements_26_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_requirements_26_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop576;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred460_InternalKim

    // $ANTLR start synpred462_InternalKim
    public final void synpred462_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_29=null;
        EObject lv_describedQuality_28_0 = null;

        EObject lv_descriptionConstraints_30_0 = null;


        // InternalKim.g:12124:4: ( ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) )
        // InternalKim.g:12124:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
        {
        // InternalKim.g:12124:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
        // InternalKim.g:12125:5: {...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:12125:117: ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
        // InternalKim.g:12126:6: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:12129:9: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
        // InternalKim.g:12129:10: {...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "true");
        }
        // InternalKim.g:12129:19: (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
        // InternalKim.g:12129:20: otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
        {
        otherlv_27=(Token)match(input,187,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12133:9: ( (lv_describedQuality_28_0= ruleConceptDeclaration ) )
        // InternalKim.g:12134:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12134:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
        // InternalKim.g:12135:11: lv_describedQuality_28_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_174);
        lv_describedQuality_28_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12152:9: (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
        int alt577=2;
        int LA577_0 = input.LA(1);

        if ( (LA577_0==27) ) {
            alt577=1;
        }
        switch (alt577) {
            case 1 :
                // InternalKim.g:12153:10: otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
                {
                otherlv_29=(Token)match(input,27,FOLLOW_163); if (state.failed) return ;
                // InternalKim.g:12157:10: ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
                // InternalKim.g:12158:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
                {
                // InternalKim.g:12158:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
                // InternalKim.g:12159:12: lv_descriptionConstraints_30_0= ruleDescriptionConstraints
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescriptionConstraintsDescriptionConstraintsParserRuleCall_3_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_descriptionConstraints_30_0=ruleDescriptionConstraints();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred462_InternalKim

    // $ANTLR start synpred463_InternalKim
    public final void synpred463_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        EObject lv_describedProportionality_33_0 = null;


        // InternalKim.g:12183:4: ( ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12183:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12183:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12184:5: {...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:12184:117: ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12185:6: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:12188:9: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12188:10: {...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "true");
        }
        // InternalKim.g:12188:19: (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12188:20: otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
        {
        otherlv_31=(Token)match(input,188,FOLLOW_81); if (state.failed) return ;
        otherlv_32=(Token)match(input,104,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12196:9: ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
        // InternalKim.g:12197:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12197:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
        // InternalKim.g:12198:11: lv_describedProportionality_33_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_33_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred463_InternalKim

    // $ANTLR start synpred464_InternalKim
    public final void synpred464_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        EObject lv_describedInverseProportionalityQuality_36_0 = null;


        // InternalKim.g:12221:4: ( ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12221:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12221:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12222:5: {...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:12222:117: ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12223:6: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:12226:9: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12226:10: {...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "true");
        }
        // InternalKim.g:12226:19: (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12226:20: otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_34=(Token)match(input,189,FOLLOW_81); if (state.failed) return ;
        otherlv_35=(Token)match(input,104,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12234:9: ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:12235:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12235:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:12236:11: lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred464_InternalKim

    // $ANTLR start synpred465_InternalKim
    public final void synpred465_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        EObject lv_describedNonzeroQuality_38_0 = null;


        // InternalKim.g:12259:4: ( ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12259:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12259:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12260:5: {...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred465_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:12260:117: ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12261:6: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:12264:9: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12264:10: {...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred465_InternalKim", "true");
        }
        // InternalKim.g:12264:19: (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12264:20: otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,190,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12268:9: ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
        // InternalKim.g:12269:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12269:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
        // InternalKim.g:12270:11: lv_describedNonzeroQuality_38_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_38_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred465_InternalKim

    // $ANTLR start synpred466_InternalKim
    public final void synpred466_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_classifiesQuality_40_0 = null;


        // InternalKim.g:12293:4: ( ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12293:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12293:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12294:5: {...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:12294:117: ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12295:6: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:12298:9: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12298:10: {...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "true");
        }
        // InternalKim.g:12298:19: (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12298:20: otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
        {
        otherlv_39=(Token)match(input,191,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12302:9: ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
        // InternalKim.g:12303:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12303:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
        // InternalKim.g:12304:11: lv_classifiesQuality_40_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_40_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred466_InternalKim

    // $ANTLR start synpred467_InternalKim
    public final void synpred467_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_41=null;
        EObject lv_discretizesQuality_42_0 = null;


        // InternalKim.g:12327:4: ( ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12327:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12327:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12328:5: {...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred467_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:12328:117: ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12329:6: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:12332:9: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12332:10: {...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred467_InternalKim", "true");
        }
        // InternalKim.g:12332:19: (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12332:20: otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_41=(Token)match(input,192,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12336:9: ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:12337:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12337:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:12338:11: lv_discretizesQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred467_InternalKim

    // $ANTLR start synpred469_InternalKim
    public final void synpred469_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        Token otherlv_45=null;
        EObject lv_actuallyInheritedTraits_44_0 = null;

        EObject lv_actuallyInheritedTraits_46_0 = null;


        // InternalKim.g:12361:4: ( ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12361:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12361:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12362:5: {...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred469_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:12362:118: ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12363:6: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:12366:9: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12366:10: {...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred469_InternalKim", "true");
        }
        // InternalKim.g:12366:19: (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12366:20: otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_43=(Token)match(input,193,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12370:9: ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:12371:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12371:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
        // InternalKim.g:12372:11: lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_actuallyInheritedTraits_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12389:9: (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
        loop578:
        do {
            int alt578=2;
            int LA578_0 = input.LA(1);

            if ( (LA578_0==29) ) {
                alt578=1;
            }


            switch (alt578) {
        	case 1 :
        	    // InternalKim.g:12390:10: otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_45=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12394:10: ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12395:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12395:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
        	    // InternalKim.g:12396:12: lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_actuallyInheritedTraits_46_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop578;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred469_InternalKim

    // $ANTLR start synpred474_InternalKim
    public final void synpred474_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        EObject lv_roles_49_0 = null;

        EObject lv_roles_51_0 = null;

        EObject lv_targetObservables_53_0 = null;

        EObject lv_targetObservables_55_0 = null;

        EObject lv_restrictedObservables_57_0 = null;

        EObject lv_restrictedObservables_59_0 = null;


        // InternalKim.g:12420:4: ( ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:12420:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:12420:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12421:5: {...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred474_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:12421:118: ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12422:6: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:12425:9: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12425:10: {...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred474_InternalKim", "true");
        }
        // InternalKim.g:12425:19: (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12425:20: otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_47=(Token)match(input,194,FOLLOW_164); if (state.failed) return ;
        otherlv_48=(Token)match(input,195,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12433:9: ( (lv_roles_49_0= ruleConceptDeclaration ) )
        // InternalKim.g:12434:10: (lv_roles_49_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12434:10: (lv_roles_49_0= ruleConceptDeclaration )
        // InternalKim.g:12435:11: lv_roles_49_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_2_0());
          										
        }
        pushFollow(FOLLOW_165);
        lv_roles_49_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12452:9: (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )*
        loop580:
        do {
            int alt580=2;
            int LA580_0 = input.LA(1);

            if ( (LA580_0==29) ) {
                alt580=1;
            }


            switch (alt580) {
        	case 1 :
        	    // InternalKim.g:12453:10: otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_50=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12457:10: ( (lv_roles_51_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12458:11: (lv_roles_51_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12458:11: (lv_roles_51_0= ruleConceptDeclaration )
        	    // InternalKim.g:12459:12: lv_roles_51_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_165);
        	    lv_roles_51_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop580;
            }
        } while (true);

        // InternalKim.g:12477:9: (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )?
        int alt582=2;
        int LA582_0 = input.LA(1);

        if ( (LA582_0==196) ) {
            alt582=1;
        }
        switch (alt582) {
            case 1 :
                // InternalKim.g:12478:10: otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_52=(Token)match(input,196,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12482:10: ( (lv_targetObservables_53_0= ruleConceptDeclaration ) )
                // InternalKim.g:12483:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12483:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
                // InternalKim.g:12484:12: lv_targetObservables_53_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_1_0());
                  											
                }
                pushFollow(FOLLOW_166);
                lv_targetObservables_53_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12501:10: (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
                loop581:
                do {
                    int alt581=2;
                    int LA581_0 = input.LA(1);

                    if ( (LA581_0==29) ) {
                        alt581=1;
                    }


                    switch (alt581) {
                	case 1 :
                	    // InternalKim.g:12502:11: otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_54=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12506:11: ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12507:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12507:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
                	    // InternalKim.g:12508:13: lv_targetObservables_55_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_166);
                	    lv_targetObservables_55_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop581;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:12527:9: (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12528:10: otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_56=(Token)match(input,54,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12532:10: ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) )
        // InternalKim.g:12533:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12533:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
        // InternalKim.g:12534:12: lv_restrictedObservables_57_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_1_0());
          											
        }
        pushFollow(FOLLOW_40);
        lv_restrictedObservables_57_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12551:10: (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
        loop583:
        do {
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( (LA583_0==29) ) {
                alt583=1;
            }


            switch (alt583) {
        	case 1 :
        	    // InternalKim.g:12552:11: otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_58=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12556:11: ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12557:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12557:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
        	    // InternalKim.g:12558:13: lv_restrictedObservables_59_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_restrictedObservables_59_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop583;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred474_InternalKim

    // $ANTLR start synpred478_InternalKim
    public final void synpred478_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        EObject lv_conferredTraits_61_0 = null;

        EObject lv_conferredTraits_63_0 = null;

        EObject lv_conferredTargets_65_0 = null;

        EObject lv_conferredTargets_67_0 = null;


        // InternalKim.g:12583:4: ( ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:12583:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:12583:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:12584:5: {...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred478_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:12584:118: ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:12585:6: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:12588:9: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:12588:10: {...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred478_InternalKim", "true");
        }
        // InternalKim.g:12588:19: (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:12588:20: otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_60=(Token)match(input,197,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12592:9: ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) )
        // InternalKim.g:12593:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12593:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
        // InternalKim.g:12594:11: lv_conferredTraits_61_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_1_0());
          										
        }
        pushFollow(FOLLOW_230);
        lv_conferredTraits_61_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12611:9: (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )*
        loop585:
        do {
            int alt585=2;
            int LA585_0 = input.LA(1);

            if ( (LA585_0==29) ) {
                alt585=1;
            }


            switch (alt585) {
        	case 1 :
        	    // InternalKim.g:12612:10: otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_62=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12616:10: ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12617:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12617:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
        	    // InternalKim.g:12618:12: lv_conferredTraits_63_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_230);
        	    lv_conferredTraits_63_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop585;
            }
        } while (true);

        // InternalKim.g:12636:9: (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
        int alt587=2;
        int LA587_0 = input.LA(1);

        if ( (LA587_0==38) ) {
            alt587=1;
        }
        switch (alt587) {
            case 1 :
                // InternalKim.g:12637:10: otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_64=(Token)match(input,38,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12641:10: ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) )
                // InternalKim.g:12642:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12642:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
                // InternalKim.g:12643:12: lv_conferredTargets_65_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_1_0());
                  											
                }
                pushFollow(FOLLOW_40);
                lv_conferredTargets_65_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12660:10: (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
                loop586:
                do {
                    int alt586=2;
                    int LA586_0 = input.LA(1);

                    if ( (LA586_0==29) ) {
                        alt586=1;
                    }


                    switch (alt586) {
                	case 1 :
                	    // InternalKim.g:12661:11: otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_66=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12665:11: ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12666:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12666:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
                	    // InternalKim.g:12667:13: lv_conferredTargets_67_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_conferredTargets_67_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop586;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred478_InternalKim

    // $ANTLR start synpred480_InternalKim
    public final void synpred480_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        EObject lv_emergenceTriggers_70_0 = null;

        EObject lv_emergenceTriggers_72_0 = null;


        // InternalKim.g:12692:4: ( ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12692:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12692:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12693:5: {...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred480_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:12693:118: ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12694:6: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:12697:9: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12697:10: {...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred480_InternalKim", "true");
        }
        // InternalKim.g:12697:19: (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12697:20: otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_68=(Token)match(input,198,FOLLOW_86); if (state.failed) return ;
        otherlv_69=(Token)match(input,107,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12705:9: ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) )
        // InternalKim.g:12706:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12706:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
        // InternalKim.g:12707:11: lv_emergenceTriggers_70_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_emergenceTriggers_70_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12724:9: (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
        loop588:
        do {
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==29) ) {
                alt588=1;
            }


            switch (alt588) {
        	case 1 :
        	    // InternalKim.g:12725:10: otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_71=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12729:10: ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12730:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12730:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
        	    // InternalKim.g:12731:12: lv_emergenceTriggers_72_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_emergenceTriggers_72_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop588;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred480_InternalKim

    // $ANTLR start synpred482_InternalKim
    public final void synpred482_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_73=null;
        Token otherlv_75=null;
        EObject lv_creates_74_0 = null;

        EObject lv_creates_76_0 = null;


        // InternalKim.g:12755:4: ( ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12755:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12755:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12756:5: {...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:12756:118: ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12757:6: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:12760:9: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12760:10: {...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "true");
        }
        // InternalKim.g:12760:19: (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12760:20: otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_73=(Token)match(input,199,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12764:9: ( (lv_creates_74_0= ruleConceptDeclaration ) )
        // InternalKim.g:12765:10: (lv_creates_74_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12765:10: (lv_creates_74_0= ruleConceptDeclaration )
        // InternalKim.g:12766:11: lv_creates_74_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_creates_74_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12783:9: (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
        loop589:
        do {
            int alt589=2;
            int LA589_0 = input.LA(1);

            if ( (LA589_0==29) ) {
                alt589=1;
            }


            switch (alt589) {
        	case 1 :
        	    // InternalKim.g:12784:10: otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_75=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12788:10: ( (lv_creates_76_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12789:11: (lv_creates_76_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12789:11: (lv_creates_76_0= ruleConceptDeclaration )
        	    // InternalKim.g:12790:12: lv_creates_76_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_creates_76_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop589;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred482_InternalKim

    // $ANTLR start synpred484_InternalKim
    public final void synpred484_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token otherlv_80=null;
        EObject lv_traitTargets_79_0 = null;

        EObject lv_traitTargets_81_0 = null;


        // InternalKim.g:12814:4: ( ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:12814:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:12814:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:12815:5: {...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred484_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:12815:118: ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:12816:6: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:12819:9: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:12819:10: {...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred484_InternalKim", "true");
        }
        // InternalKim.g:12819:19: (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:12819:20: otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
        {
        otherlv_77=(Token)match(input,200,FOLLOW_25); if (state.failed) return ;
        otherlv_78=(Token)match(input,38,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12827:9: ( (lv_traitTargets_79_0= ruleApplicableTarget ) )
        // InternalKim.g:12828:10: (lv_traitTargets_79_0= ruleApplicableTarget )
        {
        // InternalKim.g:12828:10: (lv_traitTargets_79_0= ruleApplicableTarget )
        // InternalKim.g:12829:11: lv_traitTargets_79_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_traitTargets_79_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12846:9: (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
        loop590:
        do {
            int alt590=2;
            int LA590_0 = input.LA(1);

            if ( (LA590_0==29) ) {
                alt590=1;
            }


            switch (alt590) {
        	case 1 :
        	    // InternalKim.g:12847:10: otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_80=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12851:10: ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
        	    // InternalKim.g:12852:11: (lv_traitTargets_81_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:12852:11: (lv_traitTargets_81_0= ruleApplicableTarget )
        	    // InternalKim.g:12853:12: lv_traitTargets_81_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_traitTargets_81_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop590;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred484_InternalKim

    // $ANTLR start synpred488_InternalKim
    public final void synpred488_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        EObject lv_domains_83_0 = null;

        EObject lv_ranges_85_0 = null;

        EObject lv_domains_87_0 = null;

        EObject lv_ranges_89_0 = null;


        // InternalKim.g:12877:4: ( ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12877:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12877:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12878:5: {...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred488_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:12878:118: ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12879:6: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:12882:9: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12882:10: {...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred488_InternalKim", "true");
        }
        // InternalKim.g:12882:19: (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:12882:20: otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_82=(Token)match(input,201,FOLLOW_117); if (state.failed) return ;
        // InternalKim.g:12886:9: ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12887:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12887:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12888:11: lv_domains_83_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_domains_83_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12905:9: ( ( 'to' )=>otherlv_84= 'to' )
        // InternalKim.g:12906:10: ( 'to' )=>otherlv_84= 'to'
        {
        otherlv_84=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;

        }

        // InternalKim.g:12912:9: ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12913:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12913:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12914:11: lv_ranges_85_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_3_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_ranges_85_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12931:9: (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
        loop591:
        do {
            int alt591=2;
            int LA591_0 = input.LA(1);

            if ( (LA591_0==29) ) {
                alt591=1;
            }


            switch (alt591) {
        	case 1 :
        	    // InternalKim.g:12932:10: otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_86=(Token)match(input,29,FOLLOW_117); if (state.failed) return ;
        	    // InternalKim.g:12936:10: ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12937:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12937:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12938:12: lv_domains_87_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_domains_87_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:12955:10: ( ( 'to' )=>otherlv_88= 'to' )
        	    // InternalKim.g:12956:11: ( 'to' )=>otherlv_88= 'to'
        	    {
        	    otherlv_88=(Token)match(input,38,FOLLOW_117); if (state.failed) return ;

        	    }

        	    // InternalKim.g:12962:10: ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12963:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12963:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12964:12: lv_ranges_89_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_ranges_89_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop591;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred488_InternalKim

    // $ANTLR start synpred490_InternalKim
    public final void synpred490_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_90=null;
        Token otherlv_92=null;
        EObject lv_qualitiesAffected_91_0 = null;

        EObject lv_qualitiesAffected_93_0 = null;


        // InternalKim.g:12988:4: ( ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12988:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12988:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12989:5: {...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred490_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:12989:118: ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12990:6: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:12993:9: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12993:10: {...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred490_InternalKim", "true");
        }
        // InternalKim.g:12993:19: (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12993:20: otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_90=(Token)match(input,202,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12997:9: ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) )
        // InternalKim.g:12998:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12998:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
        // InternalKim.g:12999:11: lv_qualitiesAffected_91_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_qualitiesAffected_91_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13016:9: (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
        loop592:
        do {
            int alt592=2;
            int LA592_0 = input.LA(1);

            if ( (LA592_0==29) ) {
                alt592=1;
            }


            switch (alt592) {
        	case 1 :
        	    // InternalKim.g:13017:10: otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,29,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:13021:10: ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:13022:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:13022:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
        	    // InternalKim.g:13023:12: lv_qualitiesAffected_93_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_qualitiesAffected_93_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop592;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred490_InternalKim

    // $ANTLR start synpred493_InternalKim
    public final void synpred493_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_94=null;
        Token lv_disjoint_95_0=null;
        Token otherlv_96=null;
        Token otherlv_98=null;
        EObject lv_children_97_0 = null;

        EObject lv_children_99_0 = null;


        // InternalKim.g:13047:4: ( ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:13047:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:13047:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:13048:5: {...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred493_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:13048:118: ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:13049:6: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:13052:9: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:13052:10: {...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred493_InternalKim", "true");
        }
        // InternalKim.g:13052:19: (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
        // InternalKim.g:13052:20: otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
        {
        otherlv_94=(Token)match(input,194,FOLLOW_168); if (state.failed) return ;
        // InternalKim.g:13056:9: ( (lv_disjoint_95_0= 'disjoint' ) )?
        int alt593=2;
        int LA593_0 = input.LA(1);

        if ( (LA593_0==103) ) {
            alt593=1;
        }
        switch (alt593) {
            case 1 :
                // InternalKim.g:13057:10: (lv_disjoint_95_0= 'disjoint' )
                {
                // InternalKim.g:13057:10: (lv_disjoint_95_0= 'disjoint' )
                // InternalKim.g:13058:11: lv_disjoint_95_0= 'disjoint'
                {
                lv_disjoint_95_0=(Token)match(input,103,FOLLOW_169); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_96=(Token)match(input,117,FOLLOW_170); if (state.failed) return ;
        // InternalKim.g:13074:9: ( (lv_children_97_0= ruleChildConcept ) )
        // InternalKim.g:13075:10: (lv_children_97_0= ruleChildConcept )
        {
        // InternalKim.g:13075:10: (lv_children_97_0= ruleChildConcept )
        // InternalKim.g:13076:11: lv_children_97_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_3_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_children_97_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13093:9: (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
        loop594:
        do {
            int alt594=2;
            int LA594_0 = input.LA(1);

            if ( (LA594_0==29) ) {
                alt594=1;
            }


            switch (alt594) {
        	case 1 :
        	    // InternalKim.g:13094:10: otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) )
        	    {
        	    otherlv_98=(Token)match(input,29,FOLLOW_170); if (state.failed) return ;
        	    // InternalKim.g:13098:10: ( (lv_children_99_0= ruleChildConcept ) )
        	    // InternalKim.g:13099:11: (lv_children_99_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:13099:11: (lv_children_99_0= ruleChildConcept )
        	    // InternalKim.g:13100:12: lv_children_99_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_children_99_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop594;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred493_InternalKim

    // $ANTLR start synpred495_InternalKim
    public final void synpred495_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_100=null;
        Token otherlv_102=null;
        EObject lv_implications_101_0 = null;

        EObject lv_implications_103_0 = null;


        // InternalKim.g:13124:4: ( ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) )
        // InternalKim.g:13124:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
        {
        // InternalKim.g:13124:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
        // InternalKim.g:13125:5: {...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred495_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:13125:118: ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
        // InternalKim.g:13126:6: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:13129:9: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
        // InternalKim.g:13129:10: {...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred495_InternalKim", "true");
        }
        // InternalKim.g:13129:19: (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
        // InternalKim.g:13129:20: otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
        {
        otherlv_100=(Token)match(input,203,FOLLOW_171); if (state.failed) return ;
        // InternalKim.g:13133:9: ( (lv_implications_101_0= ruleImplication ) )
        // InternalKim.g:13134:10: (lv_implications_101_0= ruleImplication )
        {
        // InternalKim.g:13134:10: (lv_implications_101_0= ruleImplication )
        // InternalKim.g:13135:11: lv_implications_101_0= ruleImplication
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_implications_101_0=ruleImplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13152:9: (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
        loop595:
        do {
            int alt595=2;
            int LA595_0 = input.LA(1);

            if ( (LA595_0==29) ) {
                alt595=1;
            }


            switch (alt595) {
        	case 1 :
        	    // InternalKim.g:13153:10: otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) )
        	    {
        	    otherlv_102=(Token)match(input,29,FOLLOW_171); if (state.failed) return ;
        	    // InternalKim.g:13157:10: ( (lv_implications_103_0= ruleImplication ) )
        	    // InternalKim.g:13158:11: (lv_implications_103_0= ruleImplication )
        	    {
        	    // InternalKim.g:13158:11: (lv_implications_103_0= ruleImplication )
        	    // InternalKim.g:13159:12: lv_implications_103_0= ruleImplication
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_implications_103_0=ruleImplication();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop595;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred495_InternalKim

    // $ANTLR start synpred497_InternalKim
    public final void synpred497_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_authorities_106_1=null;
        Token lv_authorities_106_2=null;

        // InternalKim.g:13183:4: ( ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) )
        // InternalKim.g:13183:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        {
        // InternalKim.g:13183:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        // InternalKim.g:13184:5: {...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred497_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:13184:118: ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        // InternalKim.g:13185:6: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:13188:9: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
        // InternalKim.g:13188:10: {...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred497_InternalKim", "true");
        }
        // InternalKim.g:13188:19: (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
        // InternalKim.g:13188:20: otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
        {
        otherlv_104=(Token)match(input,204,FOLLOW_172); if (state.failed) return ;
        otherlv_105=(Token)match(input,185,FOLLOW_135); if (state.failed) return ;
        // InternalKim.g:13196:9: ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
        // InternalKim.g:13197:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
        {
        // InternalKim.g:13197:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
        // InternalKim.g:13198:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
        {
        // InternalKim.g:13198:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
        int alt596=2;
        int LA596_0 = input.LA(1);

        if ( (LA596_0==RULE_UPPERCASE_ID) ) {
            alt596=1;
        }
        else if ( (LA596_0==RULE_UPPERCASE_PATH) ) {
            alt596=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 596, 0, input);

            throw nvae;
        }
        switch (alt596) {
            case 1 :
                // InternalKim.g:13199:12: lv_authorities_106_1= RULE_UPPERCASE_ID
                {
                lv_authorities_106_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13214:12: lv_authorities_106_2= RULE_UPPERCASE_PATH
                {
                lv_authorities_106_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred497_InternalKim

    // $ANTLR start synpred498_InternalKim
    public final void synpred498_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_107=null;
        EObject lv_metadata_108_0 = null;


        // InternalKim.g:13237:4: ( ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:13237:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:13237:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:13238:5: {...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred498_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:13238:118: ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
        // InternalKim.g:13239:6: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:13242:9: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
        // InternalKim.g:13242:10: {...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred498_InternalKim", "true");
        }
        // InternalKim.g:13242:19: (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
        // InternalKim.g:13242:20: otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) )
        {
        otherlv_107=(Token)match(input,43,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:13246:9: ( (lv_metadata_108_0= ruleMap ) )
        // InternalKim.g:13247:10: (lv_metadata_108_0= ruleMap )
        {
        // InternalKim.g:13247:10: (lv_metadata_108_0= ruleMap )
        // InternalKim.g:13248:11: lv_metadata_108_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_21_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_108_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred498_InternalKim

    // $ANTLR start synpred499_InternalKim
    public final void synpred499_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_109_0 = null;


        // InternalKim.g:13276:10: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )
        // InternalKim.g:13276:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred499_InternalKim", "true");
        }
        // InternalKim.g:13276:19: ( (lv_properties_109_0= rulePropertyStatement ) )
        // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
        {
        // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
        // InternalKim.g:13277:10: lv_properties_109_0= rulePropertyStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_properties_109_0=rulePropertyStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred499_InternalKim

    // $ANTLR start synpred500_InternalKim
    public final void synpred500_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_109_0 = null;


        // InternalKim.g:13271:4: ( ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )
        // InternalKim.g:13271:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
        {
        // InternalKim.g:13271:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
        // InternalKim.g:13272:5: {...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred500_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:13272:118: ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
        // InternalKim.g:13273:6: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:13276:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
        int cnt597=0;
        loop597:
        do {
            int alt597=2;
            int LA597_0 = input.LA(1);

            if ( (LA597_0==RULE_LOWERCASE_ID) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==RULE_UPPERCASE_ID) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==RULE_LOWERCASE_DASHID) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==RULE_BACKCASE_ID) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==194) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==210) && ((true))) {
                alt597=1;
            }
            else if ( (LA597_0==204) && ((true))) {
                alt597=1;
            }


            switch (alt597) {
        	case 1 :
        	    // InternalKim.g:13276:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred500_InternalKim", "true");
        	    }
        	    // InternalKim.g:13276:19: ( (lv_properties_109_0= rulePropertyStatement ) )
        	    // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
        	    {
        	    // InternalKim.g:13276:20: (lv_properties_109_0= rulePropertyStatement )
        	    // InternalKim.g:13277:10: lv_properties_109_0= rulePropertyStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_153);
        	    lv_properties_109_0=rulePropertyStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt597 >= 1 ) break loop597;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(597, input);
                    throw eee;
            }
            cnt597++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred500_InternalKim

    // $ANTLR start synpred505_InternalKim
    public final void synpred505_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantifier_0_0 = null;


        // InternalKim.g:13461:4: ( (lv_quantifier_0_0= ruleQuantification ) )
        // InternalKim.g:13461:4: (lv_quantifier_0_0= ruleQuantification )
        {
        // InternalKim.g:13461:4: (lv_quantifier_0_0= ruleQuantification )
        // InternalKim.g:13462:5: lv_quantifier_0_0= ruleQuantification
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantifier_0_0=ruleQuantification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred505_InternalKim

    // $ANTLR start synpred534_InternalKim
    public final void synpred534_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;


        // InternalKim.g:14250:4: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
        // InternalKim.g:14250:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
        {
        // InternalKim.g:14250:4: ( ( '(' )=>otherlv_1= '(' )
        // InternalKim.g:14251:5: ( '(' )=>otherlv_1= '('
        {
        otherlv_1=(Token)match(input,40,FOLLOW_183); if (state.failed) return ;

        }

        // InternalKim.g:14257:4: ( (lv_parameters_2_0= ruleParameterList ) )?
        int alt614=2;
        int LA614_0 = input.LA(1);

        if ( ((LA614_0>=RULE_LOWERCASE_ID && LA614_0<=RULE_STRING)||(LA614_0>=RULE_EXPR && LA614_0<=RULE_LOWERCASE_DASHID)||LA614_0==RULE_UPPERCASE_PATH||LA614_0==RULE_TEMPLATE_VAR||(LA614_0>=30 && LA614_0<=31)||LA614_0==40||LA614_0==48||(LA614_0>=55 && LA614_0<=56)||(LA614_0>=82 && LA614_0<=85)||LA614_0==88||LA614_0==90||LA614_0==118||LA614_0==123||(LA614_0>=137 && LA614_0<=138)||(LA614_0>=146 && LA614_0<=147)||(LA614_0>=149 && LA614_0<=154)||(LA614_0>=156 && LA614_0<=167)||LA614_0==216||(LA614_0>=251 && LA614_0<=252)) ) {
            alt614=1;
        }
        switch (alt614) {
            case 1 :
                // InternalKim.g:14258:5: (lv_parameters_2_0= ruleParameterList )
                {
                // InternalKim.g:14258:5: (lv_parameters_2_0= ruleParameterList )
                // InternalKim.g:14259:6: lv_parameters_2_0= ruleParameterList
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_36);
                lv_parameters_2_0=ruleParameterList();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred534_InternalKim

    // $ANTLR start synpred535_InternalKim
    public final void synpred535_InternalKim_fragment() throws RecognitionException {   
        EObject lv_contents_2_0 = null;


        // InternalKim.g:14315:4: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )
        // InternalKim.g:14315:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        {
        // InternalKim.g:14315:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        // InternalKim.g:14316:5: lv_contents_2_0= ruleValueWithIdAndConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_contents_2_0=ruleValueWithIdAndConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred535_InternalKim

    // $ANTLR start synpred552_InternalKim
    public final void synpred552_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14727:6: ( ',' )
        // InternalKim.g:14727:7: ','
        {
        match(input,29,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred552_InternalKim

    // $ANTLR start synpred555_InternalKim
    public final void synpred555_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:14842:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:14842:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred555_InternalKim

    // $ANTLR start synpred556_InternalKim
    public final void synpred556_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_2=null;

        // InternalKim.g:14858:6: (lv_name_0_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14858:6: lv_name_0_2= RULE_LOWERCASE_ID
        {
        lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred556_InternalKim

    // $ANTLR start synpred565_InternalKim
    public final void synpred565_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15105:3: ( ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) )
        // InternalKim.g:15105:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
        {
        // InternalKim.g:15105:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
        // InternalKim.g:15106:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
        {
        // InternalKim.g:15106:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
        // InternalKim.g:15107:5: lv_concept_1_0= ruleSimpleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleSimpleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred565_InternalKim

    // $ANTLR start synpred566_InternalKim
    public final void synpred566_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_2_0 = null;


        // InternalKim.g:15125:3: ( ( (lv_function_2_0= ruleFunction ) ) )
        // InternalKim.g:15125:3: ( (lv_function_2_0= ruleFunction ) )
        {
        // InternalKim.g:15125:3: ( (lv_function_2_0= ruleFunction ) )
        // InternalKim.g:15126:4: (lv_function_2_0= ruleFunction )
        {
        // InternalKim.g:15126:4: (lv_function_2_0= ruleFunction )
        // InternalKim.g:15127:5: lv_function_2_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_2_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred566_InternalKim

    // $ANTLR start synpred567_InternalKim
    public final void synpred567_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_3_0 = null;


        // InternalKim.g:15145:3: ( ( (lv_date_3_0= ruleDate ) ) )
        // InternalKim.g:15145:3: ( (lv_date_3_0= ruleDate ) )
        {
        // InternalKim.g:15145:3: ( (lv_date_3_0= ruleDate ) )
        // InternalKim.g:15146:4: (lv_date_3_0= ruleDate )
        {
        // InternalKim.g:15146:4: (lv_date_3_0= ruleDate )
        // InternalKim.g:15147:5: lv_date_3_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_3_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred567_InternalKim

    // $ANTLR start synpred568_InternalKim
    public final void synpred568_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_4_0 = null;


        // InternalKim.g:15165:3: ( ( (lv_literal_4_0= ruleLiteral ) ) )
        // InternalKim.g:15165:3: ( (lv_literal_4_0= ruleLiteral ) )
        {
        // InternalKim.g:15165:3: ( (lv_literal_4_0= ruleLiteral ) )
        // InternalKim.g:15166:4: (lv_literal_4_0= ruleLiteral )
        {
        // InternalKim.g:15166:4: (lv_literal_4_0= ruleLiteral )
        // InternalKim.g:15167:5: lv_literal_4_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_4_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred568_InternalKim

    // $ANTLR start synpred571_InternalKim
    public final void synpred571_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:15226:6: (lv_id_7_1= rulePathName )
        // InternalKim.g:15226:6: lv_id_7_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_7_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred571_InternalKim

    // $ANTLR start synpred572_InternalKim
    public final void synpred572_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;

        // InternalKim.g:15242:6: (lv_id_7_2= RULE_LOWERCASE_ID )
        // InternalKim.g:15242:6: lv_id_7_2= RULE_LOWERCASE_ID
        {
        lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred572_InternalKim

    // $ANTLR start synpred573_InternalKim
    public final void synpred573_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_3=null;

        // InternalKim.g:15257:6: (lv_id_7_3= RULE_UPPERCASE_ID )
        // InternalKim.g:15257:6: lv_id_7_3= RULE_UPPERCASE_ID
        {
        lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred573_InternalKim

    // $ANTLR start synpred574_InternalKim
    public final void synpred574_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:15223:3: ( ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:15223:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:15223:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:15224:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:15224:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:15225:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:15225:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        int alt622=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA622_1 = input.LA(2);

            if ( (synpred571_InternalKim()) ) {
                alt622=1;
            }
            else if ( (synpred572_InternalKim()) ) {
                alt622=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 622, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            int LA622_2 = input.LA(2);

            if ( (synpred571_InternalKim()) ) {
                alt622=1;
            }
            else if ( (synpred573_InternalKim()) ) {
                alt622=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 622, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt622=1;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt622=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 622, 0, input);

            throw nvae;
        }

        switch (alt622) {
            case 1 :
                // InternalKim.g:15226:6: lv_id_7_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_7_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15242:6: lv_id_7_2= RULE_LOWERCASE_ID
                {
                lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:15257:6: lv_id_7_3= RULE_UPPERCASE_ID
                {
                lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:15272:6: lv_id_7_4= RULE_CAMELCASE_ID
                {
                lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred574_InternalKim

    // $ANTLR start synpred576_InternalKim
    public final void synpred576_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_9_0 = null;


        // InternalKim.g:15310:3: ( ( (lv_list_9_0= ruleList ) ) )
        // InternalKim.g:15310:3: ( (lv_list_9_0= ruleList ) )
        {
        // InternalKim.g:15310:3: ( (lv_list_9_0= ruleList ) )
        // InternalKim.g:15311:4: (lv_list_9_0= ruleList )
        {
        // InternalKim.g:15311:4: (lv_list_9_0= ruleList )
        // InternalKim.g:15312:5: lv_list_9_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_9_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_9_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred576_InternalKim

    // $ANTLR start synpred577_InternalKim
    public final void synpred577_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_10_0 = null;


        // InternalKim.g:15330:3: ( ( (lv_quantity_10_0= ruleQuantity ) ) )
        // InternalKim.g:15330:3: ( (lv_quantity_10_0= ruleQuantity ) )
        {
        // InternalKim.g:15330:3: ( (lv_quantity_10_0= ruleQuantity ) )
        // InternalKim.g:15331:4: (lv_quantity_10_0= ruleQuantity )
        {
        // InternalKim.g:15331:4: (lv_quantity_10_0= ruleQuantity )
        // InternalKim.g:15332:5: lv_quantity_10_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_10_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_10_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred577_InternalKim

    // $ANTLR start synpred579_InternalKim
    public final void synpred579_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalKim.g:15424:3: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) )
        // InternalKim.g:15424:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        {
        // InternalKim.g:15424:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        // InternalKim.g:15425:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        {
        // InternalKim.g:15425:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        // InternalKim.g:15426:5: lv_literal_0_0= ruleLiteralOrIdOrComma
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleLiteralOrIdOrComma();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred579_InternalKim

    // $ANTLR start synpred580_InternalKim
    public final void synpred580_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:15444:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:15444:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:15444:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:15445:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:15445:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:15446:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred580_InternalKim

    // $ANTLR start synpred585_InternalKim
    public final void synpred585_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:15509:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:15509:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:15509:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:15510:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:15510:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:15511:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:15511:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt624=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt624=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt624=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt624=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 624, 0, input);

            throw nvae;
        }

        switch (alt624) {
            case 1 :
                // InternalKim.g:15512:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15527:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:15542:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred585_InternalKim

    // $ANTLR start synpred588_InternalKim
    public final void synpred588_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_8_0 = null;


        // InternalKim.g:15600:3: ( ( (lv_quantity_8_0= ruleQuantity ) ) )
        // InternalKim.g:15600:3: ( (lv_quantity_8_0= ruleQuantity ) )
        {
        // InternalKim.g:15600:3: ( (lv_quantity_8_0= ruleQuantity ) )
        // InternalKim.g:15601:4: (lv_quantity_8_0= ruleQuantity )
        {
        // InternalKim.g:15601:4: (lv_quantity_8_0= ruleQuantity )
        // InternalKim.g:15602:5: lv_quantity_8_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_8_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred588_InternalKim

    // $ANTLR start synpred589_InternalKim
    public final void synpred589_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_9_0 = null;


        // InternalKim.g:15620:3: ( ( (lv_date_9_0= ruleDate ) ) )
        // InternalKim.g:15620:3: ( (lv_date_9_0= ruleDate ) )
        {
        // InternalKim.g:15620:3: ( (lv_date_9_0= ruleDate ) )
        // InternalKim.g:15621:4: (lv_date_9_0= ruleDate )
        {
        // InternalKim.g:15621:4: (lv_date_9_0= ruleDate )
        // InternalKim.g:15622:5: lv_date_9_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_9_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred589_InternalKim

    // $ANTLR start synpred592_InternalKim
    public final void synpred592_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15713:3: ( ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:15713:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:15713:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        // InternalKim.g:15714:4: (lv_concept_1_0= ruleConceptDeclaration )
        {
        // InternalKim.g:15714:4: (lv_concept_1_0= ruleConceptDeclaration )
        // InternalKim.g:15715:5: lv_concept_1_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred592_InternalKim

    // $ANTLR start synpred638_InternalKim
    public final void synpred638_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16434:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16434:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16434:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16435:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16435:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16436:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred638_InternalKim

    // $ANTLR start synpred640_InternalKim
    public final void synpred640_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16498:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16498:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16498:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16499:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred640_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16499:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16500:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16503:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16503:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred640_InternalKim", "true");
        }
        // InternalKim.g:16503:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16503:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16511:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16512:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16512:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16513:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred640_InternalKim

    // $ANTLR start synpred643_InternalKim
    public final void synpred643_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16536:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16536:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16536:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16537:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred643_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16537:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16538:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16541:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16541:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred643_InternalKim", "true");
        }
        // InternalKim.g:16541:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt627=2;
        int LA627_0 = input.LA(1);

        if ( (LA627_0==54) ) {
            alt627=1;
        }
        else if ( (LA627_0==119) ) {
            alt627=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 627, 0, input);

            throw nvae;
        }
        switch (alt627) {
            case 1 :
                // InternalKim.g:16541:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16541:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16542:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,54,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:16546:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt626=2;
                int LA626_0 = input.LA(1);

                if ( (LA626_0==EOF||LA626_0==RULE_LOWERCASE_ID||LA626_0==RULE_CAMELCASE_ID||LA626_0==RULE_BACKCASE_ID||LA626_0==40||LA626_0==45||LA626_0==113||LA626_0==259) ) {
                    alt626=1;
                }
                else if ( (LA626_0==RULE_UPPERCASE_ID) ) {
                    int LA626_2 = input.LA(2);

                    if ( (LA626_2==250) ) {
                        alt626=2;
                    }
                    else if ( (LA626_2==EOF||LA626_2==45||LA626_2==113||LA626_2==259) ) {
                        alt626=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 626, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 626, 0, input);

                    throw nvae;
                }
                switch (alt626) {
                    case 1 :
                        // InternalKim.g:16547:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16547:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16548:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16548:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16549:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16567:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16567:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16568:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16568:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16569:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16589:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16589:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16590:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,119,FOLLOW_225); if (state.failed) return ;
                // InternalKim.g:16594:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16595:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16595:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16596:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred643_InternalKim

    // $ANTLR start synpred644_InternalKim
    public final void synpred644_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16620:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16620:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16620:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16621:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred644_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16621:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16622:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16625:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16625:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred644_InternalKim", "true");
        }
        // InternalKim.g:16625:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16625:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16625:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16626:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16626:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16627:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:16648:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16649:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16649:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16650:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred644_InternalKim

    // $ANTLR start synpred645_InternalKim
    public final void synpred645_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16698:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16699:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred645_InternalKim

    // $ANTLR start synpred646_InternalKim
    public final void synpred646_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16673:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16673:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16673:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16674:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred646_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16674:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16675:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16678:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16678:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred646_InternalKim", "true");
        }
        // InternalKim.g:16678:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16678:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16678:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16679:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16679:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16680:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_226);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16697:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop628:
        do {
            int alt628=2;
            int LA628_0 = input.LA(1);

            if ( (LA628_0==48||LA628_0==61||(LA628_0>=82 && LA628_0<=94)||(LA628_0>=124 && LA628_0<=127)) ) {
                alt628=1;
            }


            switch (alt628) {
        	case 1 :
        	    // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16698:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16699:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_226);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop628;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred646_InternalKim

    // $ANTLR start synpred648_InternalKim
    public final void synpred648_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_18_0=null;
        Token otherlv_19=null;

        // InternalKim.g:16722:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) )
        // InternalKim.g:16722:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        {
        // InternalKim.g:16722:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        // InternalKim.g:16723:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred648_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:16723:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        // InternalKim.g:16724:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:16727:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        // InternalKim.g:16727:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred648_InternalKim", "true");
        }
        // InternalKim.g:16727:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        int alt629=2;
        int LA629_0 = input.LA(1);

        if ( (LA629_0==120) ) {
            alt629=1;
        }
        else if ( (LA629_0==121) ) {
            alt629=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 629, 0, input);

            throw nvae;
        }
        switch (alt629) {
            case 1 :
                // InternalKim.g:16727:20: ( (lv_optional_18_0= 'optional' ) )
                {
                // InternalKim.g:16727:20: ( (lv_optional_18_0= 'optional' ) )
                // InternalKim.g:16728:10: (lv_optional_18_0= 'optional' )
                {
                // InternalKim.g:16728:10: (lv_optional_18_0= 'optional' )
                // InternalKim.g:16729:11: lv_optional_18_0= 'optional'
                {
                lv_optional_18_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16742:9: otherlv_19= 'required'
                {
                otherlv_19=(Token)match(input,121,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred648_InternalKim

    // $ANTLR start synpred650_InternalKim
    public final void synpred650_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:16752:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:16752:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:16752:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:16753:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:16753:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:16754:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:16757:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:16757:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "true");
        }
        // InternalKim.g:16757:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:16757:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,122,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:16761:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:16762:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:16762:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:16763:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:16763:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt630=2;
        int LA630_0 = input.LA(1);

        if ( (LA630_0==RULE_LOWERCASE_ID) ) {
            alt630=1;
        }
        else if ( (LA630_0==RULE_STRING) ) {
            alt630=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 630, 0, input);

            throw nvae;
        }
        switch (alt630) {
            case 1 :
                // InternalKim.g:16764:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:16779:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred650_InternalKim

    // $ANTLR start synpred651_InternalKim
    public final void synpred651_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16842:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16842:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16842:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16843:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16843:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16844:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred651_InternalKim

    // $ANTLR start synpred653_InternalKim
    public final void synpred653_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16906:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16906:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16906:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16907:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16907:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16908:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16911:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16911:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "true");
        }
        // InternalKim.g:16911:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16911:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,37,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,38,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16919:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16920:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16920:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16921:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred653_InternalKim

    // $ANTLR start synpred656_InternalKim
    public final void synpred656_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16944:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16944:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16944:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16945:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred656_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16945:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16946:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16949:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16949:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred656_InternalKim", "true");
        }
        // InternalKim.g:16949:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt633=2;
        int LA633_0 = input.LA(1);

        if ( (LA633_0==54) ) {
            alt633=1;
        }
        else if ( (LA633_0==119) ) {
            alt633=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 633, 0, input);

            throw nvae;
        }
        switch (alt633) {
            case 1 :
                // InternalKim.g:16949:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16949:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16950:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,54,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:16954:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt632=2;
                int LA632_0 = input.LA(1);

                if ( (LA632_0==EOF||LA632_0==RULE_LOWERCASE_ID||LA632_0==RULE_CAMELCASE_ID||LA632_0==RULE_BACKCASE_ID||LA632_0==40||LA632_0==45||LA632_0==113||LA632_0==259) ) {
                    alt632=1;
                }
                else if ( (LA632_0==RULE_UPPERCASE_ID) ) {
                    int LA632_2 = input.LA(2);

                    if ( (LA632_2==250) ) {
                        alt632=2;
                    }
                    else if ( (LA632_2==EOF||LA632_2==45||LA632_2==113||LA632_2==259) ) {
                        alt632=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 632, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 632, 0, input);

                    throw nvae;
                }
                switch (alt632) {
                    case 1 :
                        // InternalKim.g:16955:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16955:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16956:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16956:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16957:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16975:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16975:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16976:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16976:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16977:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16997:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16997:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16998:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,119,FOLLOW_225); if (state.failed) return ;
                // InternalKim.g:17002:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:17003:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:17003:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:17004:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred656_InternalKim

    // $ANTLR start synpred657_InternalKim
    public final void synpred657_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:17028:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:17028:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:17028:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:17029:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred657_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:17029:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:17030:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:17033:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:17033:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred657_InternalKim", "true");
        }
        // InternalKim.g:17033:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:17033:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:17033:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:17034:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:17034:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:17035:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:17056:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:17057:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:17057:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:17058:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred657_InternalKim

    // $ANTLR start synpred658_InternalKim
    public final void synpred658_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:17106:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:17107:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred658_InternalKim

    // $ANTLR start synpred659_InternalKim
    public final void synpred659_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:17081:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:17081:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:17081:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:17082:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred659_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:17082:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:17083:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:17086:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:17086:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred659_InternalKim", "true");
        }
        // InternalKim.g:17086:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:17086:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:17086:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:17087:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:17087:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:17088:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_226);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:17105:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop634:
        do {
            int alt634=2;
            int LA634_0 = input.LA(1);

            if ( (LA634_0==48||LA634_0==61||(LA634_0>=82 && LA634_0<=94)||(LA634_0>=124 && LA634_0<=127)) ) {
                alt634=1;
            }


            switch (alt634) {
        	case 1 :
        	    // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:17106:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:17107:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_226);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop634;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred659_InternalKim

    // $ANTLR start synpred672_InternalKim
    public final void synpred672_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:17508:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:17508:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:17508:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:17509:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred672_InternalKim

    // $ANTLR start synpred679_InternalKim
    public final void synpred679_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17704:4: ( ( RULE_INT ) )
        // InternalKim.g:17704:5: ( RULE_INT )
        {
        // InternalKim.g:17704:5: ( RULE_INT )
        // InternalKim.g:17705:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred679_InternalKim

    // $ANTLR start synpred680_InternalKim
    public final void synpred680_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17726:4: ( ( 'l' ) )
        // InternalKim.g:17726:5: ( 'l' )
        {
        // InternalKim.g:17726:5: ( 'l' )
        // InternalKim.g:17727:5: 'l'
        {
        match(input,253,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred680_InternalKim

    // $ANTLR start synpred681_InternalKim
    public final void synpred681_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17744:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:17744:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17744:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:17745:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:17745:5: ( ( '.' ) )
        // InternalKim.g:17746:6: ( '.' )
        {
        // InternalKim.g:17746:6: ( '.' )
        // InternalKim.g:17747:7: '.'
        {
        match(input,114,FOLLOW_82); if (state.failed) return ;

        }


        }

        // InternalKim.g:17750:5: ( ( RULE_INT ) )
        // InternalKim.g:17751:6: ( RULE_INT )
        {
        // InternalKim.g:17751:6: ( RULE_INT )
        // InternalKim.g:17752:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred681_InternalKim

    // $ANTLR start synpred685_InternalKim
    public final void synpred685_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17793:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:17793:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17793:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:17794:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:17794:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:17795:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:17795:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:17796:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=254 && input.LA(1)<=255) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:17803:5: ( '+' | ( ( '-' ) ) )?
        int alt636=3;
        int LA636_0 = input.LA(1);

        if ( (LA636_0==251) ) {
            alt636=1;
        }
        else if ( (LA636_0==252) ) {
            alt636=2;
        }
        switch (alt636) {
            case 1 :
                // InternalKim.g:17804:6: '+'
                {
                match(input,251,FOLLOW_82); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:17806:6: ( ( '-' ) )
                {
                // InternalKim.g:17806:6: ( ( '-' ) )
                // InternalKim.g:17807:7: ( '-' )
                {
                // InternalKim.g:17807:7: ( '-' )
                // InternalKim.g:17808:8: '-'
                {
                match(input,252,FOLLOW_82); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:17812:5: ( ( RULE_INT ) )
        // InternalKim.g:17813:6: ( RULE_INT )
        {
        // InternalKim.g:17813:6: ( RULE_INT )
        // InternalKim.g:17814:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred685_InternalKim

    // $ANTLR start synpred696_InternalKim
    public final void synpred696_InternalKim_fragment() throws RecognitionException {   
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;

        // InternalKim.g:18096:4: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )
        // InternalKim.g:18096:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        {
        // InternalKim.g:18096:4: ( (lv_hour_8_0= RULE_INT ) )
        // InternalKim.g:18097:5: (lv_hour_8_0= RULE_INT )
        {
        // InternalKim.g:18097:5: (lv_hour_8_0= RULE_INT )
        // InternalKim.g:18098:6: lv_hour_8_0= RULE_INT
        {
        lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,111,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:18118:4: ( (lv_min_10_0= RULE_INT ) )
        // InternalKim.g:18119:5: (lv_min_10_0= RULE_INT )
        {
        // InternalKim.g:18119:5: (lv_min_10_0= RULE_INT )
        // InternalKim.g:18120:6: lv_min_10_0= RULE_INT
        {
        lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_209); if (state.failed) return ;

        }


        }

        // InternalKim.g:18136:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        int alt639=2;
        int LA639_0 = input.LA(1);

        if ( (LA639_0==111) ) {
            alt639=1;
        }
        switch (alt639) {
            case 1 :
                // InternalKim.g:18137:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                {
                otherlv_11=(Token)match(input,111,FOLLOW_82); if (state.failed) return ;
                // InternalKim.g:18141:5: ( (lv_sec_12_0= RULE_INT ) )
                // InternalKim.g:18142:6: (lv_sec_12_0= RULE_INT )
                {
                // InternalKim.g:18142:6: (lv_sec_12_0= RULE_INT )
                // InternalKim.g:18143:7: lv_sec_12_0= RULE_INT
                {
                lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_210); if (state.failed) return ;

                }


                }

                // InternalKim.g:18159:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                int alt638=2;
                int LA638_0 = input.LA(1);

                if ( (LA638_0==114) ) {
                    alt638=1;
                }
                switch (alt638) {
                    case 1 :
                        // InternalKim.g:18160:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                        {
                        otherlv_13=(Token)match(input,114,FOLLOW_82); if (state.failed) return ;
                        // InternalKim.g:18164:6: ( (lv_ms_14_0= RULE_INT ) )
                        // InternalKim.g:18165:7: (lv_ms_14_0= RULE_INT )
                        {
                        // InternalKim.g:18165:7: (lv_ms_14_0= RULE_INT )
                        // InternalKim.g:18166:8: lv_ms_14_0= RULE_INT
                        {
                        lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred696_InternalKim

    // $ANTLR start synpred717_InternalKim
    public final void synpred717_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:18533:4: (this_PathName_0= rulePathName )
        // InternalKim.g:18533:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred717_InternalKim

    // $ANTLR start synpred723_InternalKim
    public final void synpred723_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:18644:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:18644:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred723_InternalKim

    // $ANTLR start synpred724_InternalKim
    public final void synpred724_InternalKim_fragment() throws RecognitionException {   
        Token this_UPPERCASE_ID_7=null;

        // InternalKim.g:18652:4: (this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )
        // InternalKim.g:18652:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
        {
        this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred724_InternalKim

    // Delegated rules

    public final boolean synpred22_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred315_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred315_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred356_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred356_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred352_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred352_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred397_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred397_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred588_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred588_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred500_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred500_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred585_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred585_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred437_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred439_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred439_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred556_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred556_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred589_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred589_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred505_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred505_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred653_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred653_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred696_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred696_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred651_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred651_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred367_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred367_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred325_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred325_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred344_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred344_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred348_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred348_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred349_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred349_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred656_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred656_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred657_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred657_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred361_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred658_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred658_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred679_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred679_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred659_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred659_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred469_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred469_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred638_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred638_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred467_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred467_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred488_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred488_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred580_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred580_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred421_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred421_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred465_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred465_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred462_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred462_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred717_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred717_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred463_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred463_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred480_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred480_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred484_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred484_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred460_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred460_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred368_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred368_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred640_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred640_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred681_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred681_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred337_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred337_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred339_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred490_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred490_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred644_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred644_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred566_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred566_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred645_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred645_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred680_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred680_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred646_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred646_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred565_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred565_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred414_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred414_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred648_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred648_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred458_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred458_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred417_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred417_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred405_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred405_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred448_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred448_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred408_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred408_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred419_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred419_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred534_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred534_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred535_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred535_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred567_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred567_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred643_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred643_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred579_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred579_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred568_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred568_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred685_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred685_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred672_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred672_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred650_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred650_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred577_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred577_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred555_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred555_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred576_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred576_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred552_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred552_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred574_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred574_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred571_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred571_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred572_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred572_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred573_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred573_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred478_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred499_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred499_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred592_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred592_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred724_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred724_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred723_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred723_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred498_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred498_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred432_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred432_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred497_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred497_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred474_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred474_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred495_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred495_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred493_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred493_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA200 dfa200 = new DFA200(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA209 dfa209 = new DFA209(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA229 dfa229 = new DFA229(this);
    protected DFA234 dfa234 = new DFA234(this);
    protected DFA235 dfa235 = new DFA235(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA276 dfa276 = new DFA276(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA302 dfa302 = new DFA302(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA307 dfa307 = new DFA307(this);
    protected DFA309 dfa309 = new DFA309(this);
    protected DFA318 dfa318 = new DFA318(this);
    protected DFA316 dfa316 = new DFA316(this);
    protected DFA320 dfa320 = new DFA320(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA325 dfa325 = new DFA325(this);
    protected DFA334 dfa334 = new DFA334(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA342 dfa342 = new DFA342(this);
    protected DFA347 dfa347 = new DFA347(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA353 dfa353 = new DFA353(this);
    protected DFA379 dfa379 = new DFA379(this);
    protected DFA395 dfa395 = new DFA395(this);
    protected DFA486 dfa486 = new DFA486(this);
    protected DFA514 dfa514 = new DFA514(this);
    protected DFA519 dfa519 = new DFA519(this);
    protected DFA516 dfa516 = new DFA516(this);
    protected DFA531 dfa531 = new DFA531(this);
    static final String dfa_1s = "\100\uffff";
    static final String dfa_2s = "\1\10\77\uffff";
    static final String dfa_3s = "\1\17\4\0\73\uffff";
    static final String dfa_4s = "\1\u00f9\4\0\73\uffff";
    static final String dfa_5s = "\5\uffff\1\1\2\uffff\1\2\67\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\73\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\7\uffff\1\4\1\2\1\3\1\10\61\uffff\6\10\15\uffff\3\5\3\uffff\1\10\15\uffff\1\10\67\uffff\11\10\17\uffff\1\10\20\uffff\4\10\2\uffff\40\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\75\uffff";
    static final String dfa_9s = "\1\17\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00f9\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\10\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\62\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\7\uffff\3\61\1\72\61\uffff\1\64\5\61\23\uffff\1\2\15\uffff\1\73\67\uffff\11\2\17\uffff\1\2\20\uffff\4\2\2\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred7_InternalKim()) ) {s = 58;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_52 = input.LA(1);

                         
                        int index4_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 60;}

                         
                        input.seek(index4_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\54\uffff";
    static final String dfa_15s = "\1\4\3\0\1\uffff\37\0\10\uffff";
    static final String dfa_16s = "\1\u00fc\3\0\1\uffff\37\0\10\uffff";
    static final String dfa_17s = "\4\uffff\1\1\37\uffff\1\2\7\uffff";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\1\2\1\6\1\uffff\1\44\1\5\1\11\1\3\1\44\1\14\1\uffff\1\44\15\uffff\1\44\1\42\1\43\10\uffff\1\41\16\uffff\2\44\65\uffff\1\4\7\uffff\1\44\22\uffff\1\15\1\16\7\uffff\1\12\1\13\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\uffff\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\60\uffff\1\44\42\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA18_2 = input.LA(1);

                         
                        int index18_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA18_3 = input.LA(1);

                         
                        int index18_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA18_5 = input.LA(1);

                         
                        int index18_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA18_6 = input.LA(1);

                         
                        int index18_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA18_7 = input.LA(1);

                         
                        int index18_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA18_8 = input.LA(1);

                         
                        int index18_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA18_9 = input.LA(1);

                         
                        int index18_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA18_10 = input.LA(1);

                         
                        int index18_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA18_11 = input.LA(1);

                         
                        int index18_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA18_12 = input.LA(1);

                         
                        int index18_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA18_13 = input.LA(1);

                         
                        int index18_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA18_14 = input.LA(1);

                         
                        int index18_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA18_15 = input.LA(1);

                         
                        int index18_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA18_16 = input.LA(1);

                         
                        int index18_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA18_17 = input.LA(1);

                         
                        int index18_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA18_18 = input.LA(1);

                         
                        int index18_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA18_19 = input.LA(1);

                         
                        int index18_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA18_20 = input.LA(1);

                         
                        int index18_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA18_21 = input.LA(1);

                         
                        int index18_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA18_22 = input.LA(1);

                         
                        int index18_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA18_23 = input.LA(1);

                         
                        int index18_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA18_24 = input.LA(1);

                         
                        int index18_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA18_25 = input.LA(1);

                         
                        int index18_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA18_26 = input.LA(1);

                         
                        int index18_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA18_27 = input.LA(1);

                         
                        int index18_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA18_28 = input.LA(1);

                         
                        int index18_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA18_29 = input.LA(1);

                         
                        int index18_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA18_30 = input.LA(1);

                         
                        int index18_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA18_31 = input.LA(1);

                         
                        int index18_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA18_32 = input.LA(1);

                         
                        int index18_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA18_33 = input.LA(1);

                         
                        int index18_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA18_34 = input.LA(1);

                         
                        int index18_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA18_35 = input.LA(1);

                         
                        int index18_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\71\uffff";
    static final String dfa_21s = "\1\4\3\33\1\uffff\1\0\3\uffff\4\4\3\33\3\157\2\4\1\33\3\4\6\157\4\4\3\157\3\33\1\4\1\12\1\4\3\33\1\4\2\0\1\12\1\4\2\33\1\4\1\12\1\4";
    static final String dfa_22s = "\1\u00fc\3\162\1\uffff\1\0\3\uffff\4\13\6\162\2\u00a7\1\162\3\13\6\162\2\u00a7\2\13\6\162\1\13\1\12\1\13\3\162\1\u00fc\2\0\1\12\3\73\1\u00fc\1\12\1\u00fc";
    static final String dfa_23s = "\4\uffff\1\1\1\uffff\1\2\1\3\1\4\60\uffff";
    static final String dfa_24s = "\5\uffff\1\0\52\uffff\1\2\1\1\7\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\6\1\3\1\uffff\1\7\20\uffff\2\10\10\uffff\1\7\105\uffff\1\4\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7\123\uffff\2\6",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "\1\4\1\uffff\1\4\121\uffff\1\13\2\uffff\1\14",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\15\1\16\5\uffff\1\17",
            "\1\20\1\21\3\uffff\1\7\1\uffff\1\22",
            "\1\23\1\24\1\7\2\uffff\2\7\1\22",
            "\1\25\1\16\5\uffff\1\17",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\2\uffff\1\14",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\14",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\14",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\14",
            "\1\31\1\32\5\uffff\1\33",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\1\40\1\7\3\uffff\1\7\1\33",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\43\1\44\5\uffff\1\45",
            "\1\46\1\47\4\uffff\1\4\1\50",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\54\1\55\5\uffff\1\56",
            "\1\57",
            "\1\60\1\61\1\7\3\uffff\1\7\1\4",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\62\u0089\uffff\1\63",
            "\1\uffff",
            "\1\uffff",
            "\1\66",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\67\u0089\uffff\1\63",
            "\1\70",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\u00c0\uffff\1\63"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_49 = input.LA(1);

                         
                        int index17_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_49);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_48 = input.LA(1);

                         
                        int index17_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\57\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_28s = "\1\u00fc\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\33\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\35\uffff\1\3\13\uffff}>";
    static final String[] dfa_31s = {
            "\2\10\1\7\2\uffff\1\10\1\5\1\10\1\uffff\1\10\20\uffff\2\1\10\uffff\1\43\4\uffff\1\53\2\uffff\1\44\5\uffff\1\6\1\52\32\uffff\4\44\4\uffff\1\44\56\uffff\2\10\7\uffff\2\10\1\uffff\6\10\1\uffff\14\10\123\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_3 = input.LA(1);

                         
                        int index51_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_4 = input.LA(1);

                         
                        int index51_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_5 = input.LA(1);

                         
                        int index51_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_35 = input.LA(1);

                         
                        int index51_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalKim()) ) {s = 8;}

                        else if ( (synpred72_InternalKim()) ) {s = 46;}

                         
                        input.seek(index51_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\157\uffff";
    static final String dfa_33s = "\4\uffff\1\21\3\uffff\1\26\4\uffff\1\21\12\uffff\1\21\2\uffff\1\21\4\uffff\4\26\1\uffff\1\26\4\uffff\13\26\13\uffff\3\26\3\uffff\2\26\2\uffff\3\26\3\uffff\4\26\21\uffff\2\26\3\uffff\2\26\3\uffff";
    static final String dfa_34s = "\1\4\1\uffff\2\12\1\46\2\uffff\3\157\3\uffff\1\46\3\12\2\uffff\3\4\1\uffff\1\4\1\46\2\12\1\46\3\157\1\0\1\157\3\4\1\0\1\157\17\4\1\157\15\4\3\73\2\4\2\157\3\4\3\73\4\4\1\157\3\73\2\157\10\4\3\73\2\4\3\73\2\4\3\73";
    static final String dfa_35s = "\1\u00fc\1\uffff\2\12\1\u00ff\2\uffff\3\162\3\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\13\1\16\1\u00fc\1\uffff\1\16\1\u00ff\2\12\1\157\3\162\1\0\1\162\3\u00fc\1\0\1\162\1\u00fc\1\13\1\u00fc\1\13\13\u00fc\1\162\12\13\3\u00fc\3\162\2\u00fc\2\162\3\u00fc\3\162\4\u00fc\6\162\10\13\3\162\2\u00fc\3\162\2\u00fc\3\162";
    static final String dfa_36s = "\1\uffff\1\1\3\uffff\1\4\1\5\3\uffff\1\7\1\10\1\11\4\uffff\1\3\1\2\3\uffff\1\6\130\uffff";
    static final String dfa_37s = "\37\uffff\1\1\4\uffff\1\0\112\uffff}>";
    static final String[] dfa_38s = {
            "\1\10\1\7\1\5\2\uffff\1\6\1\4\1\11\1\uffff\1\6\20\uffff\2\1\10\uffff\1\6\4\uffff\1\14\2\uffff\1\12\6\uffff\1\13\32\uffff\4\12\4\uffff\1\12\56\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\123\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\22\15\uffff\2\22\71\uffff\1\21\2\uffff\1\16\u008a\uffff\1\15\1\17\1\20",
            "",
            "",
            "\1\24\2\uffff\1\23",
            "\1\25\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "",
            "",
            "",
            "\1\22\15\uffff\2\22\71\uffff\1\21\2\uffff\1\16\u008b\uffff\1\17\1\20",
            "\1\30",
            "\1\33\u00f0\uffff\1\31\1\32",
            "\1\33\u00f0\uffff\1\31\1\32",
            "",
            "",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\2\6\2\uffff\2\6\1\40\2\uffff\1\26",
            "\1\41\1\43\1\26\1\uffff\1\26\1\44\1\26\1\42\1\uffff\2\26\1\uffff\1\26\15\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\4\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\42\uffff\2\26",
            "",
            "\1\45\1\6\3\uffff\1\6\1\uffff\1\40\2\uffff\1\26",
            "\1\22\15\uffff\2\22\71\uffff\1\21\u008e\uffff\1\17\1\20",
            "\1\33",
            "\1\33",
            "\1\22\15\uffff\2\22\71\uffff\1\21",
            "\1\27\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "\1\uffff",
            "\1\46\2\uffff\1\6",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\50\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\50\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\51\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\1\uffff",
            "\1\46\2\uffff\1\6",
            "\1\52\1\53\1\26\1\uffff\3\26\1\54\1\uffff\1\26\2\uffff\1\26\15\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\4\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\42\uffff\2\26",
            "\1\55\1\56\5\uffff\1\57",
            "\1\60\1\61\1\26\1\uffff\3\26\1\62\1\uffff\1\26\2\uffff\1\26\15\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\4\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\42\uffff\2\26",
            "\1\63\1\64\1\26\2\uffff\2\26\1\65",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\67\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\67\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\71\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\71\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\71\2\uffff\1\47\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\73\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\74\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\73\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\76\2\uffff\1\75\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\76\2\uffff\1\75\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\1\76\2\uffff\1\77",
            "\1\100\1\101\5\uffff\1\102",
            "\1\103\1\104\3\uffff\1\26\1\uffff\1\105",
            "\1\106\1\107\1\26\2\uffff\2\26\1\105",
            "\1\110\1\111\3\uffff\1\26\1\uffff\1\65",
            "\1\112\1\113\5\uffff\1\114",
            "\1\115\1\116\3\uffff\1\26\1\uffff\1\117",
            "\1\120\1\121\1\26\2\uffff\2\26\1\117",
            "\1\122\1\123\1\26\3\uffff\1\26\1\124",
            "\1\125\1\126\5\uffff\1\127",
            "\1\130\1\131\5\uffff\1\124",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\67\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\67\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\67\2\uffff\1\66\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\134\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\134\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\1\76\2\uffff\1\77",
            "\1\76\2\uffff\1\77",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\73\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\73\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\73\2\uffff\1\72\26\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\123\uffff\2\26",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\136\2\uffff\1\137\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\136\2\uffff\1\137\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\76\2\uffff\1\75\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\76\2\uffff\1\75\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\1\76\2\uffff\1\77",
            "\1\6\63\uffff\1\141\2\uffff\1\140",
            "\1\6\63\uffff\1\141\2\uffff\1\140",
            "\1\6\63\uffff\1\141\2\uffff\1\140",
            "\1\76\2\uffff\1\77",
            "\1\76\2\uffff\1\77",
            "\1\142\1\143\5\uffff\1\144",
            "\2\26\4\uffff\1\6\1\26",
            "\1\145\1\146\1\26\3\uffff\1\26\1\144",
            "\1\147\1\150\5\uffff\1\151",
            "\2\26\4\uffff\1\6\1\26",
            "\1\152\1\153\1\26\3\uffff\1\26\1\151",
            "\1\154\1\155\5\uffff\1\156",
            "\2\26\4\uffff\1\6\1\26",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\1\6\63\uffff\1\133\2\uffff\1\132",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\134\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\134\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\136\2\uffff\1\137\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\17\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\136\2\uffff\1\137\4\uffff\1\26\4\uffff\17\26\6\uffff\12\26\1\uffff\14\26\123\uffff\2\26",
            "\1\6\63\uffff\1\141\2\uffff\1\140",
            "\1\6\63\uffff\1\141\2\uffff\1\140",
            "\1\6\63\uffff\1\141\2\uffff\1\140"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_36 = input.LA(1);

                         
                        int index56_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalKim()) ) {s = 6;}

                        else if ( (synpred88_InternalKim()) ) {s = 22;}

                         
                        input.seek(index56_36);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_31 = input.LA(1);

                         
                        int index56_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalKim()) ) {s = 6;}

                        else if ( (synpred88_InternalKim()) ) {s = 22;}

                         
                        input.seek(index56_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\51\uffff";
    static final String dfa_40s = "\1\uffff\1\4\3\uffff\2\10\1\uffff\1\15\3\2\5\uffff\5\2\6\uffff\2\2\13\uffff";
    static final String dfa_41s = "\1\4\1\157\1\uffff\1\4\1\uffff\3\4\1\0\3\4\1\0\1\uffff\10\4\3\157\5\4\1\157\3\73\2\157\2\4\3\73";
    static final String dfa_42s = "\1\13\1\162\1\uffff\1\u00fc\1\uffff\3\u00fc\1\0\3\u00fc\1\0\1\uffff\3\13\5\u00fc\3\162\3\13\2\u00fc\6\162\2\13\3\162";
    static final String dfa_43s = "\2\uffff\1\2\1\uffff\1\1\10\uffff\1\1\33\uffff";
    static final String dfa_44s = "\14\uffff\1\0\34\uffff}>";
    static final String[] dfa_45s = {
            "\1\1\1\2\5\uffff\1\2",
            "\1\3\2\uffff\1\2",
            "",
            "\1\5\2\4\1\uffff\3\4\1\6\1\uffff\1\4\1\2\1\uffff\1\4\15\uffff\2\4\10\uffff\1\4\7\uffff\1\4\6\uffff\2\4\31\uffff\4\4\2\uffff\1\4\1\uffff\1\4\33\uffff\1\4\4\uffff\1\4\15\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4\60\uffff\1\4\42\uffff\2\4",
            "",
            "\3\4\2\uffff\3\4\1\uffff\1\4\17\uffff\3\4\10\uffff\1\4\4\uffff\1\4\2\uffff\1\4\6\uffff\1\4\32\uffff\4\4\4\uffff\1\4\24\uffff\1\7\2\uffff\1\4\26\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\14\4\123\uffff\2\4",
            "\3\4\2\uffff\3\4\1\uffff\1\4\17\uffff\3\4\10\uffff\1\4\4\uffff\1\4\2\uffff\1\4\6\uffff\1\4\32\uffff\4\4\4\uffff\1\4\24\uffff\1\7\2\uffff\1\4\26\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\14\4\123\uffff\2\4",
            "\1\12\1\11\1\2\1\uffff\1\2\1\14\1\2\1\13\1\uffff\1\2\2\uffff\1\2\15\uffff\2\2\10\uffff\1\2\7\uffff\1\2\6\uffff\2\2\31\uffff\4\2\2\uffff\1\2\1\uffff\1\2\33\uffff\1\2\4\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\60\uffff\1\2\42\uffff\2\2",
            "\1\uffff",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\1\uffff",
            "",
            "\1\21\1\22\5\uffff\1\23",
            "\1\24\1\25\1\2\2\uffff\2\2\1\26",
            "\1\27\1\30\3\uffff\1\2\1\uffff\1\26",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\26\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\31\4\uffff\1\2\4\uffff\17\2\6\uffff\12\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\31\4\uffff\1\2\4\uffff\17\2\6\uffff\12\2\1\uffff\14\2\123\uffff\2\2",
            "\1\32\2\uffff\1\33",
            "\1\32\2\uffff\1\33",
            "\1\32\2\uffff\1\33",
            "\1\34\1\35\1\2\3\uffff\1\2\1\36",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\5\uffff\1\36",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\31\4\uffff\1\2\4\uffff\17\2\6\uffff\12\2\1\uffff\14\2\123\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\17\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\31\4\uffff\1\2\4\uffff\17\2\6\uffff\12\2\1\uffff\14\2\123\uffff\2\2",
            "\1\32\2\uffff\1\33",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\32\2\uffff\1\33",
            "\1\32\2\uffff\1\33",
            "\1\46\1\47\5\uffff\1\50",
            "\2\2\4\uffff\1\15\1\2",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_12 = input.LA(1);

                         
                        int index55_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\13\uffff";
    static final String dfa_47s = "\2\uffff\1\6\5\uffff\3\6";
    static final String dfa_48s = "\1\4\1\157\1\33\1\157\3\uffff\1\4\3\33";
    static final String dfa_49s = "\1\156\3\162\3\uffff\1\13\3\162";
    static final String dfa_50s = "\4\uffff\1\2\1\3\1\1\4\uffff";
    static final String dfa_51s = "\1\uffff\1\0\1\uffff\1\1\7\uffff}>";
    static final String[] dfa_52s = {
            "\1\1\1\2\3\uffff\1\5\1\uffff\1\3\142\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\4\2\uffff\1\4",
            "",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_46;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_1==111||LA57_1==114) ) {s = 4;}

                        else if ( (synpred91_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_3==111||LA57_3==114) ) {s = 4;}

                        else if ( (synpred91_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\60\uffff";
    static final String dfa_54s = "\1\4\55\0\2\uffff";
    static final String dfa_55s = "\1\u00fc\55\0\2\uffff";
    static final String dfa_56s = "\56\uffff\1\1\1\2";
    static final String dfa_57s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\2\uffff}>";
    static final String[] dfa_58s = {
            "\1\1\1\14\1\2\1\uffff\1\52\1\16\1\7\1\15\1\uffff\1\13\20\uffff\1\3\1\4\10\uffff\1\43\4\uffff\1\54\2\uffff\1\46\5\uffff\1\10\1\53\3\uffff\1\55\26\uffff\1\44\1\51\1\50\1\45\4\uffff\1\47\56\uffff\1\17\1\20\7\uffff\1\11\1\12\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\123\uffff\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_3 = input.LA(1);

                         
                        int index60_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_4 = input.LA(1);

                         
                        int index60_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_5 = input.LA(1);

                         
                        int index60_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_6 = input.LA(1);

                         
                        int index60_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA60_7 = input.LA(1);

                         
                        int index60_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA60_8 = input.LA(1);

                         
                        int index60_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA60_13 = input.LA(1);

                         
                        int index60_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA60_14 = input.LA(1);

                         
                        int index60_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA60_15 = input.LA(1);

                         
                        int index60_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA60_16 = input.LA(1);

                         
                        int index60_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA60_17 = input.LA(1);

                         
                        int index60_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA60_18 = input.LA(1);

                         
                        int index60_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA60_19 = input.LA(1);

                         
                        int index60_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA60_20 = input.LA(1);

                         
                        int index60_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA60_21 = input.LA(1);

                         
                        int index60_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA60_22 = input.LA(1);

                         
                        int index60_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA60_23 = input.LA(1);

                         
                        int index60_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA60_24 = input.LA(1);

                         
                        int index60_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA60_25 = input.LA(1);

                         
                        int index60_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA60_26 = input.LA(1);

                         
                        int index60_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA60_27 = input.LA(1);

                         
                        int index60_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA60_28 = input.LA(1);

                         
                        int index60_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA60_29 = input.LA(1);

                         
                        int index60_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA60_30 = input.LA(1);

                         
                        int index60_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA60_31 = input.LA(1);

                         
                        int index60_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA60_32 = input.LA(1);

                         
                        int index60_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA60_33 = input.LA(1);

                         
                        int index60_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA60_34 = input.LA(1);

                         
                        int index60_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA60_35 = input.LA(1);

                         
                        int index60_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA60_36 = input.LA(1);

                         
                        int index60_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA60_37 = input.LA(1);

                         
                        int index60_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA60_38 = input.LA(1);

                         
                        int index60_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA60_39 = input.LA(1);

                         
                        int index60_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA60_40 = input.LA(1);

                         
                        int index60_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA60_41 = input.LA(1);

                         
                        int index60_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA60_42 = input.LA(1);

                         
                        int index60_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA60_43 = input.LA(1);

                         
                        int index60_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA60_44 = input.LA(1);

                         
                        int index60_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA60_45 = input.LA(1);

                         
                        int index60_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\10\uffff";
    static final String dfa_60s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_61s = "\1\4\2\7\2\uffff\1\4\2\7";
    static final String dfa_62s = "\1\u00fc\1\162\1\111\2\uffff\1\u00fc\1\162\1\111";
    static final String dfa_63s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_64s = "\10\uffff}>";
    static final String[] dfa_65s = {
            "\1\1\1\3\1\2\1\uffff\4\3\1\uffff\1\3\20\uffff\2\3\10\uffff\1\3\4\uffff\1\3\2\uffff\1\3\5\uffff\2\3\3\uffff\1\3\26\uffff\4\3\4\uffff\1\3\56\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3\123\uffff\2\3",
            "\1\4\62\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\16\uffff\1\3\6\uffff\1\3\15\uffff\1\3\15\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3",
            "",
            "",
            "\1\6\1\3\1\7\1\uffff\4\3\1\uffff\1\3\20\uffff\2\3\10\uffff\1\3\4\uffff\1\3\2\uffff\1\3\5\uffff\2\3\3\uffff\1\3\26\uffff\4\3\4\uffff\1\3\56\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3\123\uffff\2\3",
            "\1\4\62\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\16\uffff\1\3\6\uffff\1\3\15\uffff\1\3\15\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_66s = "\32\uffff";
    static final String dfa_67s = "\4\uffff\1\25\10\uffff\2\25\1\23\6\uffff\1\25\2\uffff\1\25";
    static final String dfa_68s = "\1\4\1\uffff\2\12\1\7\10\uffff\2\7\1\4\2\12\4\uffff\1\7\2\12\1\7";
    static final String dfa_69s = "\1\u00fc\1\uffff\2\12\1\u0102\10\uffff\2\u00ff\1\u0103\2\u00fc\4\uffff\1\u00ff\2\12\1\162";
    static final String dfa_70s = "\1\uffff\1\1\3\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\5\uffff\1\2\1\4\1\5\1\3\4\uffff";
    static final String dfa_71s = "\32\uffff}>";
    static final String[] dfa_72s = {
            "\2\7\1\6\1\uffff\1\11\1\7\1\4\1\7\1\uffff\1\7\20\uffff\2\1\10\uffff\1\7\4\uffff\1\13\2\uffff\1\10\5\uffff\1\5\1\12\3\uffff\1\14\26\uffff\4\10\4\uffff\1\10\56\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7\123\uffff\1\2\1\3",
            "",
            "\1\15",
            "\1\15",
            "\1\25\16\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u0089\uffff\1\24\1\16\1\20\1\21\3\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\25\16\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u008a\uffff\1\16\1\20\1\21",
            "\1\25\16\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u008b\uffff\1\20\1\21",
            "\2\23\1\uffff\1\23\1\uffff\1\23\1\26\3\uffff\1\23\7\uffff\1\23\6\uffff\1\23\12\uffff\1\23\2\uffff\1\23\1\uffff\1\23\13\uffff\2\23\1\uffff\3\23\5\uffff\6\23\47\uffff\1\23\u0091\uffff\1\23",
            "\1\31\u00f0\uffff\1\27\1\30",
            "\1\31\u00f0\uffff\1\27\1\30",
            "",
            "",
            "",
            "",
            "\1\25\16\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23\u008b\uffff\1\20\1\21",
            "\1\31",
            "\1\31",
            "\1\25\16\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23"
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )";
        }
    }
    static final String dfa_73s = "\56\uffff";
    static final String dfa_74s = "\1\7\55\uffff";
    static final String dfa_75s = "\1\4\6\0\47\uffff";
    static final String dfa_76s = "\1\u00a7\6\0\47\uffff";
    static final String dfa_77s = "\7\uffff\1\2\45\uffff\1\1";
    static final String dfa_78s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\47\uffff}>";
    static final String[] dfa_79s = {
            "\3\7\2\uffff\1\7\1\uffff\1\7\1\uffff\1\7\10\uffff\1\7\12\uffff\1\7\6\uffff\2\7\1\uffff\1\7\20\uffff\3\7\5\uffff\1\1\1\2\1\3\1\4\1\5\1\6\44\uffff\1\7\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_73;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "3410:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\70\uffff";
    static final String dfa_81s = "\1\22\67\uffff";
    static final String dfa_82s = "\1\4\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_83s = "\1\u00fc\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_84s = "\1\uffff\3\1\1\uffff\3\1\4\uffff\1\1\2\uffff\3\1\1\2\45\uffff";
    static final String dfa_85s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\51\uffff}>";
    static final String[] dfa_86s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\7\1\22\10\uffff\1\22\6\uffff\1\10\1\5\1\6\1\uffff\1\22\6\uffff\1\16\1\22\1\uffff\1\22\13\uffff\1\21\1\17\3\uffff\3\22\5\uffff\6\22\44\uffff\1\22\32\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\14\22\60\uffff\1\20\42\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_80;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "4183:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==251) && (synpred164_InternalKim())) {s = 1;}

                        else if ( (LA99_0==252) && (synpred164_InternalKim())) {s = 2;}

                        else if ( (LA99_0==RULE_INT) && (synpred164_InternalKim())) {s = 3;}

                        else if ( (LA99_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA99_0==30) && (synpred164_InternalKim())) {s = 5;}

                        else if ( (LA99_0==31) && (synpred164_InternalKim())) {s = 6;}

                        else if ( (LA99_0==RULE_ID) && (synpred164_InternalKim())) {s = 7;}

                        else if ( (LA99_0==29) ) {s = 8;}

                        else if ( (LA99_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA99_0==RULE_UPPERCASE_ID) ) {s = 10;}

                        else if ( (LA99_0==RULE_LOWERCASE_DASHID) ) {s = 11;}

                        else if ( (LA99_0==RULE_EXPR) && (synpred164_InternalKim())) {s = 12;}

                        else if ( (LA99_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA99_0==40) ) {s = 14;}

                        else if ( (LA99_0==56) && (synpred164_InternalKim())) {s = 15;}

                        else if ( (LA99_0==216) && (synpred164_InternalKim())) {s = 16;}

                        else if ( (LA99_0==55) && (synpred164_InternalKim())) {s = 17;}

                        else if ( (LA99_0==EOF||LA99_0==RULE_UPPERCASE_PATH||LA99_0==22||LA99_0==33||LA99_0==41||LA99_0==43||(LA99_0>=60 && LA99_0<=62)||(LA99_0>=68 && LA99_0<=73)||LA99_0==110||(LA99_0>=137 && LA99_0<=138)||(LA99_0>=146 && LA99_0<=147)||(LA99_0>=149 && LA99_0<=154)||(LA99_0>=156 && LA99_0<=167)) ) {s = 18;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_4 = input.LA(1);

                         
                        int index99_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_8 = input.LA(1);

                         
                        int index99_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA99_9 = input.LA(1);

                         
                        int index99_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA99_10 = input.LA(1);

                         
                        int index99_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA99_11 = input.LA(1);

                         
                        int index99_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA99_13 = input.LA(1);

                         
                        int index99_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA99_14 = input.LA(1);

                         
                        int index99_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\20\uffff";
    static final String dfa_88s = "\1\4\10\uffff\2\0\5\uffff";
    static final String dfa_89s = "\1\u00fc\10\uffff\2\0\5\uffff";
    static final String dfa_90s = "\1\uffff\1\1\11\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_91s = "\11\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_92s = {
            "\1\11\1\12\1\1\1\uffff\1\14\1\15\1\1\1\13\1\1\20\uffff\3\1\10\uffff\1\16\16\uffff\1\17\u00c3\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_9 = input.LA(1);

                         
                        int index106_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalKim()) ) {s = 11;}

                        else if ( (synpred175_InternalKim()) ) {s = 13;}

                         
                        input.seek(index106_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA106_10 = input.LA(1);

                         
                        int index106_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalKim()) ) {s = 11;}

                        else if ( (synpred175_InternalKim()) ) {s = 13;}

                         
                        input.seek(index106_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\1\4\3\50\2\uffff\1\4\1\uffff\3\50";
    static final String dfa_94s = "\1\156\3\162\2\uffff\1\13\1\uffff\3\162";
    static final String dfa_95s = "\4\uffff\1\2\1\3\1\uffff\1\1\3\uffff";
    static final String dfa_96s = "\13\uffff}>";
    static final String[] dfa_97s = {
            "\1\1\1\2\1\5\1\uffff\1\4\2\uffff\1\3\142\uffff\1\5",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6"
    };
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )";
        }
    }
    static final String dfa_98s = "\66\uffff";
    static final String dfa_99s = "\1\3\65\uffff";
    static final String dfa_100s = "\1\4\2\0\63\uffff";
    static final String dfa_101s = "\1\u00a7\2\0\63\uffff";
    static final String dfa_102s = "\3\uffff\1\2\61\uffff\1\1";
    static final String dfa_103s = "\1\uffff\1\0\1\1\63\uffff}>";
    static final String[] dfa_104s = {
            "\3\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\10\uffff\1\3\6\uffff\1\3\3\uffff\3\3\3\uffff\5\3\6\uffff\1\1\1\2\10\uffff\3\3\5\uffff\6\3\1\uffff\1\3\42\uffff\1\3\32\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "4706:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred185_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_2 = input.LA(1);

                         
                        int index113_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred185_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index113_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\21\uffff";
    static final String dfa_106s = "\1\26\1\uffff\1\4\16\uffff";
    static final String dfa_107s = "\1\155\1\uffff\1\u00d8\16\uffff";
    static final String dfa_108s = "\1\uffff\1\11\1\uffff\1\3\1\4\1\5\1\6\1\7\3\10\5\2\1\1";
    static final String dfa_109s = "\1\1\1\uffff\1\0\16\uffff}>";
    static final String[] dfa_110s = {
            "\1\1\12\uffff\1\2\11\uffff\1\1\12\uffff\1\5\54\uffff\1\3\1\4\2\uffff\1\6\1\uffff\1\7\1\10\1\uffff\1\11\1\1",
            "",
            "\1\15\1\16\5\uffff\1\17\34\uffff\1\13\4\uffff\1\14\64\uffff\1\20\165\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "()* loopback of 5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA131_2 == 216 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 10;}

                        else if ( LA131_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 11;}

                        else if ( LA131_2 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 12;}

                        else if ( LA131_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 13;}

                        else if ( LA131_2 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 14;}

                        else if ( LA131_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 15;}

                        else if ( LA131_2 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 16;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_0==22||LA131_0==43||LA131_0==109) ) {s = 1;}

                        else if ( (LA131_0==33) ) {s = 2;}

                        else if ( LA131_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 3;}

                        else if ( LA131_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 4;}

                        else if ( LA131_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 5;}

                        else if ( LA131_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 6;}

                        else if ( LA131_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 7;}

                        else if ( LA131_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 8;}

                        else if ( LA131_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_111s = "\12\uffff";
    static final String dfa_112s = "\1\uffff\3\6\3\uffff\3\6";
    static final String dfa_113s = "\5\4\2\uffff\3\4";
    static final String dfa_114s = "\1\13\3\u00a7\1\13\2\uffff\3\u00a7";
    static final String dfa_115s = "\5\uffff\1\2\1\1\3\uffff";
    static final String dfa_116s = "\12\uffff}>";
    static final String[] dfa_117s = {
            "\1\1\1\2\5\uffff\1\3",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\1\7\1\10\5\uffff\1\11",
            "",
            "",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6"
    };

    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_111;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "6031:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )";
        }
    }

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_111;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "6060:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )";
        }
    }
    static final String dfa_118s = "\42\uffff";
    static final String dfa_119s = "\1\1\41\uffff";
    static final String dfa_120s = "\1\4\41\uffff";
    static final String dfa_121s = "\1\u00a7\41\uffff";
    static final String dfa_122s = "\1\uffff\1\4\36\1\1\2\1\3";
    static final String dfa_123s = "\1\0\41\uffff}>";
    static final String[] dfa_124s = {
            "\1\2\1\3\1\7\2\uffff\1\6\1\uffff\1\4\1\uffff\1\12\10\uffff\1\1\12\uffff\1\40\6\uffff\1\37\1\1\1\uffff\1\41\102\uffff\1\5\32\uffff\1\13\1\14\7\uffff\1\10\1\11\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_118;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()+ loopback of 6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_0 = input.LA(1);

                         
                        int index164_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA164_0==EOF||LA164_0==22||LA164_0==41) ) {s = 1;}

                        else if ( LA164_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA164_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 3;}

                        else if ( LA164_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 4;}

                        else if ( LA164_0 == 110 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 5;}

                        else if ( LA164_0 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 6;}

                        else if ( LA164_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 7;}

                        else if ( LA164_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 8;}

                        else if ( LA164_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 9;}

                        else if ( LA164_0 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 10;}

                        else if ( LA164_0 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 11;}

                        else if ( LA164_0 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 12;}

                        else if ( LA164_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 13;}

                        else if ( LA164_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 14;}

                        else if ( LA164_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( LA164_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 16;}

                        else if ( LA164_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 17;}

                        else if ( LA164_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 18;}

                        else if ( LA164_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 19;}

                        else if ( LA164_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 20;}

                        else if ( LA164_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 21;}

                        else if ( LA164_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 22;}

                        else if ( LA164_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 23;}

                        else if ( LA164_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 24;}

                        else if ( LA164_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 25;}

                        else if ( LA164_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 26;}

                        else if ( LA164_0 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 27;}

                        else if ( LA164_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 28;}

                        else if ( LA164_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( LA164_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 30;}

                        else if ( LA164_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( LA164_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 32;}

                        else if ( LA164_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {s = 33;}

                         
                        input.seek(index164_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_125s = "\67\uffff";
    static final String dfa_126s = "\1\4\3\33\1\uffff\1\4\1\uffff\4\4\3\33\3\157\1\33\5\4\6\157\4\4\3\157\3\33\1\4\1\12\1\4\3\33\3\4\1\12\1\4\2\33\1\4\1\12\1\4";
    static final String dfa_127s = "\1\u00a7\3\162\1\uffff\1\u00a7\1\uffff\4\13\7\162\2\u00a7\3\13\6\162\2\u00a7\2\13\6\162\1\13\1\12\1\13\3\162\1\u00fc\2\u00a7\1\12\3\73\1\u00fc\1\12\1\u00fc";
    static final String dfa_128s = "\4\uffff\1\1\1\uffff\1\2\60\uffff";
    static final String dfa_129s = "\67\uffff}>";
    static final String[] dfa_130s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\uffff\1\3\1\uffff\1\6\32\uffff\1\6\105\uffff\1\4\32\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\1\4\37\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "\1\4\123\uffff\1\12\2\uffff\1\11",
            "\1\4\37\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\15\uffff\1\4\14\uffff\1\6\22\uffff\1\4\17\uffff\1\6\34\uffff\1\6\10\uffff\2\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "",
            "\1\13\1\14\5\uffff\1\15",
            "\1\16\1\17\3\uffff\1\6\1\uffff\1\20",
            "\1\21\1\14\5\uffff\1\15",
            "\1\22\1\23\1\6\2\uffff\2\6\1\20",
            "\1\4\37\uffff\1\4\63\uffff\1\10\2\uffff\1\11",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\32\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\32\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\27\1\30\5\uffff\1\31",
            "\1\32\1\33\5\uffff\1\34",
            "\1\35\1\36\1\6\3\uffff\1\6\1\31",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\32\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\32\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\41\1\42\5\uffff\1\43",
            "\1\44\1\45\4\uffff\1\4\1\46",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\52\1\53\5\uffff\1\54",
            "\1\55",
            "\1\56\1\57\1\6\3\uffff\1\6\1\4",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\62\1\63\25\uffff\1\4\37\uffff\1\51\66\uffff\1\60\u0089\uffff\1\61",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\15\uffff\1\4\14\uffff\1\6\7\uffff\1\4\32\uffff\1\6\34\uffff\1\6\7\uffff\3\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\15\uffff\1\4\14\uffff\1\6\7\uffff\1\4\32\uffff\1\6\34\uffff\1\6\7\uffff\3\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\64",
            "\1\62\1\63\25\uffff\1\4\37\uffff\1\51",
            "\1\4\37\uffff\1\51",
            "\1\4\37\uffff\1\51",
            "\1\62\1\63\25\uffff\1\4\37\uffff\1\51\66\uffff\1\65\u0089\uffff\1\61",
            "\1\66",
            "\1\62\1\63\25\uffff\1\4\37\uffff\1\51\u00c0\uffff\1\61"
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_131s = "\14\uffff";
    static final String dfa_132s = "\1\4\13\uffff";
    static final String dfa_133s = "\1\4\3\33\1\uffff\1\4\1\uffff\1\4\4\33";
    static final String dfa_134s = "\1\u00a7\3\162\1\uffff\1\13\1\uffff\1\13\4\162";
    static final String dfa_135s = "\4\uffff\1\2\1\uffff\1\1\5\uffff";
    static final String dfa_136s = "\14\uffff}>";
    static final String[] dfa_137s = {
            "\1\1\1\2\1\4\2\uffff\1\4\1\uffff\1\3\1\uffff\1\4\10\uffff\1\4\12\uffff\1\4\6\uffff\2\4\1\uffff\1\4\102\uffff\1\4\32\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\13\1\11\5\uffff\1\12",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_131;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "6792:8: ( (lv_accessor_24_0= ruleFunction ) )?";
        }
    }
    static final String dfa_138s = "\45\uffff";
    static final String dfa_139s = "\1\4\6\uffff\34\0\2\uffff";
    static final String dfa_140s = "\1\u00fc\6\uffff\34\0\2\uffff";
    static final String dfa_141s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_142s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\2\uffff}>";
    static final String[] dfa_143s = {
            "\1\13\1\12\1\1\1\uffff\1\1\1\15\1\1\1\14\1\uffff\1\11\20\uffff\2\1\10\uffff\1\42\115\uffff\1\44\22\uffff\1\16\1\17\7\uffff\1\7\1\10\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\123\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_7 = input.LA(1);

                         
                        int index165_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_8 = input.LA(1);

                         
                        int index165_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_9 = input.LA(1);

                         
                        int index165_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA165_10 = input.LA(1);

                         
                        int index165_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA165_11 = input.LA(1);

                         
                        int index165_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA165_12 = input.LA(1);

                         
                        int index165_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA165_13 = input.LA(1);

                         
                        int index165_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA165_14 = input.LA(1);

                         
                        int index165_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA165_15 = input.LA(1);

                         
                        int index165_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA165_16 = input.LA(1);

                         
                        int index165_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA165_17 = input.LA(1);

                         
                        int index165_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA165_18 = input.LA(1);

                         
                        int index165_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA165_19 = input.LA(1);

                         
                        int index165_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA165_20 = input.LA(1);

                         
                        int index165_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA165_21 = input.LA(1);

                         
                        int index165_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA165_22 = input.LA(1);

                         
                        int index165_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA165_23 = input.LA(1);

                         
                        int index165_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA165_24 = input.LA(1);

                         
                        int index165_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA165_25 = input.LA(1);

                         
                        int index165_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA165_26 = input.LA(1);

                         
                        int index165_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA165_27 = input.LA(1);

                         
                        int index165_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA165_28 = input.LA(1);

                         
                        int index165_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA165_29 = input.LA(1);

                         
                        int index165_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA165_30 = input.LA(1);

                         
                        int index165_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA165_31 = input.LA(1);

                         
                        int index165_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA165_32 = input.LA(1);

                         
                        int index165_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA165_33 = input.LA(1);

                         
                        int index165_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA165_34 = input.LA(1);

                         
                        int index165_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\113\uffff";
    static final String dfa_145s = "\1\1\35\uffff\1\1\54\uffff";
    static final String dfa_146s = "\1\4\1\uffff\1\4\33\uffff\1\4\2\50\34\uffff\3\4\3\50\3\uffff\1\0\4\uffff";
    static final String dfa_147s = "\1\u00fc\1\uffff\1\u00fc\33\uffff\1\u00a7\2\162\34\uffff\3\13\3\162\3\uffff\1\0\4\uffff";
    static final String dfa_148s = "\1\uffff\1\7\1\uffff\1\1\2\2\22\3\2\4\3\5\1\6\3\uffff\34\3\6\uffff\3\3\1\uffff\4\3";
    static final String dfa_149s = "\1\3\1\uffff\1\0\73\uffff\1\4\1\2\6\uffff\1\1\4\uffff}>";
    static final String[] dfa_150s = {
            "\3\1\2\uffff\1\1\1\34\1\1\1\uffff\1\1\10\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\3\2\uffff\2\1\1\uffff\1\1\4\uffff\1\14\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\1\17\1\20\1\21\1\22\1\23\17\uffff\1\1\6\uffff\1\1\1\uffff\1\5\1\30\1\31\1\35\1\uffff\1\24\1\25\1\26\1\27\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\123\uffff\1\32\1\33",
            "",
            "\1\36\1\37\3\uffff\1\47\1\43\1\40\1\uffff\1\46\32\uffff\1\74\140\uffff\1\50\1\51\7\uffff\1\44\1\45\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\123\uffff\1\41\1\42",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\10\uffff\1\1\6\uffff\1\1\3\uffff\1\1\6\uffff\2\1\1\uffff\1\1\20\uffff\3\1\5\uffff\6\1\44\uffff\1\1\1\76\2\uffff\1\75\26\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\100\1\101\5\uffff\1\102",
            "\1\103\1\104\3\uffff\1\106\1\uffff\1\105",
            "\1\107\1\110\1\112\2\uffff\1\106\1\111\1\105",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_144;
            this.eof = dfa_145;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "()* loopback of 6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_2 = input.LA(1);

                         
                        int index172_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA172_2==RULE_LOWERCASE_ID) ) {s = 30;}

                        else if ( (LA172_2==RULE_UPPERCASE_ID) ) {s = 31;}

                        else if ( (LA172_2==RULE_LOWERCASE_DASHID) ) {s = 32;}

                        else if ( LA172_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 33;}

                        else if ( LA172_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 34;}

                        else if ( LA172_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 35;}

                        else if ( LA172_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 36;}

                        else if ( LA172_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 37;}

                        else if ( LA172_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 38;}

                        else if ( LA172_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 39;}

                        else if ( LA172_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 40;}

                        else if ( LA172_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 41;}

                        else if ( LA172_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 42;}

                        else if ( LA172_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 43;}

                        else if ( LA172_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 44;}

                        else if ( LA172_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 45;}

                        else if ( LA172_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 46;}

                        else if ( LA172_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 47;}

                        else if ( LA172_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 48;}

                        else if ( LA172_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 49;}

                        else if ( LA172_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 50;}

                        else if ( LA172_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 51;}

                        else if ( LA172_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 52;}

                        else if ( LA172_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 53;}

                        else if ( LA172_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 54;}

                        else if ( LA172_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                        else if ( LA172_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 56;}

                        else if ( LA172_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 57;}

                        else if ( LA172_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 58;}

                        else if ( LA172_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 59;}

                        else if ( LA172_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 60;}

                         
                        input.seek(index172_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA172_70 = input.LA(1);

                         
                        int index172_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 74;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_70);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA172_63 = input.LA(1);

                         
                        int index172_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA172_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 71;}

                        else if ( LA172_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 72;}

                        else if ( LA172_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 69;}

                        else if ( (LA172_63==RULE_CAMELCASE_ID) ) {s = 70;}

                        else if ( LA172_63 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 73;}

                        else if ( LA172_63 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 74;}

                         
                        input.seek(index172_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA172_0 = input.LA(1);

                         
                        int index172_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA172_0==EOF||(LA172_0>=RULE_LOWERCASE_ID && LA172_0<=RULE_STRING)||LA172_0==RULE_CAMELCASE_ID||LA172_0==RULE_LOWERCASE_DASHID||LA172_0==RULE_UPPERCASE_PATH||LA172_0==22||LA172_0==29||(LA172_0>=32 && LA172_0<=33)||(LA172_0>=40 && LA172_0<=41)||LA172_0==43||LA172_0==60||LA172_0==62||(LA172_0>=68 && LA172_0<=73)||LA172_0==110||LA172_0==117||(LA172_0>=137 && LA172_0<=138)||(LA172_0>=146 && LA172_0<=147)||(LA172_0>=149 && LA172_0<=154)||(LA172_0>=156 && LA172_0<=167)) ) {s = 1;}

                        else if ( (LA172_0==61) ) {s = 2;}

                        else if ( LA172_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA172_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA172_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA172_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA172_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA172_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA172_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 9;}

                        else if ( LA172_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA172_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 11;}

                        else if ( LA172_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 12;}

                        else if ( LA172_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA172_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 14;}

                        else if ( LA172_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 15;}

                        else if ( LA172_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 16;}

                        else if ( LA172_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 17;}

                        else if ( LA172_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 18;}

                        else if ( LA172_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 19;}

                        else if ( LA172_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 20;}

                        else if ( LA172_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 21;}

                        else if ( LA172_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 22;}

                        else if ( LA172_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 23;}

                        else if ( LA172_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA172_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA172_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 26;}

                        else if ( LA172_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA172_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                        else if ( LA172_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 29;}

                         
                        input.seek(index172_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA172_62 = input.LA(1);

                         
                        int index172_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA172_62 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 67;}

                        else if ( LA172_62 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 68;}

                        else if ( LA172_62 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 69;}

                        else if ( (LA172_62==RULE_CAMELCASE_ID) ) {s = 70;}

                         
                        input.seek(index172_62);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\114\uffff";
    static final String dfa_152s = "\1\1\113\uffff";
    static final String dfa_153s = "\1\4\3\uffff\1\0\56\uffff\22\0\7\uffff";
    static final String dfa_154s = "\1\u00fc\3\uffff\1\0\56\uffff\22\0\7\uffff";
    static final String dfa_155s = "\1\uffff\1\2\111\uffff\1\1";
    static final String dfa_156s = "\4\uffff\1\0\56\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\7\uffff}>";
    static final String[] dfa_157s = {
            "\3\1\2\uffff\3\1\1\uffff\1\1\10\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\2\1\1\uffff\1\1\4\uffff\1\71\5\uffff\1\1\5\uffff\1\1\1\4\1\1\5\uffff\6\1\10\uffff\1\63\1\64\1\65\1\66\1\67\1\70\1\72\1\73\1\74\1\75\1\76\1\77\1\100\17\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\uffff\1\101\1\102\1\103\1\104\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[][] dfa_157 = unpackEncodedStringArray(dfa_157s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_151;
            this.eof = dfa_152;
            this.min = dfa_153;
            this.max = dfa_154;
            this.accept = dfa_155;
            this.special = dfa_156;
            this.transition = dfa_157;
        }
        public String getDescription() {
            return "()* loopback of 7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA169_4 = input.LA(1);

                         
                        int index169_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA169_51 = input.LA(1);

                         
                        int index169_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_51);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA169_52 = input.LA(1);

                         
                        int index169_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_52);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA169_53 = input.LA(1);

                         
                        int index169_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_53);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA169_54 = input.LA(1);

                         
                        int index169_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_54);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA169_55 = input.LA(1);

                         
                        int index169_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_55);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA169_56 = input.LA(1);

                         
                        int index169_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_56);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA169_57 = input.LA(1);

                         
                        int index169_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_57);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA169_58 = input.LA(1);

                         
                        int index169_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_58);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA169_59 = input.LA(1);

                         
                        int index169_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_59);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA169_60 = input.LA(1);

                         
                        int index169_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_60);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA169_61 = input.LA(1);

                         
                        int index169_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_61);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA169_62 = input.LA(1);

                         
                        int index169_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_62);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA169_63 = input.LA(1);

                         
                        int index169_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_63);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA169_64 = input.LA(1);

                         
                        int index169_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_64);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA169_65 = input.LA(1);

                         
                        int index169_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_65);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA169_66 = input.LA(1);

                         
                        int index169_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_66);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA169_67 = input.LA(1);

                         
                        int index169_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_67);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA169_68 = input.LA(1);

                         
                        int index169_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 169, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_158s = "\125\uffff";
    static final String dfa_159s = "\1\1\124\uffff";
    static final String dfa_160s = "\1\4\5\uffff\1\0\34\uffff\3\0\6\uffff\6\0\13\uffff\1\0\27\uffff";
    static final String dfa_161s = "\1\u00fc\5\uffff\1\0\34\uffff\3\0\6\uffff\6\0\13\uffff\1\0\27\uffff";
    static final String dfa_162s = "\1\uffff\1\4\105\uffff\2\1\13\2\1\3";
    static final String dfa_163s = "\1\0\5\uffff\1\1\34\uffff\1\2\1\3\1\4\6\uffff\1\5\1\6\1\7\1\10\1\11\1\12\13\uffff\1\13\27\uffff}>";
    static final String[] dfa_164s = {
            "\3\1\1\uffff\2\1\1\43\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\1\6\uffff\3\1\1\uffff\3\1\3\uffff\5\1\1\uffff\1\1\2\uffff\1\56\5\uffff\1\107\2\1\3\uffff\1\1\1\75\1\1\5\uffff\6\1\10\uffff\1\54\1\61\1\60\1\55\1\111\1\112\1\6\1\113\1\57\1\114\1\115\1\116\1\117\27\uffff\1\1\1\110\3\uffff\1\1\1\120\1\121\1\122\1\123\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\42\uffff\1\44\1\45",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[][] dfa_164 = unpackEncodedStringArray(dfa_164s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_158;
            this.eof = dfa_159;
            this.min = dfa_160;
            this.max = dfa_161;
            this.accept = dfa_162;
            this.special = dfa_163;
            this.transition = dfa_164;
        }
        public String getDescription() {
            return "()* loopback of 7379:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_0 = input.LA(1);

                         
                        int index177_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA177_0==EOF||(LA177_0>=RULE_LOWERCASE_ID && LA177_0<=RULE_STRING)||(LA177_0>=RULE_EXPR && LA177_0<=RULE_CAMELCASE_ID)||LA177_0==RULE_LOWERCASE_DASHID||LA177_0==RULE_UPPERCASE_PATH||(LA177_0>=RULE_TEMPLATE_VAR && LA177_0<=RULE_OPTION_KEY)||LA177_0==22||(LA177_0>=29 && LA177_0<=31)||(LA177_0>=33 && LA177_0<=35)||(LA177_0>=39 && LA177_0<=43)||LA177_0==45||(LA177_0>=55 && LA177_0<=56)||LA177_0==60||LA177_0==62||(LA177_0>=68 && LA177_0<=73)||LA177_0==118||LA177_0==123||(LA177_0>=137 && LA177_0<=138)||(LA177_0>=145 && LA177_0<=147)||(LA177_0>=149 && LA177_0<=154)||(LA177_0>=156 && LA177_0<=167)||LA177_0==216) ) {s = 1;}

                        else if ( (LA177_0==88) ) {s = 6;}

                        else if ( (LA177_0==RULE_INT) ) {s = 35;}

                        else if ( (LA177_0==251) ) {s = 36;}

                        else if ( (LA177_0==252) ) {s = 37;}

                        else if ( (LA177_0==82) ) {s = 44;}

                        else if ( (LA177_0==85) ) {s = 45;}

                        else if ( (LA177_0==48) ) {s = 46;}

                        else if ( (LA177_0==90) ) {s = 47;}

                        else if ( (LA177_0==84) ) {s = 48;}

                        else if ( (LA177_0==83) ) {s = 49;}

                        else if ( (LA177_0==61) ) {s = 61;}

                        else if ( LA177_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 71;}

                        else if ( LA177_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 72;}

                        else if ( LA177_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 73;}

                        else if ( LA177_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 74;}

                        else if ( LA177_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 75;}

                        else if ( LA177_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 76;}

                        else if ( LA177_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 77;}

                        else if ( LA177_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 78;}

                        else if ( LA177_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 79;}

                        else if ( LA177_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 80;}

                        else if ( LA177_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 81;}

                        else if ( LA177_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 82;}

                        else if ( LA177_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                         
                        input.seek(index177_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA177_6 = input.LA(1);

                         
                        int index177_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA177_35 = input.LA(1);

                         
                        int index177_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred304_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_35);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA177_36 = input.LA(1);

                         
                        int index177_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred304_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_36);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA177_37 = input.LA(1);

                         
                        int index177_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred304_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_37);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA177_44 = input.LA(1);

                         
                        int index177_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_44);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA177_45 = input.LA(1);

                         
                        int index177_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_45);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA177_46 = input.LA(1);

                         
                        int index177_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_46);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA177_47 = input.LA(1);

                         
                        int index177_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_47);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA177_48 = input.LA(1);

                         
                        int index177_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_48);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA177_49 = input.LA(1);

                         
                        int index177_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_49);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA177_61 = input.LA(1);

                         
                        int index177_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred303_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 83;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_61);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_165s = "\1\4\5\uffff\1\0\45\uffff\6\0\13\uffff\1\0\13\uffff\13\0\1\uffff";
    static final String dfa_166s = "\1\u00fc\5\uffff\1\0\45\uffff\6\0\13\uffff\1\0\13\uffff\13\0\1\uffff";
    static final String dfa_167s = "\1\uffff\1\2\122\uffff\1\1";
    static final String dfa_168s = "\6\uffff\1\0\45\uffff\1\1\1\2\1\3\1\4\1\5\1\6\13\uffff\1\7\13\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_169s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\1\6\uffff\3\1\1\uffff\3\1\3\uffff\5\1\1\uffff\1\1\2\uffff\1\56\5\uffff\3\1\3\uffff\1\1\1\75\1\1\5\uffff\6\1\10\uffff\1\54\1\61\1\60\1\55\1\111\1\112\1\6\1\113\1\57\1\114\1\115\1\116\1\117\27\uffff\2\1\3\uffff\1\1\1\120\1\121\1\122\1\123\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_158;
            this.eof = dfa_159;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "()* loopback of 7522:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_6 = input.LA(1);

                         
                        int index176_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_44 = input.LA(1);

                         
                        int index176_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_44);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA176_45 = input.LA(1);

                         
                        int index176_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_45);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA176_46 = input.LA(1);

                         
                        int index176_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_46);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA176_47 = input.LA(1);

                         
                        int index176_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_47);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA176_48 = input.LA(1);

                         
                        int index176_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_48);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA176_49 = input.LA(1);

                         
                        int index176_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_49);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA176_61 = input.LA(1);

                         
                        int index176_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_61);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA176_73 = input.LA(1);

                         
                        int index176_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_73);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA176_74 = input.LA(1);

                         
                        int index176_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_74);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA176_75 = input.LA(1);

                         
                        int index176_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_75);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA176_76 = input.LA(1);

                         
                        int index176_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_76);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA176_77 = input.LA(1);

                         
                        int index176_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_77);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA176_78 = input.LA(1);

                         
                        int index176_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_78);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA176_79 = input.LA(1);

                         
                        int index176_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_79);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA176_80 = input.LA(1);

                         
                        int index176_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_80);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA176_81 = input.LA(1);

                         
                        int index176_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_81);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA176_82 = input.LA(1);

                         
                        int index176_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_82);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA176_83 = input.LA(1);

                         
                        int index176_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalKim()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index176_83);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_170s = "\43\uffff";
    static final String dfa_171s = "\1\4\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_172s = "\1\u00fc\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_173s = "\4\uffff\1\3\33\uffff\1\1\1\2\1\4";
    static final String dfa_174s = "\1\uffff\1\0\1\1\1\2\33\uffff\1\3\3\uffff}>";
    static final String[] dfa_175s = {
            "\2\4\3\uffff\1\4\1\3\1\4\1\uffff\1\4\32\uffff\1\37\140\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4\123\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[][] dfa_175 = unpackEncodedStringArray(dfa_175s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_170;
            this.eof = dfa_170;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_174;
            this.transition = dfa_175;
        }
        public String getDescription() {
            return "7672:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_1 = input.LA(1);

                         
                        int index179_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 32;}

                        else if ( (synpred307_InternalKim()) ) {s = 33;}

                         
                        input.seek(index179_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA179_2 = input.LA(1);

                         
                        int index179_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 32;}

                        else if ( (synpred307_InternalKim()) ) {s = 33;}

                         
                        input.seek(index179_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA179_3 = input.LA(1);

                         
                        int index179_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 32;}

                        else if ( (synpred307_InternalKim()) ) {s = 33;}

                         
                        input.seek(index179_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA179_31 = input.LA(1);

                         
                        int index179_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred308_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index179_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_176s = "\52\uffff";
    static final String dfa_177s = "\1\4\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_178s = "\1\u00fc\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_179s = "\1\uffff\1\1\20\uffff\1\2\27\uffff";
    static final String dfa_180s = "\11\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\33\uffff}>";
    static final String[] dfa_181s = {
            "\1\11\1\12\1\1\1\uffff\1\1\1\15\1\1\1\13\1\1\1\22\17\uffff\3\1\10\uffff\1\16\16\uffff\2\1\75\uffff\1\22\22\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\14\22\60\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_176;
            this.eof = dfa_176;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "7857:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_9 = input.LA(1);

                         
                        int index182_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index182_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA182_10 = input.LA(1);

                         
                        int index182_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index182_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA182_11 = input.LA(1);

                         
                        int index182_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index182_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA182_13 = input.LA(1);

                         
                        int index182_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index182_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA182_14 = input.LA(1);

                         
                        int index182_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index182_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_182s = "\1\1\44\uffff\1\1\45\uffff";
    static final String dfa_183s = "\1\6\1\uffff\1\4\41\uffff\1\50\1\26\1\50\26\uffff\3\4\3\50\3\uffff\1\0\4\uffff";
    static final String dfa_184s = "\1\u00fc\1\uffff\1\u00fc\41\uffff\3\162\26\uffff\3\13\3\162\3\uffff\1\0\4\uffff";
    static final String dfa_185s = "\1\uffff\1\7\1\uffff\1\1\2\2\22\3\2\4\3\5\1\6\6\3\3\uffff\26\3\6\uffff\3\3\1\uffff\4\3";
    static final String dfa_186s = "\1\0\1\uffff\1\3\73\uffff\1\1\1\2\6\uffff\1\4\4\uffff}>";
    static final String[] dfa_187s = {
            "\1\1\3\uffff\1\34\13\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\3\1\uffff\1\1\2\uffff\2\1\4\uffff\1\14\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\1\17\1\20\1\21\1\22\1\23\30\uffff\1\5\1\30\1\31\1\35\1\uffff\1\24\1\25\1\26\1\27\173\uffff\1\32\1\33",
            "",
            "\1\45\1\44\3\uffff\1\47\1\40\1\46\1\uffff\1\43\32\uffff\1\74\140\uffff\1\50\1\51\7\uffff\1\41\1\42\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\123\uffff\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "\1\1\6\uffff\1\1\12\uffff\1\1\2\uffff\1\1\20\uffff\3\1\5\uffff\6\1\45\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\100\1\101\5\uffff\1\102",
            "\1\103\1\104\1\110\2\uffff\1\106\1\107\1\105",
            "\1\111\1\112\3\uffff\1\106\1\uffff\1\105",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_144;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "()* loopback of 7921:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_0==EOF||LA189_0==RULE_STRING||LA189_0==22||LA189_0==29||(LA189_0>=32 && LA189_0<=35)||LA189_0==39||(LA189_0>=42 && LA189_0<=43)||LA189_0==60||LA189_0==62||(LA189_0>=68 && LA189_0<=73)) ) {s = 1;}

                        else if ( (LA189_0==61) ) {s = 2;}

                        else if ( LA189_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {s = 3;}

                        else if ( LA189_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 4;}

                        else if ( LA189_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 5;}

                        else if ( LA189_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 6;}

                        else if ( LA189_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 7;}

                        else if ( LA189_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 8;}

                        else if ( LA189_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 9;}

                        else if ( LA189_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 10;}

                        else if ( LA189_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 11;}

                        else if ( LA189_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 12;}

                        else if ( LA189_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 13;}

                        else if ( LA189_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 14;}

                        else if ( LA189_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 15;}

                        else if ( LA189_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 16;}

                        else if ( LA189_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 17;}

                        else if ( LA189_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 18;}

                        else if ( LA189_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 19;}

                        else if ( LA189_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 20;}

                        else if ( LA189_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 21;}

                        else if ( LA189_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 22;}

                        else if ( LA189_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 23;}

                        else if ( LA189_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 24;}

                        else if ( LA189_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 25;}

                        else if ( LA189_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 26;}

                        else if ( LA189_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 27;}

                        else if ( LA189_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 28;}

                        else if ( LA189_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 29;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA189_62 = input.LA(1);

                         
                        int index189_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA189_62 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 67;}

                        else if ( LA189_62 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 68;}

                        else if ( LA189_62 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 69;}

                        else if ( (LA189_62==RULE_CAMELCASE_ID) ) {s = 70;}

                        else if ( LA189_62 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 71;}

                        else if ( LA189_62 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 72;}

                         
                        input.seek(index189_62);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA189_63 = input.LA(1);

                         
                        int index189_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA189_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 73;}

                        else if ( LA189_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 74;}

                        else if ( LA189_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 69;}

                        else if ( (LA189_63==RULE_CAMELCASE_ID) ) {s = 70;}

                         
                        input.seek(index189_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA189_2 = input.LA(1);

                         
                        int index189_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA189_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 30;}

                        else if ( LA189_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 31;}

                        else if ( LA189_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 32;}

                        else if ( LA189_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 33;}

                        else if ( LA189_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 34;}

                        else if ( LA189_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 35;}

                        else if ( (LA189_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( (LA189_2==RULE_LOWERCASE_ID) ) {s = 37;}

                        else if ( (LA189_2==RULE_LOWERCASE_DASHID) ) {s = 38;}

                        else if ( LA189_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 39;}

                        else if ( LA189_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 40;}

                        else if ( LA189_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 41;}

                        else if ( LA189_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 42;}

                        else if ( LA189_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 43;}

                        else if ( LA189_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 44;}

                        else if ( LA189_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 45;}

                        else if ( LA189_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 46;}

                        else if ( LA189_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 47;}

                        else if ( LA189_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 48;}

                        else if ( LA189_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 49;}

                        else if ( LA189_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 50;}

                        else if ( LA189_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 51;}

                        else if ( LA189_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 52;}

                        else if ( LA189_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 53;}

                        else if ( LA189_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 54;}

                        else if ( LA189_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                        else if ( LA189_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 56;}

                        else if ( LA189_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 57;}

                        else if ( LA189_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 58;}

                        else if ( LA189_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 59;}

                        else if ( LA189_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 60;}

                         
                        input.seek(index189_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA189_70 = input.LA(1);

                         
                        int index189_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred320_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 74;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_70);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_188s = "\61\uffff";
    static final String dfa_189s = "\1\1\60\uffff";
    static final String dfa_190s = "\1\6\11\uffff\1\0\15\uffff\22\0\7\uffff";
    static final String dfa_191s = "\1\u00fc\11\uffff\1\0\15\uffff\22\0\7\uffff";
    static final String dfa_192s = "\1\uffff\1\2\56\uffff\1\1";
    static final String dfa_193s = "\12\uffff\1\0\15\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\7\uffff}>";
    static final String[] dfa_194s = {
            "\1\1\3\uffff\1\1\13\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\36\5\uffff\1\1\5\uffff\1\1\1\12\1\1\5\uffff\6\1\10\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\37\1\40\1\41\1\42\1\43\1\44\1\45\30\uffff\4\1\1\uffff\1\46\1\47\1\50\1\51\173\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_188;
            this.eof = dfa_189;
            this.min = dfa_190;
            this.max = dfa_191;
            this.accept = dfa_192;
            this.special = dfa_193;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "()* loopback of 8068:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_10 = input.LA(1);

                         
                        int index186_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_24 = input.LA(1);

                         
                        int index186_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_25 = input.LA(1);

                         
                        int index186_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA186_26 = input.LA(1);

                         
                        int index186_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_26);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA186_27 = input.LA(1);

                         
                        int index186_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA186_28 = input.LA(1);

                         
                        int index186_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_28);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA186_29 = input.LA(1);

                         
                        int index186_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_29);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA186_30 = input.LA(1);

                         
                        int index186_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA186_31 = input.LA(1);

                         
                        int index186_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA186_32 = input.LA(1);

                         
                        int index186_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_32);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA186_33 = input.LA(1);

                         
                        int index186_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_33);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA186_34 = input.LA(1);

                         
                        int index186_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_34);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA186_35 = input.LA(1);

                         
                        int index186_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_35);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA186_36 = input.LA(1);

                         
                        int index186_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA186_37 = input.LA(1);

                         
                        int index186_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_37);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA186_38 = input.LA(1);

                         
                        int index186_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_38);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA186_39 = input.LA(1);

                         
                        int index186_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_39);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA186_40 = input.LA(1);

                         
                        int index186_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_40);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA186_41 = input.LA(1);

                         
                        int index186_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_195s = "\47\uffff";
    static final String dfa_196s = "\1\4\42\uffff\1\0\3\uffff";
    static final String dfa_197s = "\1\u00fc\42\uffff\1\0\3\uffff";
    static final String dfa_198s = "\1\uffff\1\1\44\uffff\1\2";
    static final String dfa_199s = "\43\uffff\1\0\3\uffff}>";
    static final String[] dfa_200s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\20\uffff\2\1\10\uffff\1\43\105\uffff\1\1\7\uffff\1\1\3\uffff\1\46\16\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[][] dfa_200 = unpackEncodedStringArray(dfa_200s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_195;
            this.eof = dfa_195;
            this.min = dfa_196;
            this.max = dfa_197;
            this.accept = dfa_198;
            this.special = dfa_199;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "8284:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= '(' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_8= ',' ( (lv_alternativeObservables_9_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_10= ')' ( ( (lv_optional_11_0= 'optional' ) ) | otherlv_12= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'named' ( ( (lv_name_14_1= RULE_LOWERCASE_ID | lv_name_14_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_35 = input.LA(1);

                         
                        int index199_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index199_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_201s = "\65\uffff";
    static final String dfa_202s = "\1\uffff\3\4\1\uffff\1\4\4\uffff\3\4\3\uffff\2\6\11\uffff\2\6\5\uffff\3\4\3\uffff\4\4\3\uffff\4\4\1\uffff\1\4";
    static final String dfa_203s = "\1\4\3\26\1\uffff\1\26\1\uffff\3\4\3\26\3\157\5\4\6\157\4\4\3\157\3\26\1\4\1\12\1\4\3\26\1\4\2\0\1\12\1\4\2\26\1\4\1\12\1\4";
    static final String dfa_204s = "\1\u00fc\3\162\1\uffff\1\111\1\uffff\3\13\6\162\2\u00fc\3\13\6\162\2\u00fc\2\13\6\162\1\13\1\12\1\13\3\162\1\u00fc\2\0\1\12\3\111\1\u00fc\1\12\1\u00fc";
    static final String dfa_205s = "\4\uffff\1\1\1\uffff\1\2\56\uffff";
    static final String dfa_206s = "\54\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_207s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\20\uffff\2\6\10\uffff\1\6\105\uffff\1\4\7\uffff\1\6\22\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\123\uffff\2\6",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\11\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\20\uffff\3\4\5\uffff\6\4",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\1\15\1\16\3\uffff\1\6\1\uffff\1\17",
            "\1\20\1\21\1\6\2\uffff\2\6\1\17",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\4\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\4\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\1\25\1\26\5\uffff\1\27",
            "\1\30\1\31\5\uffff\1\32",
            "\1\33\1\34\1\6\3\uffff\1\6\1\27",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\4\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\4\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\4\uffff\1\4\1\44",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\50\1\51\5\uffff\1\52",
            "\1\53",
            "\1\54\1\55\1\6\3\uffff\1\6\1\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\60\1\61\20\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\50\uffff\1\56\u0089\uffff\1\57",
            "\1\uffff",
            "\1\uffff",
            "\1\62",
            "\1\60\1\61\20\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\60\1\61\20\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\50\uffff\1\63\u0089\uffff\1\57",
            "\1\64",
            "\1\60\1\61\20\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\u00b2\uffff\1\57"
    };

    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[][] dfa_207 = unpackEncodedStringArray(dfa_207s);

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_201;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_205;
            this.special = dfa_206;
            this.transition = dfa_207;
        }
        public String getDescription() {
            return "8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA194_44 = input.LA(1);

                         
                        int index194_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index194_44);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA194_45 = input.LA(1);

                         
                        int index194_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index194_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 194, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_208s = "\2\uffff\2\7\5\uffff\3\7";
    static final String dfa_209s = "\1\4\1\157\2\26\4\uffff\1\4\3\26";
    static final String dfa_210s = "\1\156\3\162\4\uffff\1\13\3\162";
    static final String dfa_211s = "\4\uffff\1\3\1\4\1\1\1\2\4\uffff";
    static final String dfa_212s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_213s = {
            "\1\1\1\2\1\5\4\uffff\1\3\142\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10"
    };
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[][] dfa_213 = unpackEncodedStringArray(dfa_213s);

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_209;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_213;
        }
        public String getDescription() {
            return "8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA191_1 = input.LA(1);

                         
                        int index191_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA191_1==111||LA191_1==114) ) {s = 4;}

                        else if ( (synpred327_InternalKim()) ) {s = 6;}

                        else if ( (synpred328_InternalKim()) ) {s = 7;}

                         
                        input.seek(index191_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 191, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_214s = "\u008b\uffff";
    static final String dfa_215s = "\1\1\u008a\uffff";
    static final String dfa_216s = "\1\4\44\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\27\0\56\uffff";
    static final String dfa_217s = "\1\u00fc\44\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\27\0\56\uffff";
    static final String dfa_218s = "\1\uffff\1\2\u0088\uffff\1\1";
    static final String dfa_219s = "\45\uffff\1\0\32\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\56\uffff}>";
    static final String[] dfa_220s = {
            "\1\100\1\101\3\1\1\104\1\1\1\102\1\uffff\1\110\1\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\45\3\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\11\uffff\1\1\5\uffff\2\1\5\uffff\24\1\1\111\1\112\6\uffff\1\1\1\106\1\107\1\uffff\1\113\1\114\1\115\1\116\1\117\1\120\1\uffff\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\3\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA200 extends DFA {

        public DFA200(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 200;
            this.eot = dfa_214;
            this.eof = dfa_215;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "()+ loopback of 8599:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA200_37 = input.LA(1);

                         
                        int index200_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_37);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA200_64 = input.LA(1);

                         
                        int index200_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_64);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA200_65 = input.LA(1);

                         
                        int index200_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_65);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA200_66 = input.LA(1);

                         
                        int index200_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_66);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA200_68 = input.LA(1);

                         
                        int index200_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_68);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA200_70 = input.LA(1);

                         
                        int index200_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_70);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA200_71 = input.LA(1);

                         
                        int index200_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_71);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA200_72 = input.LA(1);

                         
                        int index200_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_72);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA200_73 = input.LA(1);

                         
                        int index200_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_73);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA200_74 = input.LA(1);

                         
                        int index200_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_74);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA200_75 = input.LA(1);

                         
                        int index200_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_75);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA200_76 = input.LA(1);

                         
                        int index200_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_76);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA200_77 = input.LA(1);

                         
                        int index200_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_77);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA200_78 = input.LA(1);

                         
                        int index200_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_78);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA200_79 = input.LA(1);

                         
                        int index200_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_79);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA200_80 = input.LA(1);

                         
                        int index200_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_80);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA200_81 = input.LA(1);

                         
                        int index200_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_81);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA200_82 = input.LA(1);

                         
                        int index200_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_82);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA200_83 = input.LA(1);

                         
                        int index200_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_83);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA200_84 = input.LA(1);

                         
                        int index200_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_84);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA200_85 = input.LA(1);

                         
                        int index200_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_85);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA200_86 = input.LA(1);

                         
                        int index200_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_86);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA200_87 = input.LA(1);

                         
                        int index200_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_87);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA200_88 = input.LA(1);

                         
                        int index200_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_88);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA200_89 = input.LA(1);

                         
                        int index200_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_89);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA200_90 = input.LA(1);

                         
                        int index200_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_90);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA200_91 = input.LA(1);

                         
                        int index200_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_91);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA200_92 = input.LA(1);

                         
                        int index200_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalKim()) ) {s = 138;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index200_92);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 200, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_221s = "\1\17\u008a\uffff";
    static final String dfa_222s = "\1\4\13\uffff\176\0\1\uffff";
    static final String dfa_223s = "\1\u00fc\13\uffff\176\0\1\uffff";
    static final String dfa_224s = "\1\uffff\1\1\u0088\uffff\1\2";
    static final String dfa_225s = "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\175\1\uffff}>";
    static final String[] dfa_226s = {
            "\1\100\1\101\1\105\1\43\1\145\1\104\1\76\1\102\1\uffff\1\110\1\u0085\1\uffff\1\146\1\153\4\uffff\1\37\4\uffff\1\14\1\uffff\1\15\1\143\1\144\1\136\1\135\1\154\1\155\1\uffff\1\46\1\u0088\1\23\1\45\1\16\1\24\1\36\1\uffff\1\151\2\uffff\1\56\1\20\1\21\1\22\2\uffff\1\44\1\150\1\147\1\42\1\41\1\uffff\1\25\1\26\1\27\5\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\uffff\1\1\6\uffff\1\50\1\51\1\52\1\53\1\54\1\55\1\57\1\60\1\61\1\62\1\63\1\64\1\65\11\uffff\1\1\5\uffff\1\103\1\40\5\uffff\1\137\1\141\1\47\1\72\1\73\1\77\1\142\1\66\1\67\1\70\1\71\11\1\1\111\1\112\6\uffff\1\152\1\106\1\107\1\uffff\1\113\1\114\1\115\1\116\1\117\1\120\1\uffff\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\160\1\156\1\157\11\uffff\1\161\1\162\2\uffff\1\163\1\uffff\1\164\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\uffff\1\u0087\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\5\uffff\1\u0086\1\u0089\4\uffff\1\140\42\uffff\1\74\1\75",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final char[] dfa_223 = DFA.unpackEncodedStringToUnsignedChars(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final short[][] dfa_226 = unpackEncodedStringArray(dfa_226s);

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_214;
            this.eof = dfa_221;
            this.min = dfa_222;
            this.max = dfa_223;
            this.accept = dfa_224;
            this.special = dfa_225;
            this.transition = dfa_226;
        }
        public String getDescription() {
            return "8618:3: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA206_12 = input.LA(1);

                         
                        int index206_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA206_13 = input.LA(1);

                         
                        int index206_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA206_14 = input.LA(1);

                         
                        int index206_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA206_15 = input.LA(1);

                         
                        int index206_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA206_16 = input.LA(1);

                         
                        int index206_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA206_17 = input.LA(1);

                         
                        int index206_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA206_18 = input.LA(1);

                         
                        int index206_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA206_19 = input.LA(1);

                         
                        int index206_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA206_20 = input.LA(1);

                         
                        int index206_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA206_21 = input.LA(1);

                         
                        int index206_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA206_22 = input.LA(1);

                         
                        int index206_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA206_23 = input.LA(1);

                         
                        int index206_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA206_24 = input.LA(1);

                         
                        int index206_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA206_25 = input.LA(1);

                         
                        int index206_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA206_26 = input.LA(1);

                         
                        int index206_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA206_27 = input.LA(1);

                         
                        int index206_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA206_28 = input.LA(1);

                         
                        int index206_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA206_29 = input.LA(1);

                         
                        int index206_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA206_30 = input.LA(1);

                         
                        int index206_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA206_31 = input.LA(1);

                         
                        int index206_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA206_32 = input.LA(1);

                         
                        int index206_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA206_33 = input.LA(1);

                         
                        int index206_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA206_34 = input.LA(1);

                         
                        int index206_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA206_35 = input.LA(1);

                         
                        int index206_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA206_36 = input.LA(1);

                         
                        int index206_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA206_37 = input.LA(1);

                         
                        int index206_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA206_38 = input.LA(1);

                         
                        int index206_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA206_39 = input.LA(1);

                         
                        int index206_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_39);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA206_40 = input.LA(1);

                         
                        int index206_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA206_41 = input.LA(1);

                         
                        int index206_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_41);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA206_42 = input.LA(1);

                         
                        int index206_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_42);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA206_43 = input.LA(1);

                         
                        int index206_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_43);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA206_44 = input.LA(1);

                         
                        int index206_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_44);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA206_45 = input.LA(1);

                         
                        int index206_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_45);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA206_46 = input.LA(1);

                         
                        int index206_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_46);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA206_47 = input.LA(1);

                         
                        int index206_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_47);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA206_48 = input.LA(1);

                         
                        int index206_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_48);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA206_49 = input.LA(1);

                         
                        int index206_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_49);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA206_50 = input.LA(1);

                         
                        int index206_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_50);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA206_51 = input.LA(1);

                         
                        int index206_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_51);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA206_52 = input.LA(1);

                         
                        int index206_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_52);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA206_53 = input.LA(1);

                         
                        int index206_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_53);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA206_54 = input.LA(1);

                         
                        int index206_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_54);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA206_55 = input.LA(1);

                         
                        int index206_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_55);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA206_56 = input.LA(1);

                         
                        int index206_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_56);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA206_57 = input.LA(1);

                         
                        int index206_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_57);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA206_58 = input.LA(1);

                         
                        int index206_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_58);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA206_59 = input.LA(1);

                         
                        int index206_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_59);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA206_60 = input.LA(1);

                         
                        int index206_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_60);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA206_61 = input.LA(1);

                         
                        int index206_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_61);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA206_62 = input.LA(1);

                         
                        int index206_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_62);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA206_63 = input.LA(1);

                         
                        int index206_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_63);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA206_64 = input.LA(1);

                         
                        int index206_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_64);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA206_65 = input.LA(1);

                         
                        int index206_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_65);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA206_66 = input.LA(1);

                         
                        int index206_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_66);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA206_67 = input.LA(1);

                         
                        int index206_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_67);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA206_68 = input.LA(1);

                         
                        int index206_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_68);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA206_69 = input.LA(1);

                         
                        int index206_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_69);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA206_70 = input.LA(1);

                         
                        int index206_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_70);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA206_71 = input.LA(1);

                         
                        int index206_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_71);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA206_72 = input.LA(1);

                         
                        int index206_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_72);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA206_73 = input.LA(1);

                         
                        int index206_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_73);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA206_74 = input.LA(1);

                         
                        int index206_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_74);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA206_75 = input.LA(1);

                         
                        int index206_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_75);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA206_76 = input.LA(1);

                         
                        int index206_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_76);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA206_77 = input.LA(1);

                         
                        int index206_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_77);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA206_78 = input.LA(1);

                         
                        int index206_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_78);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA206_79 = input.LA(1);

                         
                        int index206_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_79);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA206_80 = input.LA(1);

                         
                        int index206_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_80);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA206_81 = input.LA(1);

                         
                        int index206_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_81);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA206_82 = input.LA(1);

                         
                        int index206_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_82);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA206_83 = input.LA(1);

                         
                        int index206_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_83);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA206_84 = input.LA(1);

                         
                        int index206_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_84);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA206_85 = input.LA(1);

                         
                        int index206_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_85);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA206_86 = input.LA(1);

                         
                        int index206_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_86);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA206_87 = input.LA(1);

                         
                        int index206_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_87);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA206_88 = input.LA(1);

                         
                        int index206_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_88);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA206_89 = input.LA(1);

                         
                        int index206_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_89);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA206_90 = input.LA(1);

                         
                        int index206_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_90);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA206_91 = input.LA(1);

                         
                        int index206_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_91);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA206_92 = input.LA(1);

                         
                        int index206_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_92);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA206_93 = input.LA(1);

                         
                        int index206_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_93);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA206_94 = input.LA(1);

                         
                        int index206_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_94);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA206_95 = input.LA(1);

                         
                        int index206_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_95);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA206_96 = input.LA(1);

                         
                        int index206_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_96);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA206_97 = input.LA(1);

                         
                        int index206_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_97);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA206_98 = input.LA(1);

                         
                        int index206_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_98);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA206_99 = input.LA(1);

                         
                        int index206_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_99);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA206_100 = input.LA(1);

                         
                        int index206_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_100);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA206_101 = input.LA(1);

                         
                        int index206_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_101);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA206_102 = input.LA(1);

                         
                        int index206_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_102);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA206_103 = input.LA(1);

                         
                        int index206_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_103);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA206_104 = input.LA(1);

                         
                        int index206_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_104);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA206_105 = input.LA(1);

                         
                        int index206_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_105);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA206_106 = input.LA(1);

                         
                        int index206_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_106);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA206_107 = input.LA(1);

                         
                        int index206_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_107);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA206_108 = input.LA(1);

                         
                        int index206_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_108);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA206_109 = input.LA(1);

                         
                        int index206_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_109);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA206_110 = input.LA(1);

                         
                        int index206_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_110);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA206_111 = input.LA(1);

                         
                        int index206_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_111);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA206_112 = input.LA(1);

                         
                        int index206_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_112);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA206_113 = input.LA(1);

                         
                        int index206_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_113);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA206_114 = input.LA(1);

                         
                        int index206_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_114);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA206_115 = input.LA(1);

                         
                        int index206_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_115);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA206_116 = input.LA(1);

                         
                        int index206_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_116);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA206_117 = input.LA(1);

                         
                        int index206_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_117);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA206_118 = input.LA(1);

                         
                        int index206_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_118);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA206_119 = input.LA(1);

                         
                        int index206_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_119);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA206_120 = input.LA(1);

                         
                        int index206_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_120);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA206_121 = input.LA(1);

                         
                        int index206_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_121);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA206_122 = input.LA(1);

                         
                        int index206_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_122);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA206_123 = input.LA(1);

                         
                        int index206_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_123);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA206_124 = input.LA(1);

                         
                        int index206_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_124);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA206_125 = input.LA(1);

                         
                        int index206_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_125);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA206_126 = input.LA(1);

                         
                        int index206_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_126);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA206_127 = input.LA(1);

                         
                        int index206_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_127);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA206_128 = input.LA(1);

                         
                        int index206_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_128);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA206_129 = input.LA(1);

                         
                        int index206_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_129);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA206_130 = input.LA(1);

                         
                        int index206_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_130);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA206_131 = input.LA(1);

                         
                        int index206_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_131);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA206_132 = input.LA(1);

                         
                        int index206_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_132);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA206_133 = input.LA(1);

                         
                        int index206_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_133);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA206_134 = input.LA(1);

                         
                        int index206_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_134);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA206_135 = input.LA(1);

                         
                        int index206_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_135);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA206_136 = input.LA(1);

                         
                        int index206_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_136);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA206_137 = input.LA(1);

                         
                        int index206_137 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 138;}

                         
                        input.seek(index206_137);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_227s = "\15\uffff";
    static final String dfa_228s = "\1\1\14\uffff";
    static final String dfa_229s = "\1\4\14\uffff";
    static final String dfa_230s = "\1\u00fc\14\uffff";
    static final String dfa_231s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_232s = "\1\0\14\uffff}>";
    static final String[] dfa_233s = {
            "\10\1\1\uffff\2\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\3\6\uffff\15\1\11\uffff\1\4\5\uffff\2\1\5\uffff\13\1\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[][] dfa_233 = unpackEncodedStringArray(dfa_233s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_229;
            this.max = dfa_230;
            this.accept = dfa_231;
            this.special = dfa_232;
            this.transition = dfa_233;
        }
        public String getDescription() {
            return "()* loopback of 8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_0 = input.LA(1);

                         
                        int index205_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA205_0==EOF||(LA205_0>=RULE_LOWERCASE_ID && LA205_0<=RULE_LOWERCASE_DASHID)||(LA205_0>=RULE_UPPERCASE_PATH && LA205_0<=RULE_BACKCASE_ID)||(LA205_0>=RULE_TEMPLATE_VAR && LA205_0<=RULE_OPTION_KEY)||LA205_0==22||LA205_0==27||(LA205_0>=29 && LA205_0<=35)||(LA205_0>=37 && LA205_0<=43)||LA205_0==45||(LA205_0>=48 && LA205_0<=51)||(LA205_0>=54 && LA205_0<=58)||(LA205_0>=60 && LA205_0<=62)||(LA205_0>=68 && LA205_0<=73)||(LA205_0>=82 && LA205_0<=94)||(LA205_0>=110 && LA205_0<=111)||(LA205_0>=117 && LA205_0<=127)||(LA205_0>=137 && LA205_0<=138)||(LA205_0>=145 && LA205_0<=147)||(LA205_0>=149 && LA205_0<=154)||(LA205_0>=156 && LA205_0<=170)||(LA205_0>=180 && LA205_0<=181)||LA205_0==184||(LA205_0>=186 && LA205_0<=194)||(LA205_0>=196 && LA205_0<=204)||(LA205_0>=210 && LA205_0<=211)||LA205_0==216||(LA205_0>=251 && LA205_0<=252)) ) {s = 1;}

                        else if ( LA205_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA205_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA205_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA205_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA205_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA205_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA205_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA205_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA205_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA205_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA205_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index205_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_234s = "\16\uffff";
    static final String dfa_235s = "\1\4\1\uffff\3\157\2\uffff\3\4\3\157\1\uffff";
    static final String dfa_236s = "\1\u008a\1\uffff\3\162\2\uffff\3\13\3\162\1\uffff";
    static final String dfa_237s = "\1\uffff\1\1\3\uffff\1\2\1\4\6\uffff\1\3";
    static final String dfa_238s = "\16\uffff}>";
    static final String[] dfa_239s = {
            "\1\3\1\2\3\uffff\1\5\1\uffff\1\4\1\uffff\1\1\173\uffff\2\6",
            "",
            "\1\10\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\3\1\2\uffff\1\15\2\1",
            "\2\1\3\uffff\1\15\1\uffff\1\1",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            ""
    };

    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final char[] dfa_236 = DFA.unpackEncodedStringToUnsignedChars(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[] dfa_238 = DFA.unpackEncodedString(dfa_238s);
    static final short[][] dfa_239 = unpackEncodedStringArray(dfa_239s);

    class DFA209 extends DFA {

        public DFA209(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 209;
            this.eot = dfa_234;
            this.eof = dfa_234;
            this.min = dfa_235;
            this.max = dfa_236;
            this.accept = dfa_237;
            this.special = dfa_238;
            this.transition = dfa_239;
        }
        public String getDescription() {
            return "9128:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )";
        }
    }
    static final String dfa_240s = "\1\4\34\0\12\uffff";
    static final String dfa_241s = "\1\u00a7\34\0\12\uffff";
    static final String dfa_242s = "\35\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_243s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\12\uffff}>";
    static final String[] dfa_244s = {
            "\1\5\1\4\3\uffff\1\7\1\uffff\1\6\1\uffff\1\3\32\uffff\1\34\140\uffff\1\10\1\11\7\uffff\1\1\1\2\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_240 = DFA.unpackEncodedStringToUnsignedChars(dfa_240s);
    static final char[] dfa_241 = DFA.unpackEncodedStringToUnsignedChars(dfa_241s);
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final short[][] dfa_244 = unpackEncodedStringArray(dfa_244s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_195;
            this.eof = dfa_195;
            this.min = dfa_240;
            this.max = dfa_241;
            this.accept = dfa_242;
            this.special = dfa_243;
            this.transition = dfa_244;
        }
        public String getDescription() {
            return "9216:4: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA208_1 = input.LA(1);

                         
                        int index208_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA208_2 = input.LA(1);

                         
                        int index208_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA208_3 = input.LA(1);

                         
                        int index208_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA208_4 = input.LA(1);

                         
                        int index208_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA208_5 = input.LA(1);

                         
                        int index208_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA208_6 = input.LA(1);

                         
                        int index208_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA208_7 = input.LA(1);

                         
                        int index208_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA208_8 = input.LA(1);

                         
                        int index208_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA208_9 = input.LA(1);

                         
                        int index208_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA208_10 = input.LA(1);

                         
                        int index208_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA208_11 = input.LA(1);

                         
                        int index208_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA208_12 = input.LA(1);

                         
                        int index208_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA208_13 = input.LA(1);

                         
                        int index208_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA208_14 = input.LA(1);

                         
                        int index208_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA208_15 = input.LA(1);

                         
                        int index208_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA208_16 = input.LA(1);

                         
                        int index208_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA208_17 = input.LA(1);

                         
                        int index208_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA208_18 = input.LA(1);

                         
                        int index208_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA208_19 = input.LA(1);

                         
                        int index208_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA208_20 = input.LA(1);

                         
                        int index208_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA208_21 = input.LA(1);

                         
                        int index208_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA208_22 = input.LA(1);

                         
                        int index208_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA208_23 = input.LA(1);

                         
                        int index208_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA208_24 = input.LA(1);

                         
                        int index208_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA208_25 = input.LA(1);

                         
                        int index208_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA208_26 = input.LA(1);

                         
                        int index208_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA208_27 = input.LA(1);

                         
                        int index208_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA208_28 = input.LA(1);

                         
                        int index208_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalKim()) ) {s = 29;}

                        else if ( (synpred362_InternalKim()) ) {s = 30;}

                        else if ( (synpred363_InternalKim()) ) {s = 31;}

                        else if ( (synpred364_InternalKim()) ) {s = 32;}

                        else if ( (synpred365_InternalKim()) ) {s = 33;}

                        else if ( (synpred366_InternalKim()) ) {s = 34;}

                        else if ( (synpred367_InternalKim()) ) {s = 35;}

                        else if ( (synpred368_InternalKim()) ) {s = 36;}

                        else if ( (synpred369_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index208_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_245s = "\u0093\uffff";
    static final String dfa_246s = "\1\1\u0092\uffff";
    static final String dfa_247s = "\1\4\31\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\27\0\101\uffff";
    static final String dfa_248s = "\1\u00fc\31\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\27\0\101\uffff";
    static final String dfa_249s = "\1\uffff\1\2\u0090\uffff\1\1";
    static final String dfa_250s = "\32\uffff\1\0\32\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\101\uffff}>";
    static final String[] dfa_251s = {
            "\1\65\1\66\3\1\1\71\1\1\1\67\1\uffff\1\75\1\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\32\3\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\11\1\5\uffff\24\1\1\76\1\77\6\uffff\1\1\1\73\1\74\1\uffff\1\100\1\101\1\102\1\103\1\104\1\105\1\uffff\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\3\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final char[] dfa_247 = DFA.unpackEncodedStringToUnsignedChars(dfa_247s);
    static final char[] dfa_248 = DFA.unpackEncodedStringToUnsignedChars(dfa_248s);
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final short[] dfa_250 = DFA.unpackEncodedString(dfa_250s);
    static final short[][] dfa_251 = unpackEncodedStringArray(dfa_251s);

    class DFA229 extends DFA {

        public DFA229(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 229;
            this.eot = dfa_245;
            this.eof = dfa_246;
            this.min = dfa_247;
            this.max = dfa_248;
            this.accept = dfa_249;
            this.special = dfa_250;
            this.transition = dfa_251;
        }
        public String getDescription() {
            return "()+ loopback of 11041:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA229_26 = input.LA(1);

                         
                        int index229_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_26);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA229_53 = input.LA(1);

                         
                        int index229_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_53);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA229_54 = input.LA(1);

                         
                        int index229_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_54);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA229_55 = input.LA(1);

                         
                        int index229_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_55);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA229_57 = input.LA(1);

                         
                        int index229_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_57);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA229_59 = input.LA(1);

                         
                        int index229_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_59);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA229_60 = input.LA(1);

                         
                        int index229_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_60);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA229_61 = input.LA(1);

                         
                        int index229_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_61);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA229_62 = input.LA(1);

                         
                        int index229_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_62);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA229_63 = input.LA(1);

                         
                        int index229_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_63);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA229_64 = input.LA(1);

                         
                        int index229_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_64);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA229_65 = input.LA(1);

                         
                        int index229_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_65);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA229_66 = input.LA(1);

                         
                        int index229_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_66);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA229_67 = input.LA(1);

                         
                        int index229_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_67);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA229_68 = input.LA(1);

                         
                        int index229_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_68);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA229_69 = input.LA(1);

                         
                        int index229_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_69);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA229_70 = input.LA(1);

                         
                        int index229_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_70);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA229_71 = input.LA(1);

                         
                        int index229_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_71);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA229_72 = input.LA(1);

                         
                        int index229_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_72);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA229_73 = input.LA(1);

                         
                        int index229_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_73);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA229_74 = input.LA(1);

                         
                        int index229_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_74);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA229_75 = input.LA(1);

                         
                        int index229_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_75);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA229_76 = input.LA(1);

                         
                        int index229_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_76);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA229_77 = input.LA(1);

                         
                        int index229_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_77);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA229_78 = input.LA(1);

                         
                        int index229_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_78);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA229_79 = input.LA(1);

                         
                        int index229_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_79);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA229_80 = input.LA(1);

                         
                        int index229_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_80);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA229_81 = input.LA(1);

                         
                        int index229_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index229_81);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 229, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_252s = "\1\4\3\157\2\4\3\157\2\uffff";
    static final String dfa_253s = "\1\13\3\162\1\13\1\16\3\162\2\uffff";
    static final String dfa_254s = "\11\uffff\1\1\1\2";
    static final String[] dfa_255s = {
            "\1\1\1\2\5\uffff\1\3",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\6\1\7\5\uffff\1\10",
            "\1\12\4\uffff\1\11\1\uffff\1\12\2\uffff\1\12",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_252 = DFA.unpackEncodedStringToUnsignedChars(dfa_252s);
    static final char[] dfa_253 = DFA.unpackEncodedStringToUnsignedChars(dfa_253s);
    static final short[] dfa_254 = DFA.unpackEncodedString(dfa_254s);
    static final short[][] dfa_255 = unpackEncodedStringArray(dfa_255s);

    class DFA234 extends DFA {

        public DFA234(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 234;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_252;
            this.max = dfa_253;
            this.accept = dfa_254;
            this.special = dfa_96;
            this.transition = dfa_255;
        }
        public String getDescription() {
            return "11202:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_256s = "\11\uffff\1\2\1\1";
    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);

    class DFA235 extends DFA {

        public DFA235(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 235;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_252;
            this.max = dfa_253;
            this.accept = dfa_256;
            this.special = dfa_96;
            this.transition = dfa_255;
        }
        public String getDescription() {
            return "11265:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_257s = "\1\145\12\uffff";
    static final String dfa_258s = "\1\u00f9\12\uffff";
    static final String dfa_259s = "\1\uffff\1\5\1\1\1\2\1\3\6\4";
    static final String dfa_260s = "\1\0\12\uffff}>";
    static final String[] dfa_261s = {
            "\1\1\105\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\1\12\17\uffff\1\1\20\uffff\4\1\2\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_257 = DFA.unpackEncodedStringToUnsignedChars(dfa_257s);
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final short[] dfa_260 = DFA.unpackEncodedString(dfa_260s);
    static final short[][] dfa_261 = unpackEncodedStringArray(dfa_261s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_260;
            this.transition = dfa_261;
        }
        public String getDescription() {
            return "()* loopback of 11356:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_0 = input.LA(1);

                         
                        int index241_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA241_0==101||(LA241_0>=174 && LA241_0<=175)||LA241_0==195||(LA241_0>=212 && LA241_0<=215)||(LA241_0>=218 && LA241_0<=247)) ) {s = 1;}

                        else if ( LA241_0 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA241_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA241_0 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA241_0 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA241_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA241_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA241_0 == 248 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA241_0 == 249 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA241_0 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index241_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_262s = "\102\uffff";
    static final String dfa_263s = "\1\1\101\uffff";
    static final String dfa_264s = "\1\4\15\uffff\1\4\7\uffff\1\4\53\uffff";
    static final String dfa_265s = "\1\u00d2\15\uffff\1\u00ce\7\uffff\1\u00ce\53\uffff";
    static final String dfa_266s = "\1\uffff\1\30\1\1\2\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\24\1\uffff\1\26\5\27\2\23\1\14\41\27\1\25";
    static final String dfa_267s = "\1\2\15\uffff\1\1\7\uffff\1\0\53\uffff}>";
    static final String[] dfa_268s = {
            "\1\30\1\31\1\2\4\uffff\1\32\2\uffff\1\33\7\uffff\1\1\22\uffff\1\1\1\uffff\1\27\116\uffff\1\1\71\uffff\1\3\1\4\2\uffff\1\5\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\51\1\50\1\44\2\uffff\1\53\1\43\1\52\1\uffff\1\47\32\uffff\1\100\57\uffff\1\40\16\uffff\1\35\15\uffff\1\36\23\uffff\1\54\1\55\7\uffff\1\45\1\46\1\uffff\1\56\1\57\1\60\1\61\1\62\1\63\1\uffff\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\33\uffff\1\37\11\uffff\1\41\1\42",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\51\1\50\1\44\2\uffff\1\53\1\43\1\52\1\uffff\1\47\32\uffff\1\100\57\uffff\1\40\60\uffff\1\54\1\55\7\uffff\1\45\1\46\1\uffff\1\56\1\57\1\60\1\61\1\62\1\63\1\uffff\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\21\uffff\1\101\23\uffff\1\41\1\42",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);
    static final char[] dfa_264 = DFA.unpackEncodedStringToUnsignedChars(dfa_264s);
    static final char[] dfa_265 = DFA.unpackEncodedStringToUnsignedChars(dfa_265s);
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[][] dfa_268 = unpackEncodedStringArray(dfa_268s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_262;
            this.eof = dfa_263;
            this.min = dfa_264;
            this.max = dfa_265;
            this.accept = dfa_266;
            this.special = dfa_267;
            this.transition = dfa_268;
        }
        public String getDescription() {
            return "()* loopback of 11814:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_22 = input.LA(1);

                         
                        int index277_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA277_22 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 32;}

                        else if ( LA277_22 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 33;}

                        else if ( LA277_22 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 34;}

                        else if ( LA277_22 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 35;}

                        else if ( LA277_22 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 36;}

                        else if ( LA277_22 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 37;}

                        else if ( LA277_22 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 38;}

                        else if ( LA277_22 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 39;}

                        else if ( LA277_22 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 40;}

                        else if ( LA277_22 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 41;}

                        else if ( LA277_22 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 42;}

                        else if ( LA277_22 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 43;}

                        else if ( LA277_22 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 44;}

                        else if ( LA277_22 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 45;}

                        else if ( LA277_22 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 46;}

                        else if ( LA277_22 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 47;}

                        else if ( LA277_22 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 48;}

                        else if ( LA277_22 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 49;}

                        else if ( LA277_22 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 50;}

                        else if ( LA277_22 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 51;}

                        else if ( LA277_22 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 52;}

                        else if ( LA277_22 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 53;}

                        else if ( LA277_22 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 54;}

                        else if ( LA277_22 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 55;}

                        else if ( LA277_22 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 56;}

                        else if ( LA277_22 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 57;}

                        else if ( LA277_22 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 58;}

                        else if ( LA277_22 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 59;}

                        else if ( LA277_22 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 60;}

                        else if ( LA277_22 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 61;}

                        else if ( LA277_22 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 62;}

                        else if ( LA277_22 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 63;}

                        else if ( LA277_22 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 64;}

                        else if ( LA277_22 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 65;}

                         
                        input.seek(index277_22);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA277_14 = input.LA(1);

                         
                        int index277_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA277_14 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 29;}

                        else if ( LA277_14 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 30;}

                        else if ( LA277_14 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 31;}

                        else if ( LA277_14 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 32;}

                        else if ( LA277_14 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 33;}

                        else if ( LA277_14 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 34;}

                        else if ( LA277_14 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 35;}

                        else if ( LA277_14 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 36;}

                        else if ( LA277_14 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 37;}

                        else if ( LA277_14 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 38;}

                        else if ( LA277_14 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 39;}

                        else if ( LA277_14 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 40;}

                        else if ( LA277_14 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 41;}

                        else if ( LA277_14 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 42;}

                        else if ( LA277_14 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 43;}

                        else if ( LA277_14 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 44;}

                        else if ( LA277_14 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 45;}

                        else if ( LA277_14 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 46;}

                        else if ( LA277_14 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 47;}

                        else if ( LA277_14 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 48;}

                        else if ( LA277_14 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 49;}

                        else if ( LA277_14 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 50;}

                        else if ( LA277_14 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 51;}

                        else if ( LA277_14 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 52;}

                        else if ( LA277_14 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 53;}

                        else if ( LA277_14 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 54;}

                        else if ( LA277_14 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 55;}

                        else if ( LA277_14 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 56;}

                        else if ( LA277_14 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 57;}

                        else if ( LA277_14 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 58;}

                        else if ( LA277_14 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 59;}

                        else if ( LA277_14 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 60;}

                        else if ( LA277_14 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 61;}

                        else if ( LA277_14 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 62;}

                        else if ( LA277_14 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 63;}

                        else if ( LA277_14 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 64;}

                         
                        input.seek(index277_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA277_0 = input.LA(1);

                         
                        int index277_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA277_0==EOF||LA277_0==22||LA277_0==41||LA277_0==122) ) {s = 1;}

                        else if ( LA277_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA277_0 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA277_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA277_0 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA277_0 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 6;}

                        else if ( LA277_0 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA277_0 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 8;}

                        else if ( LA277_0 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 9;}

                        else if ( LA277_0 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 10;}

                        else if ( LA277_0 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 11;}

                        else if ( LA277_0 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 12;}

                        else if ( LA277_0 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 13;}

                        else if ( (LA277_0==194) ) {s = 14;}

                        else if ( LA277_0 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 15;}

                        else if ( LA277_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 16;}

                        else if ( LA277_0 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 17;}

                        else if ( LA277_0 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 18;}

                        else if ( LA277_0 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 19;}

                        else if ( LA277_0 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 20;}

                        else if ( LA277_0 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 21;}

                        else if ( (LA277_0==204) ) {s = 22;}

                        else if ( LA277_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 23;}

                        else if ( LA277_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 24;}

                        else if ( LA277_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 25;}

                        else if ( LA277_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 26;}

                        else if ( LA277_0 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 27;}

                        else if ( LA277_0 == 210 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 28;}

                         
                        input.seek(index277_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_269s = "\1\1\11\uffff";
    static final String dfa_270s = "\1\4\1\uffff\7\0\1\uffff";
    static final String dfa_271s = "\1\u00d2\1\uffff\7\0\1\uffff";
    static final String dfa_272s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_273s = "\2\uffff\1\4\1\1\1\6\1\3\1\0\1\2\1\5\1\uffff}>";
    static final String[] dfa_274s = {
            "\1\4\1\5\1\1\4\uffff\1\6\2\uffff\1\7\7\uffff\1\1\22\uffff\1\1\1\uffff\1\1\116\uffff\1\1\71\uffff\2\1\2\uffff\1\1\1\uffff\10\1\1\2\2\uffff\7\1\1\3\5\uffff\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final char[] dfa_270 = DFA.unpackEncodedStringToUnsignedChars(dfa_270s);
    static final char[] dfa_271 = DFA.unpackEncodedStringToUnsignedChars(dfa_271s);
    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final short[][] dfa_274 = unpackEncodedStringArray(dfa_274s);

    class DFA276 extends DFA {

        public DFA276(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 276;
            this.eot = dfa_111;
            this.eof = dfa_269;
            this.min = dfa_270;
            this.max = dfa_271;
            this.accept = dfa_272;
            this.special = dfa_273;
            this.transition = dfa_274;
        }
        public String getDescription() {
            return "()+ loopback of 13276:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA276_6 = input.LA(1);

                         
                        int index276_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA276_3 = input.LA(1);

                         
                        int index276_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA276_7 = input.LA(1);

                         
                        int index276_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA276_5 = input.LA(1);

                         
                        int index276_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA276_2 = input.LA(1);

                         
                        int index276_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA276_8 = input.LA(1);

                         
                        int index276_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA276_4 = input.LA(1);

                         
                        int index276_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred499_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index276_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 276, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_275s = "\1\4\4\uffff\34\0\1\uffff";
    static final String dfa_276s = "\1\u00ce\4\uffff\34\0\1\uffff";
    static final String dfa_277s = "\1\uffff\1\1\37\uffff\1\2";
    static final String dfa_278s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\uffff}>";
    static final String[] dfa_279s = {
            "\1\11\1\10\3\uffff\1\13\1\1\1\12\1\uffff\1\7\32\uffff\1\40\57\uffff\1\1\60\uffff\1\14\1\15\7\uffff\1\5\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_275 = DFA.unpackEncodedStringToUnsignedChars(dfa_275s);
    static final char[] dfa_276 = DFA.unpackEncodedStringToUnsignedChars(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final short[][] dfa_279 = unpackEncodedStringArray(dfa_279s);

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_118;
            this.eof = dfa_118;
            this.min = dfa_275;
            this.max = dfa_276;
            this.accept = dfa_277;
            this.special = dfa_278;
            this.transition = dfa_279;
        }
        public String getDescription() {
            return "13460:3: ( (lv_quantifier_0_0= ruleQuantification ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_5 = input.LA(1);

                         
                        int index282_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA282_6 = input.LA(1);

                         
                        int index282_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA282_7 = input.LA(1);

                         
                        int index282_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA282_8 = input.LA(1);

                         
                        int index282_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA282_9 = input.LA(1);

                         
                        int index282_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA282_10 = input.LA(1);

                         
                        int index282_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA282_11 = input.LA(1);

                         
                        int index282_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA282_12 = input.LA(1);

                         
                        int index282_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA282_13 = input.LA(1);

                         
                        int index282_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_13);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA282_14 = input.LA(1);

                         
                        int index282_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_14);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA282_15 = input.LA(1);

                         
                        int index282_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_15);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA282_16 = input.LA(1);

                         
                        int index282_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_16);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA282_17 = input.LA(1);

                         
                        int index282_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA282_18 = input.LA(1);

                         
                        int index282_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_18);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA282_19 = input.LA(1);

                         
                        int index282_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_19);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA282_20 = input.LA(1);

                         
                        int index282_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA282_21 = input.LA(1);

                         
                        int index282_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_21);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA282_22 = input.LA(1);

                         
                        int index282_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_22);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA282_23 = input.LA(1);

                         
                        int index282_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_23);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA282_24 = input.LA(1);

                         
                        int index282_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_24);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA282_25 = input.LA(1);

                         
                        int index282_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_25);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA282_26 = input.LA(1);

                         
                        int index282_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_26);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA282_27 = input.LA(1);

                         
                        int index282_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_27);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA282_28 = input.LA(1);

                         
                        int index282_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_28);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA282_29 = input.LA(1);

                         
                        int index282_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_29);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA282_30 = input.LA(1);

                         
                        int index282_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_30);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA282_31 = input.LA(1);

                         
                        int index282_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_31);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA282_32 = input.LA(1);

                         
                        int index282_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred505_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index282_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_280s = "\155\uffff";
    static final String dfa_281s = "\1\2\154\uffff";
    static final String dfa_282s = "\1\4\1\0\153\uffff";
    static final String dfa_283s = "\1\u00fc\1\0\153\uffff";
    static final String dfa_284s = "\2\uffff\1\2\151\uffff\1\1";
    static final String dfa_285s = "\1\uffff\1\0\153\uffff}>";
    static final String[] dfa_286s = {
            "\3\2\1\uffff\6\2\1\uffff\1\2\7\uffff\4\2\2\uffff\3\2\10\uffff\1\1\16\uffff\2\2\23\uffff\6\2\15\uffff\3\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\2\uffff\1\2\3\uffff\1\2\16\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\3\uffff\11\2\17\uffff\1\2\20\uffff\5\2\1\uffff\40\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_280 = DFA.unpackEncodedString(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final char[] dfa_282 = DFA.unpackEncodedStringToUnsignedChars(dfa_282s);
    static final char[] dfa_283 = DFA.unpackEncodedStringToUnsignedChars(dfa_283s);
    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final short[][] dfa_286 = unpackEncodedStringArray(dfa_286s);

    class DFA302 extends DFA {

        public DFA302(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 302;
            this.eot = dfa_280;
            this.eof = dfa_281;
            this.min = dfa_282;
            this.max = dfa_283;
            this.accept = dfa_284;
            this.special = dfa_285;
            this.transition = dfa_286;
        }
        public String getDescription() {
            return "14249:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA302_1 = input.LA(1);

                         
                        int index302_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred534_InternalKim()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index302_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 302, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_287s = "\64\uffff";
    static final String dfa_288s = "\1\4\60\0\3\uffff";
    static final String dfa_289s = "\1\u00fc\60\0\3\uffff";
    static final String dfa_290s = "\61\uffff\1\2\1\uffff\1\1";
    static final String dfa_291s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\3\uffff}>";
    static final String[] dfa_292s = {
            "\1\11\1\10\1\44\1\uffff\1\47\1\13\1\41\1\12\1\uffff\1\7\2\uffff\1\50\14\uffff\1\61\1\45\1\46\10\uffff\1\40\1\61\6\uffff\1\54\6\uffff\1\60\1\51\31\uffff\1\52\1\57\1\56\1\53\2\uffff\1\4\1\uffff\1\55\33\uffff\1\2\4\uffff\1\3\15\uffff\1\14\1\15\7\uffff\1\5\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\60\uffff\1\1\42\uffff\1\42\1\43",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_287 = DFA.unpackEncodedString(dfa_287s);
    static final char[] dfa_288 = DFA.unpackEncodedStringToUnsignedChars(dfa_288s);
    static final char[] dfa_289 = DFA.unpackEncodedStringToUnsignedChars(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final short[][] dfa_292 = unpackEncodedStringArray(dfa_292s);

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_287;
            this.eof = dfa_287;
            this.min = dfa_288;
            this.max = dfa_289;
            this.accept = dfa_290;
            this.special = dfa_291;
            this.transition = dfa_292;
        }
        public String getDescription() {
            return "14314:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_1 = input.LA(1);

                         
                        int index303_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA303_2 = input.LA(1);

                         
                        int index303_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA303_3 = input.LA(1);

                         
                        int index303_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA303_4 = input.LA(1);

                         
                        int index303_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA303_5 = input.LA(1);

                         
                        int index303_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA303_6 = input.LA(1);

                         
                        int index303_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA303_7 = input.LA(1);

                         
                        int index303_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA303_8 = input.LA(1);

                         
                        int index303_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA303_9 = input.LA(1);

                         
                        int index303_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA303_10 = input.LA(1);

                         
                        int index303_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA303_11 = input.LA(1);

                         
                        int index303_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA303_12 = input.LA(1);

                         
                        int index303_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA303_13 = input.LA(1);

                         
                        int index303_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA303_14 = input.LA(1);

                         
                        int index303_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA303_15 = input.LA(1);

                         
                        int index303_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA303_16 = input.LA(1);

                         
                        int index303_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA303_17 = input.LA(1);

                         
                        int index303_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA303_18 = input.LA(1);

                         
                        int index303_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA303_19 = input.LA(1);

                         
                        int index303_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA303_20 = input.LA(1);

                         
                        int index303_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA303_21 = input.LA(1);

                         
                        int index303_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA303_22 = input.LA(1);

                         
                        int index303_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA303_23 = input.LA(1);

                         
                        int index303_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA303_24 = input.LA(1);

                         
                        int index303_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA303_25 = input.LA(1);

                         
                        int index303_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA303_26 = input.LA(1);

                         
                        int index303_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA303_27 = input.LA(1);

                         
                        int index303_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA303_28 = input.LA(1);

                         
                        int index303_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA303_29 = input.LA(1);

                         
                        int index303_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA303_30 = input.LA(1);

                         
                        int index303_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA303_31 = input.LA(1);

                         
                        int index303_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA303_32 = input.LA(1);

                         
                        int index303_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA303_33 = input.LA(1);

                         
                        int index303_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA303_34 = input.LA(1);

                         
                        int index303_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA303_35 = input.LA(1);

                         
                        int index303_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA303_36 = input.LA(1);

                         
                        int index303_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA303_37 = input.LA(1);

                         
                        int index303_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA303_38 = input.LA(1);

                         
                        int index303_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA303_39 = input.LA(1);

                         
                        int index303_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA303_40 = input.LA(1);

                         
                        int index303_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA303_41 = input.LA(1);

                         
                        int index303_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA303_42 = input.LA(1);

                         
                        int index303_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA303_43 = input.LA(1);

                         
                        int index303_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA303_44 = input.LA(1);

                         
                        int index303_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA303_45 = input.LA(1);

                         
                        int index303_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA303_46 = input.LA(1);

                         
                        int index303_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA303_47 = input.LA(1);

                         
                        int index303_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA303_48 = input.LA(1);

                         
                        int index303_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred535_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index303_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_293s = "\3\uffff\1\12\2\uffff\1\12\5\uffff\1\12\2\uffff\1\12";
    static final String dfa_294s = "\1\6\2\12\1\4\2\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_295s = "\1\u00fc\2\12\1\u00ff\2\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u00fc";
    static final String dfa_296s = "\4\uffff\1\3\1\4\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_297s = "\20\uffff}>";
    static final String[] dfa_298s = {
            "\1\4\3\uffff\1\3\23\uffff\2\5\u00db\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\2\12\4\uffff\1\12\4\uffff\1\12\1\uffff\3\12\1\uffff\3\12\2\uffff\1\13\5\12\1\uffff\1\12\2\uffff\1\12\6\uffff\2\12\3\uffff\3\12\5\uffff\6\12\10\uffff\4\12\2\uffff\1\12\1\uffff\1\12\27\uffff\1\7\3\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\42\uffff\2\12\1\6\1\10\1\11",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\2\12\4\uffff\1\12\4\uffff\1\12\1\uffff\3\12\1\uffff\3\12\2\uffff\1\13\5\12\1\uffff\1\12\2\uffff\1\12\6\uffff\2\12\3\uffff\3\12\5\uffff\6\12\10\uffff\4\12\2\uffff\1\12\1\uffff\1\12\27\uffff\1\7\3\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\42\uffff\2\12\1\uffff\1\10\1\11",
            "\1\14",
            "\1\17\u00f0\uffff\1\15\1\16",
            "\1\17\u00f0\uffff\1\15\1\16",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\2\12\4\uffff\1\12\4\uffff\1\12\1\uffff\3\12\1\uffff\3\12\2\uffff\1\13\5\12\1\uffff\1\12\2\uffff\1\12\6\uffff\2\12\3\uffff\3\12\5\uffff\6\12\10\uffff\4\12\2\uffff\1\12\1\uffff\1\12\33\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\42\uffff\2\12\1\uffff\1\10\1\11",
            "\1\17",
            "\1\17",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\2\12\4\uffff\1\12\4\uffff\1\12\1\uffff\3\12\1\uffff\3\12\2\uffff\1\13\5\12\1\uffff\1\12\2\uffff\1\12\6\uffff\2\12\3\uffff\3\12\5\uffff\6\12\10\uffff\4\12\2\uffff\1\12\1\uffff\1\12\33\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\42\uffff\2\12"
    };
    static final short[] dfa_293 = DFA.unpackEncodedString(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final char[] dfa_295 = DFA.unpackEncodedStringToUnsignedChars(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[] dfa_297 = DFA.unpackEncodedString(dfa_297s);
    static final short[][] dfa_298 = unpackEncodedStringArray(dfa_298s);

    class DFA307 extends DFA {

        public DFA307(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 307;
            this.eot = dfa_87;
            this.eof = dfa_293;
            this.min = dfa_294;
            this.max = dfa_295;
            this.accept = dfa_296;
            this.special = dfa_297;
            this.transition = dfa_298;
        }
        public String getDescription() {
            return "14382:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_299s = "\22\uffff";
    static final String dfa_300s = "\3\uffff\1\14\4\uffff\1\14\5\uffff\1\14\2\uffff\1\14";
    static final String dfa_301s = "\1\6\2\12\1\4\4\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_302s = "\1\u00fc\2\12\1\u00ff\4\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u00fc";
    static final String dfa_303s = "\4\uffff\1\3\1\4\1\5\1\6\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_304s = "\22\uffff}>";
    static final String[] dfa_305s = {
            "\1\4\3\uffff\1\3\1\uffff\1\6\20\uffff\1\7\2\5\u00db\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\14\1\uffff\6\14\10\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\26\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\42\uffff\2\14\1\10\1\12\1\13",
            "",
            "",
            "",
            "",
            "\3\14\1\uffff\6\14\10\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\26\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\42\uffff\2\14\1\uffff\1\12\1\13",
            "\1\16",
            "\1\21\u00f0\uffff\1\17\1\20",
            "\1\21\u00f0\uffff\1\17\1\20",
            "",
            "",
            "\3\14\1\uffff\6\14\10\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\32\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\42\uffff\2\14\1\uffff\1\12\1\13",
            "\1\21",
            "\1\21",
            "\3\14\1\uffff\6\14\10\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\32\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\42\uffff\2\14"
    };

    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final short[] dfa_300 = DFA.unpackEncodedString(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final char[] dfa_302 = DFA.unpackEncodedStringToUnsignedChars(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final short[][] dfa_305 = unpackEncodedStringArray(dfa_305s);

    class DFA309 extends DFA {

        public DFA309(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 309;
            this.eot = dfa_299;
            this.eof = dfa_300;
            this.min = dfa_301;
            this.max = dfa_302;
            this.accept = dfa_303;
            this.special = dfa_304;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "14519:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_306s = "\1\uffff\3\5\4\uffff\3\5";
    static final String dfa_307s = "\1\4\3\35\1\60\2\uffff\1\4\3\35";
    static final String dfa_308s = "\1\u00fc\4\u00d9\2\uffff\1\13\3\u00d9";
    static final String dfa_309s = "\5\uffff\1\2\1\1\4\uffff";
    static final String[] dfa_310s = {
            "\1\1\1\2\1\5\1\uffff\3\5\1\3\1\uffff\1\5\2\uffff\1\5\15\uffff\2\5\10\uffff\1\5\7\uffff\1\5\6\uffff\2\5\31\uffff\4\5\2\uffff\1\5\1\uffff\1\5\33\uffff\1\5\4\uffff\1\5\15\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\12\5\1\4\1\5\60\uffff\1\5\42\uffff\2\5",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6",
            "\1\6\117\uffff\1\5\130\uffff\1\6",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6",
            "\1\5\12\uffff\2\5\6\uffff\1\6\76\uffff\1\5\2\uffff\1\7\146\uffff\1\6"
    };
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[][] dfa_310 = unpackEncodedStringArray(dfa_310s);

    class DFA318 extends DFA {

        public DFA318(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 318;
            this.eot = dfa_46;
            this.eof = dfa_306;
            this.min = dfa_307;
            this.max = dfa_308;
            this.accept = dfa_309;
            this.special = dfa_96;
            this.transition = dfa_310;
        }
        public String getDescription() {
            return "14944:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )";
        }
    }
    static final String dfa_311s = "\2\uffff\3\1\3\uffff\3\1";
    static final String dfa_312s = "\1\4\1\uffff\3\35\1\60\1\4\1\uffff\3\35";
    static final String dfa_313s = "\1\u00fc\1\uffff\4\u00d9\1\13\1\uffff\3\u00d9";
    static final String dfa_314s = "\1\uffff\1\1\5\uffff\1\2\3\uffff";
    static final String[] dfa_315s = {
            "\1\3\1\2\1\1\1\uffff\3\1\1\4\1\uffff\1\1\2\uffff\1\1\15\uffff\2\1\10\uffff\1\1\7\uffff\1\1\6\uffff\2\1\31\uffff\4\1\2\uffff\1\1\1\uffff\1\1\33\uffff\1\1\4\uffff\1\1\15\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\12\1\1\5\1\1\60\uffff\1\1\42\uffff\2\1",
            "",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7",
            "\1\7\117\uffff\1\1\130\uffff\1\7",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\146\uffff\1\7"
    };
    static final short[] dfa_311 = DFA.unpackEncodedString(dfa_311s);
    static final char[] dfa_312 = DFA.unpackEncodedStringToUnsignedChars(dfa_312s);
    static final char[] dfa_313 = DFA.unpackEncodedStringToUnsignedChars(dfa_313s);
    static final short[] dfa_314 = DFA.unpackEncodedString(dfa_314s);
    static final short[][] dfa_315 = unpackEncodedStringArray(dfa_315s);

    class DFA316 extends DFA {

        public DFA316(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 316;
            this.eot = dfa_46;
            this.eof = dfa_311;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_96;
            this.transition = dfa_315;
        }
        public String getDescription() {
            return "15023:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )";
        }
    }
    static final String dfa_316s = "\1\4\7\uffff\4\0\24\uffff\4\0\22\uffff";
    static final String dfa_317s = "\1\u00fc\7\uffff\4\0\24\uffff\4\0\22\uffff";
    static final String dfa_318s = "\1\uffff\1\1\1\2\41\uffff\1\5\2\uffff\1\6\1\7\1\11\1\14\5\uffff\1\15\1\3\1\10\1\12\1\4\1\13";
    static final String dfa_319s = "\10\uffff\1\0\1\1\1\2\1\3\24\uffff\1\4\1\5\1\6\1\7\22\uffff}>";
    static final String[] dfa_320s = {
            "\1\11\1\10\1\44\1\uffff\1\47\1\13\1\41\1\12\1\uffff\1\2\2\uffff\1\50\15\uffff\2\44\10\uffff\1\40\7\uffff\1\52\6\uffff\1\60\1\51\31\uffff\4\52\2\uffff\1\2\1\uffff\1\52\33\uffff\1\2\4\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\60\uffff\1\1\42\uffff\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_316 = DFA.unpackEncodedStringToUnsignedChars(dfa_316s);
    static final char[] dfa_317 = DFA.unpackEncodedStringToUnsignedChars(dfa_317s);
    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final short[] dfa_319 = DFA.unpackEncodedString(dfa_319s);
    static final short[][] dfa_320 = unpackEncodedStringArray(dfa_320s);

    class DFA320 extends DFA {

        public DFA320(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 320;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_316;
            this.max = dfa_317;
            this.accept = dfa_318;
            this.special = dfa_319;
            this.transition = dfa_320;
        }
        public String getDescription() {
            return "15084:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA320_8 = input.LA(1);

                         
                        int index320_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred565_InternalKim()) ) {s = 2;}

                        else if ( (synpred566_InternalKim()) ) {s = 49;}

                        else if ( (synpred574_InternalKim()) ) {s = 50;}

                         
                        input.seek(index320_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA320_9 = input.LA(1);

                         
                        int index320_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred565_InternalKim()) ) {s = 2;}

                        else if ( (synpred566_InternalKim()) ) {s = 49;}

                        else if ( (synpred574_InternalKim()) ) {s = 50;}

                         
                        input.seek(index320_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA320_10 = input.LA(1);

                         
                        int index320_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred565_InternalKim()) ) {s = 2;}

                        else if ( (synpred566_InternalKim()) ) {s = 49;}

                        else if ( (synpred574_InternalKim()) ) {s = 50;}

                         
                        input.seek(index320_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA320_11 = input.LA(1);

                         
                        int index320_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred565_InternalKim()) ) {s = 2;}

                        else if ( (synpred574_InternalKim()) ) {s = 50;}

                         
                        input.seek(index320_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA320_32 = input.LA(1);

                         
                        int index320_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred565_InternalKim()) ) {s = 2;}

                        else if ( (synpred576_InternalKim()) ) {s = 51;}

                         
                        input.seek(index320_32);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA320_33 = input.LA(1);

                         
                        int index320_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred567_InternalKim()) ) {s = 52;}

                        else if ( (synpred568_InternalKim()) ) {s = 36;}

                        else if ( (synpred577_InternalKim()) ) {s = 53;}

                         
                        input.seek(index320_33);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA320_34 = input.LA(1);

                         
                        int index320_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred568_InternalKim()) ) {s = 36;}

                        else if ( (synpred577_InternalKim()) ) {s = 53;}

                         
                        input.seek(index320_34);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA320_35 = input.LA(1);

                         
                        int index320_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred568_InternalKim()) ) {s = 36;}

                        else if ( (synpred577_InternalKim()) ) {s = 53;}

                         
                        input.seek(index320_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 320, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_321s = "\24\uffff";
    static final String dfa_322s = "\1\4\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_323s = "\1\u00fc\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_324s = "\4\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\12\1\7\1\10";
    static final String dfa_325s = "\1\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\11\uffff}>";
    static final String[] dfa_326s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\4\20\uffff\3\4\10\uffff\1\16\16\uffff\1\21\1\17\u009f\uffff\1\20\42\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_321 = DFA.unpackEncodedString(dfa_321s);
    static final char[] dfa_322 = DFA.unpackEncodedStringToUnsignedChars(dfa_322s);
    static final char[] dfa_323 = DFA.unpackEncodedStringToUnsignedChars(dfa_323s);
    static final short[] dfa_324 = DFA.unpackEncodedString(dfa_324s);
    static final short[] dfa_325 = DFA.unpackEncodedString(dfa_325s);
    static final short[][] dfa_326 = unpackEncodedStringArray(dfa_326s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_321;
            this.eof = dfa_321;
            this.min = dfa_322;
            this.max = dfa_323;
            this.accept = dfa_324;
            this.special = dfa_325;
            this.transition = dfa_326;
        }
        public String getDescription() {
            return "15423:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA323_1 = input.LA(1);

                         
                        int index323_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred579_InternalKim()) ) {s = 4;}

                        else if ( (synpred588_InternalKim()) ) {s = 18;}

                         
                        input.seek(index323_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA323_2 = input.LA(1);

                         
                        int index323_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred579_InternalKim()) ) {s = 4;}

                        else if ( (synpred588_InternalKim()) ) {s = 18;}

                         
                        input.seek(index323_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA323_3 = input.LA(1);

                         
                        int index323_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred579_InternalKim()) ) {s = 4;}

                        else if ( (synpred588_InternalKim()) ) {s = 18;}

                        else if ( (synpred589_InternalKim()) ) {s = 19;}

                         
                        input.seek(index323_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA323_9 = input.LA(1);

                         
                        int index323_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred580_InternalKim()) ) {s = 11;}

                        else if ( (synpred585_InternalKim()) ) {s = 13;}

                         
                        input.seek(index323_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA323_10 = input.LA(1);

                         
                        int index323_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred580_InternalKim()) ) {s = 11;}

                        else if ( (synpred585_InternalKim()) ) {s = 13;}

                         
                        input.seek(index323_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 323, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_327s = "\34\uffff";
    static final String dfa_328s = "\3\uffff\1\4\2\uffff\2\24\3\uffff\1\4\1\uffff\1\4\1\21\6\uffff\1\4\2\uffff\1\4\3\uffff";
    static final String dfa_329s = "\1\4\2\12\1\33\2\uffff\2\33\1\50\1\0\1\uffff\1\33\1\uffff\1\33\1\4\2\12\1\uffff\1\4\2\uffff\1\33\2\12\1\33\3\50";
    static final String dfa_330s = "\1\u00fc\2\12\1\u0102\2\uffff\3\162\1\0\1\uffff\1\u00ff\1\uffff\1\u00ff\1\u0103\2\u00fc\1\uffff\1\13\2\uffff\1\u00ff\2\12\4\162";
    static final String dfa_331s = "\4\uffff\1\1\1\2\4\uffff\1\4\1\uffff\1\6\4\uffff\1\5\1\uffff\1\3\1\7\7\uffff";
    static final String dfa_332s = "\11\uffff\1\0\22\uffff}>";
    static final String[] dfa_333s = {
            "\1\7\1\6\1\4\1\uffff\1\12\1\11\1\3\1\10\1\uffff\1\5\20\uffff\2\4\10\uffff\1\5\140\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\14\5\123\uffff\1\1\1\2",
            "\1\13",
            "\1\13",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\16\u0089\uffff\1\14\1\15\1\17\1\20\3\14",
            "",
            "",
            "\1\24\14\uffff\1\23\106\uffff\1\5\2\uffff\1\22",
            "\1\24\14\uffff\1\23\106\uffff\1\5\2\uffff\1\22",
            "\1\23\106\uffff\1\5\2\uffff\1\22",
            "\1\uffff",
            "",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\16\u008a\uffff\1\15\1\17\1\20",
            "",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\16\u008b\uffff\1\17\1\20",
            "\2\21\3\uffff\1\21\1\25\3\uffff\1\21\14\uffff\1\21\14\uffff\1\21\4\uffff\1\21\103\uffff\1\21\u0091\uffff\1\21",
            "\1\30\u00f0\uffff\1\26\1\27",
            "\1\30\u00f0\uffff\1\26\1\27",
            "",
            "\1\31\1\32\5\uffff\1\33",
            "",
            "",
            "\1\4\12\uffff\1\4\112\uffff\2\21\u008b\uffff\1\17\1\20",
            "\1\30",
            "\1\30",
            "\1\4\12\uffff\1\4\112\uffff\2\21",
            "\1\23\106\uffff\1\5\2\uffff\1\22",
            "\1\23\106\uffff\1\5\2\uffff\1\22",
            "\1\23\106\uffff\1\5\2\uffff\1\22"
    };

    static final short[] dfa_327 = DFA.unpackEncodedString(dfa_327s);
    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final char[] dfa_329 = DFA.unpackEncodedStringToUnsignedChars(dfa_329s);
    static final char[] dfa_330 = DFA.unpackEncodedStringToUnsignedChars(dfa_330s);
    static final short[] dfa_331 = DFA.unpackEncodedString(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final short[][] dfa_333 = unpackEncodedStringArray(dfa_333s);

    class DFA325 extends DFA {

        public DFA325(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 325;
            this.eot = dfa_327;
            this.eof = dfa_328;
            this.min = dfa_329;
            this.max = dfa_330;
            this.accept = dfa_331;
            this.special = dfa_332;
            this.transition = dfa_333;
        }
        public String getDescription() {
            return "15692:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA325_9 = input.LA(1);

                         
                        int index325_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred592_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index325_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 325, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA334 extends DFA {

        public DFA334(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 334;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "16433:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA334_7 = input.LA(1);

                         
                        int index334_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA334_8 = input.LA(1);

                         
                        int index334_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA334_9 = input.LA(1);

                         
                        int index334_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA334_10 = input.LA(1);

                         
                        int index334_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA334_11 = input.LA(1);

                         
                        int index334_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA334_12 = input.LA(1);

                         
                        int index334_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA334_13 = input.LA(1);

                         
                        int index334_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA334_14 = input.LA(1);

                         
                        int index334_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA334_15 = input.LA(1);

                         
                        int index334_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA334_16 = input.LA(1);

                         
                        int index334_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA334_17 = input.LA(1);

                         
                        int index334_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA334_18 = input.LA(1);

                         
                        int index334_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA334_19 = input.LA(1);

                         
                        int index334_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA334_20 = input.LA(1);

                         
                        int index334_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA334_21 = input.LA(1);

                         
                        int index334_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA334_22 = input.LA(1);

                         
                        int index334_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA334_23 = input.LA(1);

                         
                        int index334_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA334_24 = input.LA(1);

                         
                        int index334_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA334_25 = input.LA(1);

                         
                        int index334_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA334_26 = input.LA(1);

                         
                        int index334_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA334_27 = input.LA(1);

                         
                        int index334_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA334_28 = input.LA(1);

                         
                        int index334_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA334_29 = input.LA(1);

                         
                        int index334_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA334_30 = input.LA(1);

                         
                        int index334_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA334_31 = input.LA(1);

                         
                        int index334_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA334_32 = input.LA(1);

                         
                        int index334_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA334_33 = input.LA(1);

                         
                        int index334_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA334_34 = input.LA(1);

                         
                        int index334_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred638_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index334_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 334, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_334s = "\1\12\1\uffff\1\4\41\uffff\1\50\1\26\1\50\26\uffff\3\4\3\50\1\0\7\uffff";
    static final String dfa_335s = "\1\u00fc\1\uffff\1\u00fc\41\uffff\3\162\26\uffff\3\13\3\162\1\0\7\uffff";
    static final String dfa_336s = "\1\uffff\1\7\1\uffff\1\1\2\2\3\3\22\4\2\5\1\6\6\4\3\uffff\26\4\7\uffff\7\4";
    static final String dfa_337s = "\1\3\1\uffff\1\4\73\uffff\1\0\1\1\3\uffff\1\2\7\uffff}>";
    static final String[] dfa_338s = {
            "\1\10\6\uffff\1\1\4\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\3\1\uffff\1\1\2\uffff\2\1\4\uffff\1\17\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\20\1\21\1\22\1\23\1\24\1\25\1\26\30\uffff\1\5\1\33\1\34\1\35\1\uffff\1\27\1\30\1\31\1\32\173\uffff\1\6\1\7",
            "",
            "\1\45\1\44\3\uffff\1\47\1\40\1\46\1\uffff\1\43\32\uffff\1\74\140\uffff\1\50\1\51\7\uffff\1\41\1\42\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\123\uffff\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\106\uffff\1\76\2\uffff\1\75",
            "\1\1\6\uffff\1\1\12\uffff\1\1\2\uffff\1\1\20\uffff\3\1\5\uffff\6\1\45\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\100\1\101\5\uffff\1\102",
            "\1\104\1\105\1\107\2\uffff\1\103\1\106\1\110",
            "\1\111\1\112\3\uffff\1\103\1\uffff\1\110",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\1\106\uffff\1\77\2\uffff\1\75",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_334 = DFA.unpackEncodedStringToUnsignedChars(dfa_334s);
    static final char[] dfa_335 = DFA.unpackEncodedStringToUnsignedChars(dfa_335s);
    static final short[] dfa_336 = DFA.unpackEncodedString(dfa_336s);
    static final short[] dfa_337 = DFA.unpackEncodedString(dfa_337s);
    static final short[][] dfa_338 = unpackEncodedStringArray(dfa_338s);

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_144;
            this.eof = dfa_182;
            this.min = dfa_334;
            this.max = dfa_335;
            this.accept = dfa_336;
            this.special = dfa_337;
            this.transition = dfa_338;
        }
        public String getDescription() {
            return "()* loopback of 16497:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA341_62 = input.LA(1);

                         
                        int index341_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_62==RULE_CAMELCASE_ID) ) {s = 67;}

                        else if ( LA341_62 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 68;}

                        else if ( LA341_62 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 69;}

                        else if ( LA341_62 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 70;}

                        else if ( LA341_62 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 71;}

                        else if ( LA341_62 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 72;}

                         
                        input.seek(index341_62);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA341_63 = input.LA(1);

                         
                        int index341_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_63==RULE_CAMELCASE_ID) ) {s = 67;}

                        else if ( LA341_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 73;}

                        else if ( LA341_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 74;}

                        else if ( LA341_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 72;}

                         
                        input.seek(index341_63);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA341_67 = input.LA(1);

                         
                        int index341_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred646_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 74;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_67);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA341_0 = input.LA(1);

                         
                        int index341_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_0==EOF||LA341_0==RULE_OPTION_KEY||LA341_0==22||LA341_0==29||(LA341_0>=33 && LA341_0<=35)||LA341_0==39||(LA341_0>=42 && LA341_0<=43)||LA341_0==60||LA341_0==62||(LA341_0>=68 && LA341_0<=73)) ) {s = 1;}

                        else if ( (LA341_0==61) ) {s = 2;}

                        else if ( LA341_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA341_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA341_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA341_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA341_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA341_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA341_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA341_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA341_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA341_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA341_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA341_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA341_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA341_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA341_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA341_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA341_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA341_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA341_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA341_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA341_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA341_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA341_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA341_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                        else if ( LA341_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA341_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                        else if ( LA341_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 29;}

                         
                        input.seek(index341_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA341_2 = input.LA(1);

                         
                        int index341_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA341_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 30;}

                        else if ( LA341_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 31;}

                        else if ( LA341_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 32;}

                        else if ( LA341_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 33;}

                        else if ( LA341_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 34;}

                        else if ( LA341_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 35;}

                        else if ( (LA341_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( (LA341_2==RULE_LOWERCASE_ID) ) {s = 37;}

                        else if ( (LA341_2==RULE_LOWERCASE_DASHID) ) {s = 38;}

                        else if ( LA341_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 39;}

                        else if ( LA341_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 40;}

                        else if ( LA341_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 41;}

                        else if ( LA341_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 42;}

                        else if ( LA341_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 43;}

                        else if ( LA341_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 44;}

                        else if ( LA341_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 45;}

                        else if ( LA341_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 46;}

                        else if ( LA341_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 47;}

                        else if ( LA341_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 48;}

                        else if ( LA341_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 49;}

                        else if ( LA341_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 50;}

                        else if ( LA341_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 51;}

                        else if ( LA341_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 52;}

                        else if ( LA341_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 53;}

                        else if ( LA341_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 54;}

                        else if ( LA341_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                        else if ( LA341_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 56;}

                        else if ( LA341_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 57;}

                        else if ( LA341_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 58;}

                        else if ( LA341_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 59;}

                        else if ( LA341_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 60;}

                         
                        input.seek(index341_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 341, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_339s = "\1\1\57\uffff";
    static final String dfa_340s = "\1\12\10\uffff\1\0\20\uffff\22\0\4\uffff";
    static final String dfa_341s = "\1\u00fc\10\uffff\1\0\20\uffff\22\0\4\uffff";
    static final String dfa_342s = "\1\uffff\1\2\55\uffff\1\1";
    static final String dfa_343s = "\11\uffff\1\0\20\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\4\uffff}>";
    static final String[] dfa_344s = {
            "\1\1\6\uffff\1\1\4\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\40\5\uffff\1\1\5\uffff\1\1\1\11\1\1\5\uffff\6\1\10\uffff\1\32\1\33\1\34\1\35\1\36\1\37\1\41\1\42\1\43\1\44\1\45\1\46\1\47\30\uffff\4\1\1\uffff\1\50\1\51\1\52\1\53\173\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_339 = DFA.unpackEncodedString(dfa_339s);
    static final char[] dfa_340 = DFA.unpackEncodedStringToUnsignedChars(dfa_340s);
    static final char[] dfa_341 = DFA.unpackEncodedStringToUnsignedChars(dfa_341s);
    static final short[] dfa_342 = DFA.unpackEncodedString(dfa_342s);
    static final short[] dfa_343 = DFA.unpackEncodedString(dfa_343s);
    static final short[][] dfa_344 = unpackEncodedStringArray(dfa_344s);

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = dfa_53;
            this.eof = dfa_339;
            this.min = dfa_340;
            this.max = dfa_341;
            this.accept = dfa_342;
            this.special = dfa_343;
            this.transition = dfa_344;
        }
        public String getDescription() {
            return "()* loopback of 16697:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA338_9 = input.LA(1);

                         
                        int index338_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA338_26 = input.LA(1);

                         
                        int index338_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_26);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA338_27 = input.LA(1);

                         
                        int index338_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_27);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA338_28 = input.LA(1);

                         
                        int index338_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_28);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA338_29 = input.LA(1);

                         
                        int index338_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_29);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA338_30 = input.LA(1);

                         
                        int index338_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_30);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA338_31 = input.LA(1);

                         
                        int index338_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_31);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA338_32 = input.LA(1);

                         
                        int index338_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_32);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA338_33 = input.LA(1);

                         
                        int index338_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_33);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA338_34 = input.LA(1);

                         
                        int index338_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_34);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA338_35 = input.LA(1);

                         
                        int index338_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_35);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA338_36 = input.LA(1);

                         
                        int index338_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_36);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA338_37 = input.LA(1);

                         
                        int index338_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_37);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA338_38 = input.LA(1);

                         
                        int index338_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_38);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA338_39 = input.LA(1);

                         
                        int index338_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_39);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA338_40 = input.LA(1);

                         
                        int index338_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_40);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA338_41 = input.LA(1);

                         
                        int index338_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_41);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA338_42 = input.LA(1);

                         
                        int index338_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_42);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA338_43 = input.LA(1);

                         
                        int index338_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index338_43);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 338, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA342 extends DFA {

        public DFA342(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 342;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "16841:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA342_7 = input.LA(1);

                         
                        int index342_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA342_8 = input.LA(1);

                         
                        int index342_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA342_9 = input.LA(1);

                         
                        int index342_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA342_10 = input.LA(1);

                         
                        int index342_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA342_11 = input.LA(1);

                         
                        int index342_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA342_12 = input.LA(1);

                         
                        int index342_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA342_13 = input.LA(1);

                         
                        int index342_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA342_14 = input.LA(1);

                         
                        int index342_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA342_15 = input.LA(1);

                         
                        int index342_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA342_16 = input.LA(1);

                         
                        int index342_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA342_17 = input.LA(1);

                         
                        int index342_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA342_18 = input.LA(1);

                         
                        int index342_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA342_19 = input.LA(1);

                         
                        int index342_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA342_20 = input.LA(1);

                         
                        int index342_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA342_21 = input.LA(1);

                         
                        int index342_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA342_22 = input.LA(1);

                         
                        int index342_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA342_23 = input.LA(1);

                         
                        int index342_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA342_24 = input.LA(1);

                         
                        int index342_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA342_25 = input.LA(1);

                         
                        int index342_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA342_26 = input.LA(1);

                         
                        int index342_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA342_27 = input.LA(1);

                         
                        int index342_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA342_28 = input.LA(1);

                         
                        int index342_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA342_29 = input.LA(1);

                         
                        int index342_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA342_30 = input.LA(1);

                         
                        int index342_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA342_31 = input.LA(1);

                         
                        int index342_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA342_32 = input.LA(1);

                         
                        int index342_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA342_33 = input.LA(1);

                         
                        int index342_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA342_34 = input.LA(1);

                         
                        int index342_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred651_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 342, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_345s = "\33\uffff";
    static final String dfa_346s = "\1\1\32\uffff";
    static final String dfa_347s = "\1\12\32\uffff";
    static final String dfa_348s = "\1\u00fc\32\uffff";
    static final String dfa_349s = "\1\uffff\1\5\1\1\2\2\3\3\23\4";
    static final String dfa_350s = "\1\0\32\uffff}>";
    static final String[] dfa_351s = {
            "\1\7\22\uffff\1\1\7\uffff\1\2\3\uffff\1\1\6\uffff\1\16\1\uffff\1\1\3\uffff\1\3\6\uffff\1\25\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\17\1\20\1\21\1\22\1\23\1\24\1\26\30\uffff\1\4\4\uffff\1\27\1\30\1\31\1\32\173\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_345 = DFA.unpackEncodedString(dfa_345s);
    static final short[] dfa_346 = DFA.unpackEncodedString(dfa_346s);
    static final char[] dfa_347 = DFA.unpackEncodedStringToUnsignedChars(dfa_347s);
    static final char[] dfa_348 = DFA.unpackEncodedStringToUnsignedChars(dfa_348s);
    static final short[] dfa_349 = DFA.unpackEncodedString(dfa_349s);
    static final short[] dfa_350 = DFA.unpackEncodedString(dfa_350s);
    static final short[][] dfa_351 = unpackEncodedStringArray(dfa_351s);

    class DFA347 extends DFA {

        public DFA347(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 347;
            this.eot = dfa_345;
            this.eof = dfa_346;
            this.min = dfa_347;
            this.max = dfa_348;
            this.accept = dfa_349;
            this.special = dfa_350;
            this.transition = dfa_351;
        }
        public String getDescription() {
            return "()* loopback of 16905:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA347_0 = input.LA(1);

                         
                        int index347_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA347_0==EOF||LA347_0==29||LA347_0==41||LA347_0==50) ) {s = 1;}

                        else if ( LA347_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA347_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA347_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA347_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA347_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA347_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA347_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( LA347_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA347_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA347_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA347_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA347_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA347_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA347_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA347_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA347_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA347_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA347_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA347_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA347_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA347_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA347_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA347_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA347_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA347_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                         
                        input.seek(index347_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 347, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_352s = "\37\uffff";
    static final String dfa_353s = "\1\1\36\uffff";
    static final String dfa_354s = "\1\12\12\uffff\23\0\1\uffff";
    static final String dfa_355s = "\1\u00fc\12\uffff\23\0\1\uffff";
    static final String dfa_356s = "\1\uffff\1\2\34\uffff\1\1";
    static final String dfa_357s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_358s = {
            "\1\1\22\uffff\1\1\7\uffff\1\1\3\uffff\1\1\6\uffff\1\21\1\uffff\1\1\3\uffff\1\1\6\uffff\1\30\24\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\22\1\23\1\24\1\25\1\26\1\27\1\31\30\uffff\1\1\4\uffff\1\32\1\33\1\34\1\35\173\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_352 = DFA.unpackEncodedString(dfa_352s);
    static final short[] dfa_353 = DFA.unpackEncodedString(dfa_353s);
    static final char[] dfa_354 = DFA.unpackEncodedStringToUnsignedChars(dfa_354s);
    static final char[] dfa_355 = DFA.unpackEncodedStringToUnsignedChars(dfa_355s);
    static final short[] dfa_356 = DFA.unpackEncodedString(dfa_356s);
    static final short[] dfa_357 = DFA.unpackEncodedString(dfa_357s);
    static final short[][] dfa_358 = unpackEncodedStringArray(dfa_358s);

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_352;
            this.eof = dfa_353;
            this.min = dfa_354;
            this.max = dfa_355;
            this.accept = dfa_356;
            this.special = dfa_357;
            this.transition = dfa_358;
        }
        public String getDescription() {
            return "()* loopback of 17105:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA346_11 = input.LA(1);

                         
                        int index346_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA346_12 = input.LA(1);

                         
                        int index346_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA346_13 = input.LA(1);

                         
                        int index346_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA346_14 = input.LA(1);

                         
                        int index346_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA346_15 = input.LA(1);

                         
                        int index346_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA346_16 = input.LA(1);

                         
                        int index346_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA346_17 = input.LA(1);

                         
                        int index346_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA346_18 = input.LA(1);

                         
                        int index346_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA346_19 = input.LA(1);

                         
                        int index346_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA346_20 = input.LA(1);

                         
                        int index346_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA346_21 = input.LA(1);

                         
                        int index346_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA346_22 = input.LA(1);

                         
                        int index346_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA346_23 = input.LA(1);

                         
                        int index346_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA346_24 = input.LA(1);

                         
                        int index346_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA346_25 = input.LA(1);

                         
                        int index346_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA346_26 = input.LA(1);

                         
                        int index346_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_26);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA346_27 = input.LA(1);

                         
                        int index346_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_27);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA346_28 = input.LA(1);

                         
                        int index346_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_28);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA346_29 = input.LA(1);

                         
                        int index346_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred658_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 346, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_359s = "\174\uffff";
    static final String dfa_360s = "\1\6\173\uffff";
    static final String dfa_361s = "\1\4\5\0\166\uffff";
    static final String dfa_362s = "\1\u0103\5\0\166\uffff";
    static final String dfa_363s = "\6\uffff\1\2\164\uffff\1\1";
    static final String dfa_364s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\166\uffff}>";
    static final String[] dfa_365s = {
            "\1\2\1\3\3\6\1\1\4\6\1\4\1\uffff\2\6\4\uffff\1\6\4\uffff\1\6\1\uffff\7\6\1\uffff\1\6\1\uffff\1\6\1\5\3\6\1\uffff\1\6\2\uffff\1\6\1\uffff\2\6\2\uffff\5\6\1\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\17\uffff\1\6\2\uffff\1\6\3\uffff\13\6\11\uffff\2\6\6\uffff\3\6\1\uffff\6\6\1\uffff\14\6\14\uffff\2\6\2\uffff\1\6\1\uffff\11\6\2\uffff\10\6\5\uffff\1\6\5\uffff\1\6\42\uffff\2\6\6\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_359 = DFA.unpackEncodedString(dfa_359s);
    static final short[] dfa_360 = DFA.unpackEncodedString(dfa_360s);
    static final char[] dfa_361 = DFA.unpackEncodedStringToUnsignedChars(dfa_361s);
    static final char[] dfa_362 = DFA.unpackEncodedStringToUnsignedChars(dfa_362s);
    static final short[] dfa_363 = DFA.unpackEncodedString(dfa_363s);
    static final short[] dfa_364 = DFA.unpackEncodedString(dfa_364s);
    static final short[][] dfa_365 = unpackEncodedStringArray(dfa_365s);

    class DFA353 extends DFA {

        public DFA353(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 353;
            this.eot = dfa_359;
            this.eof = dfa_360;
            this.min = dfa_361;
            this.max = dfa_362;
            this.accept = dfa_363;
            this.special = dfa_364;
            this.transition = dfa_365;
        }
        public String getDescription() {
            return "17507:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA353_1 = input.LA(1);

                         
                        int index353_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index353_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA353_2 = input.LA(1);

                         
                        int index353_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index353_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA353_3 = input.LA(1);

                         
                        int index353_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index353_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA353_4 = input.LA(1);

                         
                        int index353_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index353_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA353_5 = input.LA(1);

                         
                        int index353_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index353_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 353, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_366s = "\41\uffff";
    static final String dfa_367s = "\5\uffff\2\1\2\uffff\5\1\3\uffff\5\1\6\uffff\2\1\3\uffff";
    static final String dfa_368s = "\1\4\1\uffff\1\157\1\uffff\22\4\3\73\5\4\3\73";
    static final String dfa_369s = "\1\15\1\uffff\1\162\1\uffff\1\13\2\u00fc\1\13\6\u00fc\3\13\5\u00fc\3\162\3\13\2\u00fc\3\162";
    static final String dfa_370s = "\1\uffff\1\1\1\uffff\1\2\35\uffff";
    static final String dfa_371s = "\41\uffff}>";
    static final String[] dfa_372s = {
            "\1\3\1\2\5\uffff\1\3\1\uffff\1\1",
            "",
            "\1\4\2\uffff\1\3",
            "",
            "\1\5\1\6\1\1\3\uffff\1\1\1\3",
            "\10\1\1\uffff\2\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\10\1\1\10\2\uffff\1\7\2\uffff\26\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\10\1\1\10\2\uffff\1\7\2\uffff\26\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "\1\11\1\12\1\1\3\uffff\1\1\1\3",
            "\1\14\1\13\1\1\1\uffff\3\1\1\15\1\uffff\1\1\2\uffff\1\1\15\uffff\2\1\10\uffff\1\1\7\uffff\1\1\6\uffff\2\1\11\uffff\1\1\17\uffff\4\1\2\uffff\1\1\1\uffff\1\1\33\uffff\1\1\4\uffff\1\1\5\uffff\3\1\5\uffff\10\1\1\uffff\2\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\42\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\10\1\1\10\2\uffff\1\7\2\uffff\26\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\2\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\10\1\1\10\2\uffff\1\7\2\uffff\26\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\42\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\1\21\1\22\5\uffff\1\23",
            "\1\24\1\25\1\1\2\uffff\2\1\1\26",
            "\1\27\1\30\3\uffff\1\1\1\uffff\1\26",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\26\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\31\4\uffff\1\1\4\uffff\17\1\6\uffff\12\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\31\4\uffff\1\1\4\uffff\17\1\6\uffff\12\1\1\uffff\14\1\123\uffff\2\1",
            "\1\3\63\uffff\1\32\2\uffff\1\33",
            "\1\3\63\uffff\1\32\2\uffff\1\33",
            "\1\3\63\uffff\1\32\2\uffff\1\33",
            "\1\34\1\35\1\1\3\uffff\1\1\1\36",
            "\2\1\4\uffff\1\3\1\1",
            "\1\37\1\40\5\uffff\1\36",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\31\4\uffff\1\1\4\uffff\17\1\6\uffff\12\1\1\uffff\14\1\123\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\17\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\31\4\uffff\1\1\4\uffff\17\1\6\uffff\12\1\1\uffff\14\1\123\uffff\2\1",
            "\1\3\63\uffff\1\32\2\uffff\1\33",
            "\1\3\63\uffff\1\32\2\uffff\1\33",
            "\1\3\63\uffff\1\32\2\uffff\1\33"
    };

    static final short[] dfa_366 = DFA.unpackEncodedString(dfa_366s);
    static final short[] dfa_367 = DFA.unpackEncodedString(dfa_367s);
    static final char[] dfa_368 = DFA.unpackEncodedStringToUnsignedChars(dfa_368s);
    static final char[] dfa_369 = DFA.unpackEncodedStringToUnsignedChars(dfa_369s);
    static final short[] dfa_370 = DFA.unpackEncodedString(dfa_370s);
    static final short[] dfa_371 = DFA.unpackEncodedString(dfa_371s);
    static final short[][] dfa_372 = unpackEncodedStringArray(dfa_372s);

    class DFA379 extends DFA {

        public DFA379(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 379;
            this.eot = dfa_366;
            this.eof = dfa_367;
            this.min = dfa_368;
            this.max = dfa_369;
            this.accept = dfa_370;
            this.special = dfa_371;
            this.transition = dfa_372;
        }
        public String getDescription() {
            return "18404:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )";
        }
    }
    static final String dfa_373s = "\1\4\3\33\1\uffff\1\0\3\uffff\4\4\3\33\3\157\1\33\5\4\6\157\4\4\3\157\3\33\1\4\1\12\1\4\3\33\1\4\2\0\1\12\1\4\2\33\1\4\1\12\1\4";
    static final String dfa_374s = "\1\u00fc\3\162\1\uffff\1\0\3\uffff\4\13\7\162\2\u00a7\3\13\6\162\2\u00a7\2\13\6\162\1\13\1\12\1\13\3\162\1\u00fc\2\0\1\12\3\73\1\u00fc\1\12\1\u00fc";
    static final String[] dfa_375s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\6\1\3\1\uffff\1\7\20\uffff\2\10\10\uffff\1\7\105\uffff\1\4\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7\123\uffff\2\6",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "\1\4\1\uffff\1\4\121\uffff\1\14\2\uffff\1\13",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\15\1\16\5\uffff\1\17",
            "\1\20\1\21\3\uffff\1\7\1\uffff\1\22",
            "\1\23\1\16\5\uffff\1\17",
            "\1\24\1\25\1\7\2\uffff\2\7\1\22",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\31\1\32\5\uffff\1\33",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\1\40\1\7\3\uffff\1\7\1\33",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\15\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\15\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\43\1\44\5\uffff\1\45",
            "\1\46\1\47\4\uffff\1\4\1\50",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\54\1\55\5\uffff\1\56",
            "\1\57",
            "\1\60\1\61\1\7\3\uffff\1\7\1\4",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\62\u0089\uffff\1\63",
            "\1\uffff",
            "\1\uffff",
            "\1\66",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\67\u0089\uffff\1\63",
            "\1\70",
            "\1\64\1\65\25\uffff\1\4\1\uffff\1\4\35\uffff\1\53\u00c0\uffff\1\63"
    };
    static final char[] dfa_373 = DFA.unpackEncodedStringToUnsignedChars(dfa_373s);
    static final char[] dfa_374 = DFA.unpackEncodedStringToUnsignedChars(dfa_374s);
    static final short[][] dfa_375 = unpackEncodedStringArray(dfa_375s);

    class DFA395 extends DFA {

        public DFA395(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 395;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_373;
            this.max = dfa_374;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_375;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA395_5 = input.LA(1);

                         
                        int index395_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index395_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA395_49 = input.LA(1);

                         
                        int index395_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index395_49);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA395_48 = input.LA(1);

                         
                        int index395_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index395_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 395, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA486 extends DFA {

        public DFA486(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 486;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_376s = "\1\4\3\157\4\uffff\1\4\3\157";
    static final String[] dfa_377s = {
            "\1\1\1\2\1\5\4\uffff\1\3\142\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10"
    };
    static final char[] dfa_376 = DFA.unpackEncodedStringToUnsignedChars(dfa_376s);
    static final short[][] dfa_377 = unpackEncodedStringArray(dfa_377s);

    class DFA514 extends DFA {

        public DFA514(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 514;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_376;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_377;
        }
        public String getDescription() {
            return "8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA514_1 = input.LA(1);

                         
                        int index514_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA514_1==111||LA514_1==114) ) {s = 4;}

                        else if ( (synpred327_InternalKim()) ) {s = 6;}

                        else if ( (synpred328_InternalKim()) ) {s = 7;}

                         
                        input.seek(index514_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 514, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_378s = "\1\4\2\33\1\50\1\uffff\1\33\1\uffff\3\4\3\50\3\157\5\4\6\157\4\4\3\157\3\73\1\4\1\12\1\4\3\73\1\4\2\0\1\12\1\4\2\73\1\4\1\12\1\4";
    static final String dfa_379s = "\1\u00fc\3\162\1\uffff\1\33\1\uffff\3\13\6\162\2\u00fc\3\13\6\162\2\u00fc\2\13\6\162\1\13\1\12\1\13\3\162\1\u00fc\2\0\1\12\3\73\1\u00fc\1\12\1\u00fc";
    static final String[] dfa_380s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\20\uffff\2\6\10\uffff\1\6\105\uffff\1\4\7\uffff\1\6\22\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\123\uffff\2\6",
            "\1\6\14\uffff\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\14\uffff\1\6\106\uffff\1\11\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "",
            "\1\6",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\1\15\1\16\3\uffff\1\6\1\uffff\1\17",
            "\1\20\1\21\1\6\2\uffff\2\6\1\17",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\11\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\11\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\1\25\1\26\5\uffff\1\27",
            "\1\30\1\31\5\uffff\1\32",
            "\1\33\1\34\1\6\3\uffff\1\6\1\27",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\11\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\3\uffff\1\6\11\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\123\uffff\2\6",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\4\uffff\1\4\1\44",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\50\1\51\5\uffff\1\52",
            "\1\53",
            "\1\54\1\55\1\6\3\uffff\1\6\1\4",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\60\1\61\65\uffff\1\47\66\uffff\1\56\u0089\uffff\1\57",
            "\1\uffff",
            "\1\uffff",
            "\1\62",
            "\1\60\1\61\65\uffff\1\47",
            "\1\47",
            "\1\47",
            "\1\60\1\61\65\uffff\1\47\66\uffff\1\63\u0089\uffff\1\57",
            "\1\64",
            "\1\60\1\61\65\uffff\1\47\u00c0\uffff\1\57"
    };
    static final char[] dfa_378 = DFA.unpackEncodedStringToUnsignedChars(dfa_378s);
    static final char[] dfa_379 = DFA.unpackEncodedStringToUnsignedChars(dfa_379s);
    static final short[][] dfa_380 = unpackEncodedStringArray(dfa_380s);

    class DFA519 extends DFA {

        public DFA519(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 519;
            this.eot = dfa_201;
            this.eof = dfa_202;
            this.min = dfa_378;
            this.max = dfa_379;
            this.accept = dfa_205;
            this.special = dfa_206;
            this.transition = dfa_380;
        }
        public String getDescription() {
            return "8285:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ( ( (lv_options_3_0= ruleOption ) ) ( (lv_options_4_0= ruleOption ) )* )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA519_44 = input.LA(1);

                         
                        int index519_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index519_44);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA519_45 = input.LA(1);

                         
                        int index519_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index519_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 519, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA516 extends DFA {

        public DFA516(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 516;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_376;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_377;
        }
        public String getDescription() {
            return "8288:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA516_1 = input.LA(1);

                         
                        int index516_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA516_1==111||LA516_1==114) ) {s = 4;}

                        else if ( (synpred327_InternalKim()) ) {s = 6;}

                        else if ( (synpred328_InternalKim()) ) {s = 7;}

                         
                        input.seek(index516_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 516, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_381s = "\1\113\14\uffff";
    static final String dfa_382s = "\1\u0088\14\uffff";
    static final String[] dfa_383s = {
            "\1\3\34\uffff\1\4\27\uffff\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_381 = DFA.unpackEncodedStringToUnsignedChars(dfa_381s);
    static final char[] dfa_382 = DFA.unpackEncodedStringToUnsignedChars(dfa_382s);
    static final short[][] dfa_383 = unpackEncodedStringArray(dfa_383s);

    class DFA531 extends DFA {

        public DFA531(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 531;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_381;
            this.max = dfa_382;
            this.accept = dfa_231;
            this.special = dfa_232;
            this.transition = dfa_383;
        }
        public String getDescription() {
            return "()* loopback of 8624:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA531_0 = input.LA(1);

                         
                        int index531_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA531_0==EOF) ) {s = 1;}

                        else if ( LA531_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA531_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA531_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA531_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA531_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA531_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA531_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA531_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA531_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA531_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA531_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index531_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 531, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000007808002L,0x000800200003F000L,0x000FF80000000000L,0x03FFFFFFFCF00008L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000003808000L,0x000000000003F000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000003800000L,0x000000000003F000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x01800100F000BF70L,0x0040400000000000L,0x000000FFF7EC0600L,0x1800000001000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000004008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x01800100E0001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000028000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000A70L,0x0000400000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x70000C8F00000042L,0x00000000000003F0L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x70000C8F20000042L,0x00000000000003F0L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x70000C8F00000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00000100C000AF70L,0x0440400000000000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x70000C8E20000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000970L,0x0000400000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x70000C8C20000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000003000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000010000002A30L,0x0000000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x70000C8000000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000830L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000011000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000310000002A30L,0x0000000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000020020000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x08C12100C0002F70L,0x00000000043C0000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x7000080000000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000014000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000C10000002A30L,0x0000000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x000E000000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x00C12100C0002E70L,0x00000000043C0000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0030004000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0030000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0AC12100C0002F70L,0x00000000043C0000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x7000000020000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x7000000000000000L,0x00000000000003F0L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x8000010000002A30L,0x0000000000000003L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x7000010000000000L,0x00000000000003F0L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x7040010000000000L,0x00000000000003F0L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x00800140E0001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x000C000020000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x01800100E0001F70L,0x0000000000000400L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x01800100E0001F72L,0x0000000000000000L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x000C000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x004C000000000002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000003808000L,0x0000000380000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000003800000L,0x0000000380000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0040080200400040L,0x0000369800000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0040080200400000L,0x0000369800000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000210000000830L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0040080220400000L,0x0000369800000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000010000000870L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000010000002A30L,0x0000004000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0040080200400000L,0x00003E9800000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0040080200400830L,0x0000369800000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000080000400000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000830L,0x0000400000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000C30L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0800000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0800000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000470L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0800000000000002L,0x0006000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000A10L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000008000L,0x0008000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000090200002A70L,0x0000400000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000010000002A70L,0x0000400000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x7000090300002A72L,0x00304000000003F0L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x7000090320002A72L,0x00204000000003F0L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x00000100C0002F70L,0x0040000000000000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x7000090200002A72L,0x00004000000003F0L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000090200002A72L,0x0000400000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000010000002A30L,0x0040000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x2041002000000402L,0xF78000007FFC0000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x2041212000004630L,0xF78200007FFC0000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x2041000000000402L,0xF08000007FFC0000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x2041210000004630L,0xF08200007FFC0000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000010000002E30L,0x0000000000000000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x01800100E000BF70L,0x0040000000000000L,0x000000FFF7EC0600L,0x1800000001000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000010000000002L,0x0700000000000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000010000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000010000002A32L,0x0000010000000800L,0x000000FFF7EC07FFL});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000010010002A70L,0x0000000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000800L,0x00000000000001FFL});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000002A30L,0x0000000000000000L,0x00000000000C0600L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000001660L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000002020L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000004000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000010000002A32L,0x0000000000000000L,0x000000FFF7EC0600L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000200000000L,0x0000000000000004L,0x000038000001F80EL,0x0300000000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000008000L,0x0000002000000000L,0x000FF80000000000L,0x03FFFFFFFCF00008L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000008200L,0x0000004000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000200L,0x0000004000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000080000004872L,0x0000000000000000L,0xFD30000000000000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000080000004872L,0x0000000000000000L,0xFD30000000100000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000001440L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000010000002A30L,0x0000000000000000L,0x00C000FFF7EC0600L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000010000002A30L,0x0000000000000000L,0x008000FFF7EC0600L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000080020004872L,0x0000000000000000L,0xFD30030000000000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000010000002A30L,0x0000000000000000L,0x020000FFF7EC0600L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0200000000000000L,0x0000000000F00000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000080020004872L,0x0000000000000000L,0xFD30000000000000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000080008004872L,0x0000000000000000L,0xFD30000000000000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000010010002E70L,0x0000000000000000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0040000020000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0040000020000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000084020004872L,0x0000000000000000L,0xFD30000000000000L,0x0000000000041FE7L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000000L,0x0020008000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000010000000200L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000010000002E30L,0x0000000001000000L,0x000000FFF7EC0600L,0x0000000000006000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0040004000000002L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000018000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000010010002E70L,0x0000000001000000L,0x000000FFF7EC0600L,0x0000000000006000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000010010002A70L,0x0000000000000000L,0x000001FFF7EC0600L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x01810300C0012F70L,0x08400000053C0000L,0x000000FFF7EC0600L,0x1800000001000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x01810300E0012F70L,0x08400000053C0000L,0x000000FFF7EC0600L,0x1800000001000000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x01810100C0012F70L,0x08400000053C0000L,0x000000FFF7EC0600L,0x1800000001000000L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x00812100C0002E70L,0x00000000043C0000L,0x000000FFF7EE0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x00812100E0002E70L,0x00000000043C0000L,0x000000FFF7EE0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x00812100C0002E70L,0x00000000043C0000L,0x000000FFF7EC0600L,0x1800000000000000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000830L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x2045002000000402L,0xF08000007FFC0000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x2045212000004630L,0xF78200007FFC0000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x2045212000004630L,0xF08200007FFC0000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000000850L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000230000004230L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000200000000002L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000010000004230L});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L,0x0000000000000000L,0xE000000000000000L});
    public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_207 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L});
    public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000000000002L,0x0006000000000000L});
    public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x0000000000004810L});
    public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000000000000032L,0x0004000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_214 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_215 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_216 = new BitSet(new long[]{0x0000000003800002L});
    public static final BitSet FOLLOW_217 = new BitSet(new long[]{0x0000000000000832L});
    public static final BitSet FOLLOW_218 = new BitSet(new long[]{0x0000000200000002L,0x00001C0000000000L});
    public static final BitSet FOLLOW_219 = new BitSet(new long[]{0x0000000200000832L,0x0000140000000000L});
    public static final BitSet FOLLOW_220 = new BitSet(new long[]{0x0000000200000002L,0x0000140000000000L});
    public static final BitSet FOLLOW_221 = new BitSet(new long[]{0x7000000100000042L,0x00300000000003F0L});
    public static final BitSet FOLLOW_222 = new BitSet(new long[]{0x7000000100000002L,0x00300000000003F0L});
    public static final BitSet FOLLOW_223 = new BitSet(new long[]{0x7000000120000002L,0x00200000000003F0L});
    public static final BitSet FOLLOW_224 = new BitSet(new long[]{0x7000000000000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_225 = new BitSet(new long[]{0x0000210000004230L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_226 = new BitSet(new long[]{0x2001000000000002L,0xF00000007FFC0000L});
    public static final BitSet FOLLOW_227 = new BitSet(new long[]{0x0000000000000002L,0x0300000000000000L});
    public static final BitSet FOLLOW_228 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_229 = new BitSet(new long[]{0x0000000020000002L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_230 = new BitSet(new long[]{0x0000004020000002L});

}
