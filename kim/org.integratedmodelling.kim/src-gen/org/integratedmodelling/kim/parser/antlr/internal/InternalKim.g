/*
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.27.0
 */
grammar InternalKim;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.kim.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private KimGrammarAccess grammarAccess;

    public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected KimGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
				}
				lv_observable_0_0=ruleObservableSemantics
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"observable",
						lv_observable_0_0,
						"org.integratedmodelling.kim.Kim.ObservableSemantics");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
					}
					lv_namespace_1_0=ruleNamespace
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"namespace",
							lv_namespace_1_0,
							"org.integratedmodelling.kim.Kim.Namespace");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"org.integratedmodelling.kim.Kim.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
					}
					lv_conceptStatement_0_0=ruleConceptStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"conceptStatement",
							lv_conceptStatement_0_0,
							"org.integratedmodelling.kim.Kim.ConceptStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
					}
					lv_modelStatement_2_0=ruleModelStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"modelStatement",
							lv_modelStatement_2_0,
							"org.integratedmodelling.kim.Kim.ModelStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
					}
					lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"upperOntologyStatement",
							lv_upperOntologyStatement_4_0,
							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
					}
					lv_defineStatement_6_0=ruleDefineStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"defineStatement",
							lv_defineStatement_6_0,
							"org.integratedmodelling.kim.Kim.DefineStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
					}
					lv_observeStatement_8_0=ruleObserveStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"observeStatement",
							lv_observeStatement_8_0,
							"org.integratedmodelling.kim.Kim.ObserveStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleModelStatement
entryRuleModelStatement returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getModelStatementRule()); }
	iv_ruleModelStatement=ruleModelStatement
	{ $current=$iv_ruleModelStatement.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ModelStatement
ruleModelStatement returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
					}
					lv_annotations_0_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_0_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
					}
					lv_annotations_1_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_1_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									lv_inactive_3_0='void'
									{
										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getModelStatementRule());
										}
										setWithLastConsumed($current, "inactive", lv_inactive_3_0 != null, "void");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									(
										lv_projectPrivate_4_0='project'
										{
											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getModelStatementRule());
											}
											setWithLastConsumed($current, "projectPrivate", lv_projectPrivate_4_0 != null, "project");
										}
									)
								)?
								(
									(
										lv_private_5_0='private'
										{
											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getModelStatementRule());
											}
											setWithLastConsumed($current, "private", lv_private_5_0 != null, "private");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
				}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
				}
				lv_model_6_0=ruleMODEL_TYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelStatementRule());
					}
					set(
						$current,
						"model",
						lv_model_6_0,
						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
				}
				lv_body_7_0=ruleModelBodyStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleDefineStatement
entryRuleDefineStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineStatementRule()); }
	iv_ruleDefineStatement=ruleDefineStatement
	{ $current=$iv_ruleDefineStatement.current; }
	EOF;

// Rule DefineStatement
ruleDefineStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
					}
					lv_annotations_0_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefineStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_0_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
					}
					lv_annotations_1_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefineStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_1_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_2='define'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
				}
				lv_defineBody_3_0=ruleDefinitionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineStatementRule());
					}
					set(
						$current,
						"defineBody",
						lv_defineBody_3_0,
						"org.integratedmodelling.kim.Kim.DefinitionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefinitionBody
entryRuleDefinitionBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionBodyRule()); }
	iv_ruleDefinitionBody=ruleDefinitionBody
	{ $current=$iv_ruleDefinitionBody.current; }
	EOF;

// Rule DefinitionBody
ruleDefinitionBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_defineClass_0_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_defineClass_0_0, grammarAccess.getDefinitionBodyAccess().getDefineClassLOWERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefinitionBodyRule());
					}
					setWithLastConsumed(
						$current,
						"defineClass",
						lv_defineClass_0_0,
						"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
				}
			)
		)?
		(
			(
				(
					lv_name_1_1=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_name_1_1, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionBodyRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_name_1_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_1_2, grammarAccess.getDefinitionBodyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionBodyRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
				)
			)
		)
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefinitionBodyAccess().getAsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.integratedmodelling.kim.Kim.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModelBodyStatement
entryRuleModelBodyStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelBodyStatementRule()); }
	iv_ruleModelBodyStatement=ruleModelBodyStatement
	{ $current=$iv_ruleModelBodyStatement.current; }
	EOF;

// Rule ModelBodyStatement
ruleModelBodyStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_instantiator_0_0='each'
				{
					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelBodyStatementRule());
					}
					setWithLastConsumed($current, "instantiator", lv_instantiator_0_0 != null, "each");
				}
			)
		)?
		(
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
							}
							lv_urns_1_0=ruleUrn
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								add(
									$current,
									"urns",
									lv_urns_1_0,
									"org.integratedmodelling.kim.Kim.Urn");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_2=','
						{
							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
								}
								lv_urns_3_0=ruleUrn
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
									}
									add(
										$current,
										"urns",
										lv_urns_3_0,
										"org.integratedmodelling.kim.Kim.Urn");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
						}
						lv_number_4_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
							}
							set(
								$current,
								"number",
								lv_number_4_0,
								"org.integratedmodelling.kim.Kim.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
						}
						lv_concept_5_0=ruleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
							}
							set(
								$current,
								"concept",
								lv_concept_5_0,
								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							lv_boolean_6_1='true'
							{
								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getModelBodyStatementRule());
								}
								setWithLastConsumed($current, "boolean", lv_boolean_6_1, null);
							}
							    |
							lv_boolean_6_2='false'
							{
								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getModelBodyStatementRule());
								}
								setWithLastConsumed($current, "boolean", lv_boolean_6_2, null);
							}
						)
					)
				)
			)
			otherlv_7='as'
			{
				newLeafNode(otherlv_7, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
			}
		)?
		(
			(
				(
					lv_name_8_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_8_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelBodyStatementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_8_0,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
						}
						lv_observables_9_0=ruleAnnotatedObservableSemantics
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
							}
							add(
								$current,
								"observables",
								lv_observables_9_0,
								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
							}
							lv_observables_11_0=ruleAnnotatedObservableSemantics
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								add(
									$current,
									"observables",
									lv_observables_11_0,
									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		(
			(
				lv_docstring_12_0=RULE_STRING
				{
					newLeafNode(lv_docstring_12_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelBodyStatementRule());
					}
					setWithLastConsumed(
						$current,
						"docstring",
						lv_docstring_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_13='observing'
			{
				newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
					}
					lv_dependencies_14_0=ruleDependency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
						}
						add(
							$current,
							"dependencies",
							lv_dependencies_14_0,
							"org.integratedmodelling.kim.Kim.Dependency");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
						}
						lv_dependencies_16_0=ruleDependency
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
							}
							add(
								$current,
								"dependencies",
								lv_dependencies_16_0,
								"org.integratedmodelling.kim.Kim.Dependency");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_17='using'
			{
				newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
					}
					lv_contextualizers_18_0=ruleValueExecution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
						}
						add(
							$current,
							"contextualizers",
							lv_contextualizers_18_0,
							"org.integratedmodelling.kim.Kim.ValueExecution");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
						}
						lv_contextualizers_20_0=ruleValueExecution
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
							}
							add(
								$current,
								"contextualizers",
								lv_contextualizers_20_0,
								"org.integratedmodelling.kim.Kim.ValueExecution");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				otherlv_21='classified'
				{
					newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
				}
				    |
				(
					(
						lv_discretization_22_0='discretized'
						{
							newLeafNode(lv_discretization_22_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModelBodyStatementRule());
							}
							setWithLastConsumed($current, "discretization", lv_discretization_22_0 != null, "discretized");
						}
					)
				)
			)
			(
				(
					otherlv_23='into'
					{
						newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
							}
							lv_classification_24_0=ruleClassification
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								set(
									$current,
									"classification",
									lv_classification_24_0,
									"org.integratedmodelling.kim.Kim.Classification");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_25='according'
					{
						newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
					}
					otherlv_26='to'
					{
						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
							}
							lv_classificationProperty_27_0=rulePropertyId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								set(
									$current,
									"classificationProperty",
									lv_classificationProperty_27_0,
									"org.integratedmodelling.kim.Kim.PropertyId");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)?
		(
			(
				otherlv_28='lookup'
				{
					newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0_0());
				}
				(
					otherlv_29='('
					{
						newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_1_0());
							}
							lv_lookupTableArgs_30_0=ruleLookupTableArgument
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								add(
									$current,
									"lookupTableArgs",
									lv_lookupTableArgs_30_0,
									"org.integratedmodelling.kim.Kim.LookupTableArgument");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_31=','
						{
							newLeafNode(otherlv_31, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_0_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_2_1_0());
								}
								lv_lookupTableArgs_32_0=ruleLookupTableArgument
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
									}
									add(
										$current,
										"lookupTableArgs",
										lv_lookupTableArgs_32_0,
										"org.integratedmodelling.kim.Kim.LookupTableArgument");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_33=')'
					{
						newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_0_1_3());
					}
				)?
				otherlv_34='into'
				{
					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_0_2());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_0_3_0_0());
							}
							lv_lookupTable_35_0=ruleTable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								set(
									$current,
									"lookupTable",
									lv_lookupTable_35_0,
									"org.integratedmodelling.kim.Kim.Table");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_lookupTableId_36_0=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_lookupTableId_36_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_0_3_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getModelBodyStatementRule());
								}
								setWithLastConsumed(
									$current,
									"lookupTableId",
									lv_lookupTableId_36_0,
									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
							}
						)
					)
				)
			)
			    |
			(
				(
					(
						lv_twoway_37_0='match'
						{
							newLeafNode(lv_twoway_37_0, grammarAccess.getModelBodyStatementAccess().getTwowayMatchKeyword_7_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModelBodyStatementRule());
							}
							setWithLastConsumed($current, "twoway", lv_twoway_37_0 != null, "match");
						}
					)
				)
				(
					otherlv_38='('
					{
						newLeafNode(otherlv_38, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_1_0());
							}
							lv_lookupTableArgs_39_0=ruleLookupTableArgumentQualified
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								add(
									$current,
									"lookupTableArgs",
									lv_lookupTableArgs_39_0,
									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_40=','
					{
						newLeafNode(otherlv_40, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_1_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_3_0());
							}
							lv_lookupTableArgs_41_0=ruleLookupTableArgumentQualified
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								add(
									$current,
									"lookupTableArgs",
									lv_lookupTableArgs_41_0,
									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_42=')'
					{
						newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_1_4());
					}
				)?
				otherlv_43='to'
				{
					newLeafNode(otherlv_43, grammarAccess.getModelBodyStatementAccess().getToKeyword_7_1_2());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTwoWayTableParserRuleCall_7_1_3_0_0());
							}
							lv_lookupTable_44_0=ruleTwoWayTable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
								}
								set(
									$current,
									"lookupTable",
									lv_lookupTable_44_0,
									"org.integratedmodelling.kim.Kim.TwoWayTable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_lookupTableId_45_0=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_lookupTableId_45_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_1_3_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getModelBodyStatementRule());
								}
								setWithLastConsumed(
									$current,
									"lookupTableId",
									lv_lookupTableId_45_0,
									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
							}
						)
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
				}
				lv_actions_46_0=ruleActionSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
					}
					add(
						$current,
						"actions",
						lv_actions_46_0,
						"org.integratedmodelling.kim.Kim.ActionSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_47='metadata'
			{
				newLeafNode(otherlv_47, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMapParserRuleCall_9_1_0());
					}
					lv_metadata_48_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
						}
						set(
							$current,
							"metadata",
							lv_metadata_48_0,
							"org.integratedmodelling.kim.Kim.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLookupTableArgument
entryRuleLookupTableArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupTableArgumentRule()); }
	iv_ruleLookupTableArgument=ruleLookupTableArgument
	{ $current=$iv_ruleLookupTableArgument.current; }
	EOF;

// Rule LookupTableArgument
ruleLookupTableArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_1, grammarAccess.getLookupTableArgumentAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLookupTableArgumentRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_0_2='?'
					{
						newLeafNode(lv_id_0_2, grammarAccess.getLookupTableArgumentAccess().getIdQuestionMarkKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLookupTableArgumentRule());
						}
						setWithLastConsumed($current, "id", lv_id_0_2, null);
					}
					    |
					lv_id_0_3='*'
					{
						newLeafNode(lv_id_0_3, grammarAccess.getLookupTableArgumentAccess().getIdAsteriskKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLookupTableArgumentRule());
						}
						setWithLastConsumed($current, "id", lv_id_0_3, null);
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLookupTableArgumentAccess().getConceptConceptDeclarationParserRuleCall_1_0());
				}
				lv_concept_1_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLookupTableArgumentRule());
					}
					set(
						$current,
						"concept",
						lv_concept_1_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLookupTableArgumentQualified
entryRuleLookupTableArgumentQualified returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedRule()); }
	iv_ruleLookupTableArgumentQualified=ruleLookupTableArgumentQualified
	{ $current=$iv_ruleLookupTableArgumentQualified.current; }
	EOF;

// Rule LookupTableArgumentQualified
ruleLookupTableArgumentQualified returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						(
							lv_key_0_1='column'
							{
								newLeafNode(lv_key_0_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_0_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
								}
								setWithLastConsumed($current, "key", lv_key_0_1, null);
							}
							    |
							lv_key_0_2='row'
							{
								newLeafNode(lv_key_0_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_0_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
								}
								setWithLastConsumed($current, "key", lv_key_0_2, null);
							}
						)
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_0_0_1());
				}
			)?
			(
				(
					lv_id_2_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_2_0, grammarAccess.getLookupTableArgumentQualifiedAccess().getIdLOWERCASE_IDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_2_0,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
				)
			)
		)
		    |
		(
			(
				(
					(
						(
							lv_key_3_1='column'
							{
								newLeafNode(lv_key_3_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
								}
								setWithLastConsumed($current, "key", lv_key_3_1, null);
							}
							    |
							lv_key_3_2='row'
							{
								newLeafNode(lv_key_3_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_1_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
								}
								setWithLastConsumed($current, "key", lv_key_3_2, null);
							}
						)
					)
				)
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_1_0_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedAccess().getConceptConceptDeclarationParserRuleCall_1_1_0());
					}
					lv_concept_5_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupTableArgumentQualifiedRule());
						}
						set(
							$current,
							"concept",
							lv_concept_5_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleClassification
entryRuleClassification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationRule()); }
	iv_ruleClassification=ruleClassification
	{ $current=$iv_ruleClassification.current; }
	EOF;

// Rule Classification
ruleClassification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
				}
				lv_classifiers_0_0=ruleClassifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassificationRule());
					}
					add(
						$current,
						"classifiers",
						lv_classifiers_0_0,
						"org.integratedmodelling.kim.Kim.Classifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
					}
					lv_classifiers_2_0=ruleClassifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationRule());
						}
						add(
							$current,
							"classifiers",
							lv_classifiers_2_0,
							"org.integratedmodelling.kim.Kim.Classifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	iv_ruleClassifier=ruleClassifier
	{ $current=$iv_ruleClassifier.current; }
	EOF;

// Rule Classifier
ruleClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_otherwise_1_0='otherwise'
					{
						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed($current, "otherwise", lv_otherwise_1_0 != null, "otherwise");
					}
				)
			)
			    |
			(
				(
					otherlv_2='if'
					{
						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
					}
					    |
					(
						(
							lv_negated_3_0='unless'
							{
								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getClassifierRule());
								}
								setWithLastConsumed($current, "negated", lv_negated_3_0 != null, "unless");
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
						}
						lv_classifier_4_0=ruleClassifierRHS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierRule());
							}
							set(
								$current,
								"classifier",
								lv_classifier_4_0,
								"org.integratedmodelling.kim.Kim.ClassifierRHS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleClassifierRHS
entryRuleClassifierRHS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRHSRule()); }
	iv_ruleClassifierRHS=ruleClassifierRHS
	{ $current=$iv_ruleClassifierRHS.current; }
	EOF;

// Rule ClassifierRHS
ruleClassifierRHS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
					}
					lv_int0_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"int0",
							lv_int0_2_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_3_0='inclusive'
						{
							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_3_0, "inclusive");
						}
					)
				)
				    |
				otherlv_4='exclusive'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
				}
			)?
			(
				('to')=>
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
					}
					lv_int1_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"int1",
							lv_int1_6_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_7_0='inclusive'
						{
							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_7_0, "inclusive");
						}
					)
				)
				    |
				otherlv_8='exclusive'
				{
					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
				}
				lv_num_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
					}
					set(
						$current,
						"num",
						lv_num_9_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_10='in'
			{
				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
					}
					lv_set_11_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"set",
							lv_set_11_0,
							"org.integratedmodelling.kim.Kim.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_12_0=RULE_STRING
				{
					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
				}
				lv_concept_13_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
					}
					set(
						$current,
						"concept",
						lv_concept_13_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_14='('
			{
				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
					}
					lv_toResolve_15_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						add(
							$current,
							"toResolve",
							lv_toResolve_15_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_16=','
					{
						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
						}
						lv_toResolve_17_0=ruleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
							}
							add(
								$current,
								"toResolve",
								lv_toResolve_17_0,
								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18=')'
			{
				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
					}
					lv_op_19_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"op",
							lv_op_19_0,
							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
					}
					lv_expression_20_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"expression",
							lv_expression_20_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_nodata_21_0='unknown'
				{
					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_21_0, "unknown");
				}
			)
		)
		    |
		(
			(
				lv_star_22_0='*'
				{
					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed($current, "star", lv_star_22_0 != null, "*");
				}
			)
		)
	)
;

// Entry rule entryRuleClassifierRHSWithIdNoSet
entryRuleClassifierRHSWithIdNoSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetRule()); }
	iv_ruleClassifierRHSWithIdNoSet=ruleClassifierRHSWithIdNoSet
	{ $current=$iv_ruleClassifierRHSWithIdNoSet.current; }
	EOF;

// Rule ClassifierRHSWithIdNoSet
ruleClassifierRHSWithIdNoSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt0NumberParserRuleCall_1_0_0());
					}
					lv_int0_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						set(
							$current,
							"int0",
							lv_int0_2_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_3_0='inclusive'
						{
							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_3_0, "inclusive");
						}
					)
				)
				    |
				otherlv_4='exclusive'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_1_1());
				}
			)?
			(
				('to')=>
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdNoSetAccess().getToKeyword_1_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt1NumberParserRuleCall_1_3_0());
					}
					lv_int1_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						set(
							$current,
							"int1",
							lv_int1_6_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_7_0='inclusive'
						{
							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getRightLimitInclusiveKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_7_0, "inclusive");
						}
					)
				)
				    |
				otherlv_8='exclusive'
				{
					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getNumNumberParserRuleCall_2_0());
				}
				lv_num_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
					}
					set(
						$current,
						"num",
						lv_num_9_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_10_0=RULE_STRING
				{
					newLeafNode(lv_string_10_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStringSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
				}
				lv_concept_11_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
					}
					set(
						$current,
						"concept",
						lv_concept_11_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_id_12_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_12_1, grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdLOWERCASE_IDTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_12_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					{
						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
					}
					lv_id_12_2=rulePropertyId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						set(
							$current,
							"id",
							lv_id_12_2,
							"org.integratedmodelling.kim.Kim.PropertyId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
					}
					lv_op_13_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						set(
							$current,
							"op",
							lv_op_13_0,
							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getExpressionNumberParserRuleCall_6_1_0());
					}
					lv_expression_14_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
						}
						set(
							$current,
							"expression",
							lv_expression_14_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_nodata_15_0='unknown'
				{
					newLeafNode(lv_nodata_15_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getNodataUnknownKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_15_0, "unknown");
				}
			)
		)
		    |
		(
			(
				lv_star_16_0='*'
				{
					newLeafNode(lv_star_16_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStarAsteriskKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
					}
					setWithLastConsumed($current, "star", lv_star_16_0 != null, "*");
				}
			)
		)
	)
;

// Entry rule entryRuleUrn
entryRuleUrn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrnRule()); }
	iv_ruleUrn=ruleUrn
	{ $current=$iv_ruleUrn.current; }
	EOF;

// Rule Urn
ruleUrn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
					}
					lv_name_0_1=rulePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUrnRule());
						}
						set(
							$current,
							"name",
							lv_name_0_1,
							"org.integratedmodelling.kim.Kim.PathName");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0_1());
					}
					lv_name_0_2=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUrnRule());
						}
						set(
							$current,
							"name",
							lv_name_0_2,
							"org.integratedmodelling.kim.Kim.UrnId");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_0_2());
					}
					lv_name_0_3=ruleLocalFilePath
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUrnRule());
						}
						set(
							$current,
							"name",
							lv_name_0_3,
							"org.integratedmodelling.kim.Kim.LocalFilePath");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_strings_1_0=RULE_STRING
				{
					newLeafNode(lv_strings_1_0, grammarAccess.getUrnAccess().getStringsSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUrnRule());
					}
					addWithLastConsumed(
						$current,
						"strings",
						lv_strings_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)+
	)
;

// Entry rule entryRuleLookupTable
entryRuleLookupTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupTableRule()); }
	iv_ruleLookupTable=ruleLookupTable
	{ $current=$iv_ruleLookupTable.current; }
	EOF;

// Rule LookupTable
ruleLookupTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
					$current);
			}
		)
		otherlv_1='{{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0_0());
					}
					lv_table_2_1=ruleTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupTableRule());
						}
						set(
							$current,
							"table",
							lv_table_2_1,
							"org.integratedmodelling.kim.Kim.Table");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTwoWayTableParserRuleCall_2_0_1());
					}
					lv_table_2_2=ruleTwoWayTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupTableRule());
						}
						set(
							$current,
							"table",
							lv_table_2_2,
							"org.integratedmodelling.kim.Kim.TwoWayTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='}}'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
					}
					lv_headers_0_0=ruleHeaderRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						set(
							$current,
							"headers",
							lv_headers_0_0,
							"org.integratedmodelling.kim.Kim.HeaderRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_SEPARATOR_1=RULE_SEPARATOR
			{
				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
				}
				lv_rows_2_0=ruleTableRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"rows",
						lv_rows_2_0,
						"org.integratedmodelling.kim.Kim.TableRow");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
					}
					lv_rows_4_0=ruleTableRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"rows",
							lv_rows_4_0,
							"org.integratedmodelling.kim.Kim.TableRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTwoWayTable
entryRuleTwoWayTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTwoWayTableRule()); }
	iv_ruleTwoWayTable=ruleTwoWayTable
	{ $current=$iv_ruleTwoWayTable.current; }
	EOF;

// Rule TwoWayTable
ruleTwoWayTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTwoWayTableAccess().getColumnClassifiersTwoWayHeaderRowParserRuleCall_0_0());
				}
				lv_columnClassifiers_0_0=ruleTwoWayHeaderRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
					}
					set(
						$current,
						"columnClassifiers",
						lv_columnClassifiers_0_0,
						"org.integratedmodelling.kim.Kim.TwoWayHeaderRow");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SEPARATOR_1=RULE_SEPARATOR
		{
			newLeafNode(this_SEPARATOR_1, grammarAccess.getTwoWayTableAccess().getSEPARATORTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_2_0());
				}
				lv_rows_2_0=ruleTableRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
					}
					add(
						$current,
						"rows",
						lv_rows_2_0,
						"org.integratedmodelling.kim.Kim.TableRow");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTwoWayTableAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_3_1_0());
					}
					lv_rows_4_0=ruleTableRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
						}
						add(
							$current,
							"rows",
							lv_rows_4_0,
							"org.integratedmodelling.kim.Kim.TableRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleHeaderRow
entryRuleHeaderRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRowRule()); }
	iv_ruleHeaderRow=ruleHeaderRow
	{ $current=$iv_ruleHeaderRow.current; }
	EOF;

// Rule HeaderRow
ruleHeaderRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_elements_0_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHeaderRowRule());
						}
						addWithLastConsumed(
							$current,
							"elements",
							lv_elements_0_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_elements_0_2=RULE_STRING
					{
						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHeaderRowRule());
						}
						addWithLastConsumed(
							$current,
							"elements",
							lv_elements_0_2,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					(
						lv_elements_2_1=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHeaderRowRule());
							}
							addWithLastConsumed(
								$current,
								"elements",
								lv_elements_2_1,
								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
						}
						    |
						lv_elements_2_2=RULE_STRING
						{
							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHeaderRowRule());
							}
							addWithLastConsumed(
								$current,
								"elements",
								lv_elements_2_2,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	iv_ruleTableRow=ruleTableRow
	{ $current=$iv_ruleTableRow.current; }
	EOF;

// Rule TableRow
ruleTableRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleTableClassifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.integratedmodelling.kim.Kim.TableClassifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleTableClassifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"org.integratedmodelling.kim.Kim.TableClassifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTwoWayHeaderRow
entryRuleTwoWayHeaderRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTwoWayHeaderRowRule()); }
	iv_ruleTwoWayHeaderRow=ruleTwoWayHeaderRow
	{ $current=$iv_ruleTwoWayHeaderRow.current; }
	EOF;

// Rule TwoWayHeaderRow
ruleTwoWayHeaderRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
			{
				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getTwoWayHeaderRowAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getTableClassifierParserRuleCall_0_1());
			}
			this_TableClassifier_1=ruleTableClassifier
			{
				$current = $this_TableClassifier_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getTwoWayHeaderRowAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
					}
					lv_elements_3_0=ruleTableClassifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTwoWayHeaderRowRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.integratedmodelling.kim.Kim.TableClassifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleTableClassifier
entryRuleTableClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableClassifierRule()); }
	iv_ruleTableClassifier=ruleTableClassifier
	{ $current=$iv_ruleTableClassifier.current; }
	EOF;

// Rule TableClassifier
ruleTableClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTableClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTableClassifierRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
					}
					lv_int0_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"int0",
							lv_int0_2_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_3_0='inclusive'
						{
							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTableClassifierRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_3_0, "inclusive");
						}
					)
				)
				    |
				otherlv_4='exclusive'
				{
					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
				}
			)?
			(
				('to')=>
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
					}
					lv_int1_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"int1",
							lv_int1_6_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_7_0='inclusive'
						{
							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTableClassifierRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_7_0, "inclusive");
						}
					)
				)
				    |
				otherlv_8='exclusive'
				{
					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
				}
				lv_num_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"num",
						lv_num_9_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_3_0());
				}
				lv_quantity_10_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_10_0,
						"org.integratedmodelling.kim.Kim.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_4_0());
				}
				lv_date_11_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"date",
						lv_date_11_0,
						"org.integratedmodelling.kim.Kim.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getTableClassifierAccess().getInKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_5_1_0());
					}
					lv_set_13_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"set",
							lv_set_13_0,
							"org.integratedmodelling.kim.Kim.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_14_0=RULE_STRING
				{
					newLeafNode(lv_string_14_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_14_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_7_0());
				}
				lv_concept_15_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
					}
					set(
						$current,
						"concept",
						lv_concept_15_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_8_0_0());
					}
					lv_op_16_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"op",
							lv_op_16_0,
							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_8_1_0());
					}
					lv_expression_17_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableClassifierRule());
						}
						set(
							$current,
							"expression",
							lv_expression_17_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_expr_18_0=RULE_EXPR
				{
					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"expr",
						lv_expr_18_0,
						"org.integratedmodelling.kim.Kim.EXPR");
				}
			)
		)
		    |
		(
			(
				lv_nodata_19_0='unknown'
				{
					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_19_0, "unknown");
				}
			)
		)
		    |
		(
			(
				lv_star_20_0='*'
				{
					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "star", lv_star_20_0 != null, "*");
				}
			)
		)
		    |
		(
			(
				lv_anything_21_0='#'
				{
					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableClassifierRule());
					}
					setWithLastConsumed($current, "anything", lv_anything_21_0 != null, "#");
				}
			)
		)
	)
;

// Entry rule entryRuleActionSpecification
entryRuleActionSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionSpecificationRule()); }
	iv_ruleActionSpecification=ruleActionSpecification
	{ $current=$iv_ruleActionSpecification.current; }
	EOF;

// Rule ActionSpecification
ruleActionSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_integrated_0_0='aggregated'
					{
						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionSpecificationRule());
						}
						setWithLastConsumed($current, "integrated", lv_integrated_0_0 != null, "aggregated");
					}
				)
			)?
			(
				(
					lv_over_1_0='over'
					{
						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionSpecificationRule());
						}
						setWithLastConsumed($current, "over", lv_over_1_0 != null, "over");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
					}
					lv_domain_2_0=ruleFunctionOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
						}
						add(
							$current,
							"domain",
							lv_domain_2_0,
							"org.integratedmodelling.kim.Kim.FunctionOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
						}
						lv_domain_4_0=ruleFunctionOrID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
							}
							add(
								$current,
								"domain",
								lv_domain_4_0,
								"org.integratedmodelling.kim.Kim.FunctionOrID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
						}
						lv_actions_5_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
							}
							add(
								$current,
								"actions",
								lv_actions_5_0,
								"org.integratedmodelling.kim.Kim.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(',')=>
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
							}
							lv_actions_7_0=ruleAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
								}
								add(
									$current,
									"actions",
									lv_actions_7_0,
									"org.integratedmodelling.kim.Kim.Action");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		    |
		(
			(
				(
					(
						lv_trigger_8_0='on'
						{
							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionSpecificationRule());
							}
							setWithLastConsumed($current, "trigger", lv_trigger_8_0 != null, "on");
						}
					)
				)
				(
					(
						(
							lv_initialization_9_0='definition'
							{
								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActionSpecificationRule());
								}
								setWithLastConsumed($current, "initialization", lv_initialization_9_0 != null, "definition");
							}
						)
					)
					    |
					(
						(
							lv_instantiation_10_0='instantiation'
							{
								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActionSpecificationRule());
								}
								setWithLastConsumed($current, "instantiation", lv_instantiation_10_0 != null, "instantiation");
							}
						)
					)
					    |
					(
						(
							lv_termination_11_0='termination'
							{
								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActionSpecificationRule());
								}
								setWithLastConsumed($current, "termination", lv_termination_11_0 != null, "termination");
							}
						)
					)
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
								}
								lv_event_12_0=ruleConceptDeclaration
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
									}
									set(
										$current,
										"event",
										lv_event_12_0,
										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_13='in'
							{
								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
							}
							(
								(
									(
										lv_anyContextEvent_14_0='context'
										{
											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getActionSpecificationRule());
											}
											setWithLastConsumed($current, "anyContextEvent", lv_anyContextEvent_14_0 != null, "context");
										}
									)
								)
								    |
								(
									(
										lv_relatedEventContext_15_0='related'
										{
											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getActionSpecificationRule());
											}
											setWithLastConsumed($current, "relatedEventContext", lv_relatedEventContext_15_0 != null, "related");
										}
									)
								)
							)
							(
								(
									{
										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
									}
									lv_eventContext_16_0=ruleConceptDeclaration
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
										}
										set(
											$current,
											"eventContext",
											lv_eventContext_16_0,
											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)?
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
						}
						lv_parameters_17_0=ruleList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
							}
							set(
								$current,
								"parameters",
								lv_parameters_17_0,
								"org.integratedmodelling.kim.Kim.List");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
					}
					lv_actions_18_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
						}
						add(
							$current,
							"actions",
							lv_actions_18_0,
							"org.integratedmodelling.kim.Kim.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_19=','
					{
						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
						}
						lv_actions_20_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
							}
							add(
								$current,
								"actions",
								lv_actions_20_0,
								"org.integratedmodelling.kim.Kim.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleFunctionOrID
entryRuleFunctionOrID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionOrIDRule()); }
	iv_ruleFunctionOrID=ruleFunctionOrID
	{ $current=$iv_ruleFunctionOrID.current; }
	EOF;

// Rule FunctionOrID
ruleFunctionOrID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.integratedmodelling.kim.Kim.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_functionId_1_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionOrIDRule());
						}
						setWithLastConsumed(
							$current,
							"functionId",
							lv_functionId_1_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					{
						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
					}
					lv_functionId_1_2=ruleNamespaceId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
						}
						set(
							$current,
							"functionId",
							lv_functionId_1_2,
							"org.integratedmodelling.kim.Kim.NamespaceId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_set_0_0='set'
					{
						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "set", lv_set_0_0 != null, "set");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
					}
					lv_assignments_1_0=ruleValueAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"assignments",
							lv_assignments_1_0,
							"org.integratedmodelling.kim.Kim.ValueAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
						}
						lv_assignments_3_0=ruleValueAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_3_0,
								"org.integratedmodelling.kim.Kim.ValueAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					((
						'if'
						    |
						(
							(
								'unless'
							)
						)
					)
					)=>
					(
						otherlv_4='if'
						{
							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
						}
						    |
						(
							(
								lv_conditionNegative_5_0='unless'
								{
									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActionRule());
									}
									setWithLastConsumed($current, "conditionNegative", lv_conditionNegative_5_0 != null, "unless");
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
						}
						lv_condition_6_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							set(
								$current,
								"condition",
								lv_condition_6_0,
								"org.integratedmodelling.kim.Kim.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_integrate_7_0='integrate'
					{
						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "integrate", lv_integrate_7_0 != null, "integrate");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
					}
					lv_assignments_8_0=ruleValueAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"assignments",
							lv_assignments_8_0,
							"org.integratedmodelling.kim.Kim.ValueAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
						}
						lv_assignments_10_0=ruleValueAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_10_0,
								"org.integratedmodelling.kim.Kim.ValueAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					((
						'if'
						    |
						(
							(
								'unless'
							)
						)
					)
					)=>
					(
						otherlv_11='if'
						{
							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
						}
						    |
						(
							(
								lv_conditionNegative_12_0='unless'
								{
									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActionRule());
									}
									setWithLastConsumed($current, "conditionNegative", lv_conditionNegative_12_0 != null, "unless");
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
						}
						lv_condition_13_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							set(
								$current,
								"condition",
								lv_condition_13_0,
								"org.integratedmodelling.kim.Kim.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					(
						lv_do_14_1='do'
						{
							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed($current, "do", lv_do_14_1 != null, null);
						}
						    |
						lv_do_14_2='then'
						{
							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed($current, "do", lv_do_14_2 != null, null);
						}
						    |
						lv_do_14_3='finally'
						{
							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed($current, "do", lv_do_14_3 != null, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
					}
					lv_executed_15_0=ruleValueExecution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"executed",
							lv_executed_15_0,
							"org.integratedmodelling.kim.Kim.ValueExecution");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
						}
						lv_executed_17_0=ruleValueExecution
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"executed",
								lv_executed_17_0,
								"org.integratedmodelling.kim.Kim.ValueExecution");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					((
						'if'
						    |
						(
							(
								'unless'
							)
						)
					)
					)=>
					(
						otherlv_18='if'
						{
							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
						}
						    |
						(
							(
								lv_conditionNegative_19_0='unless'
								{
									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActionRule());
									}
									setWithLastConsumed($current, "conditionNegative", lv_conditionNegative_19_0 != null, "unless");
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
						}
						lv_condition_20_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							set(
								$current,
								"condition",
								lv_condition_20_0,
								"org.integratedmodelling.kim.Kim.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_move_21_0='move'
					{
						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "move", lv_move_21_0 != null, "move");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
						}
						lv_where_22_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							set(
								$current,
								"where",
								lv_where_22_0,
								"org.integratedmodelling.kim.Kim.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_away_23_0='away'
						{
							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed($current, "away", lv_away_23_0 != null, "away");
						}
					)
				)
			)
			(
				((
					ruleValue
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
					}
					lv_condition_24_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_24_0,
							"org.integratedmodelling.kim.Kim.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleValueAssignment
entryRuleValueAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueAssignmentRule()); }
	iv_ruleValueAssignment=ruleValueAssignment
	{ $current=$iv_ruleValueAssignment.current; }
	EOF;

// Rule ValueAssignment
ruleValueAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_target_0_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueAssignmentRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_0_0,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
				)
			)?
			otherlv_1='to'
			{
				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
				}
				lv_assignedValue_2_0=ruleComputableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
					}
					set(
						$current,
						"assignedValue",
						lv_assignedValue_2_0,
						"org.integratedmodelling.kim.Kim.ComputableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComputableValue
entryRuleComputableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComputableValueRule()); }
	iv_ruleComputableValue=ruleComputableValue
	{ $current=$iv_ruleComputableValue.current; }
	EOF;

// Rule ComputableValue
ruleComputableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteralOrIdOrComma
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputableValueRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputableValueRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.integratedmodelling.kim.Kim.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_expr_2_0=RULE_EXPR
					{
						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComputableValueRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_2_0,
							"org.integratedmodelling.kim.Kim.EXPR");
					}
				)
			)
			(
				otherlv_3='in'
				{
					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
				}
				(
					(
						(
							lv_language_4_1=RULE_LOWERCASE_ID
							{
								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComputableValueRule());
								}
								setWithLastConsumed(
									$current,
									"language",
									lv_language_4_1,
									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
							}
							    |
							lv_language_4_2=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComputableValueRule());
								}
								setWithLastConsumed(
									$current,
									"language",
									lv_language_4_2,
									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
							}
							    |
							lv_language_4_3=RULE_CAMELCASE_ID
							{
								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComputableValueRule());
								}
								setWithLastConsumed(
									$current,
									"language",
									lv_language_4_3,
									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_id_5_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComputableValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_5_2=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComputableValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_2,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_id_5_3=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComputableValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_3,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
				}
				lv_list_6_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputableValueRule());
					}
					set(
						$current,
						"list",
						lv_list_6_0,
						"org.integratedmodelling.kim.Kim.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_null_7_0='unknown'
				{
					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComputableValueRule());
					}
					setWithLastConsumed($current, "null", lv_null_7_0 != null, "unknown");
				}
			)
		)
	)
;

// Entry rule entryRuleValueExecution
entryRuleValueExecution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueExecutionRule()); }
	iv_ruleValueExecution=ruleValueExecution
	{ $current=$iv_ruleValueExecution.current; }
	EOF;

// Rule ValueExecution
ruleValueExecution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
				}
				lv_execValue_0_0=ruleExecutableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueExecutionRule());
					}
					set(
						$current,
						"execValue",
						lv_execValue_0_0,
						"org.integratedmodelling.kim.Kim.ExecutableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='for'
			{
				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
			}
			(
				(
					lv_target_2_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueExecutionRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_2_0,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExecutableValue
entryRuleExecutableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecutableValueRule()); }
	iv_ruleExecutableValue=ruleExecutableValue
	{ $current=$iv_ruleExecutableValue.current; }
	EOF;

// Rule ExecutableValue
ruleExecutableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
					}
					lv_function_0_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExecutableValueRule());
						}
						set(
							$current,
							"function",
							lv_function_0_0,
							"org.integratedmodelling.kim.Kim.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_expr_1_0=RULE_EXPR
						{
							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExecutableValueRule());
							}
							setWithLastConsumed(
								$current,
								"expr",
								lv_expr_1_0,
								"org.integratedmodelling.kim.Kim.EXPR");
						}
					)
				)
				(
					otherlv_2='in'
					{
						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
					}
					(
						(
							(
								lv_language_3_1=RULE_LOWERCASE_ID
								{
									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getExecutableValueRule());
									}
									setWithLastConsumed(
										$current,
										"language",
										lv_language_3_1,
										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
								}
								    |
								lv_language_3_2=RULE_UPPERCASE_ID
								{
									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getExecutableValueRule());
									}
									setWithLastConsumed(
										$current,
										"language",
										lv_language_3_2,
										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
								}
								    |
								lv_language_3_3=RULE_CAMELCASE_ID
								{
									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getExecutableValueRule());
									}
									setWithLastConsumed(
										$current,
										"language",
										lv_language_3_3,
										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
								}
							)
						)
					)
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0_0());
						}
						lv_urn_4_1=ruleUrnId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExecutableValueRule());
							}
							set(
								$current,
								"urn",
								lv_urn_4_1,
								"org.integratedmodelling.kim.Kim.UrnId");
							afterParserOrEnumRuleCall();
						}
						    |
						lv_urn_4_2=RULE_STRING
						{
							newLeafNode(lv_urn_4_2, grammarAccess.getExecutableValueAccess().getUrnSTRINGTerminalRuleCall_0_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExecutableValueRule());
							}
							setWithLastConsumed(
								$current,
								"urn",
								lv_urn_4_2,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
		(
			(
				otherlv_5='if'
				{
					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
				}
				    |
				(
					(
						lv_conditionNegated_6_0='unless'
						{
							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExecutableValueRule());
							}
							setWithLastConsumed($current, "conditionNegated", lv_conditionNegated_6_0 != null, "unless");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
					}
					lv_condition_7_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExecutableValueRule());
						}
						set(
							$current,
							"condition",
							lv_condition_7_0,
							"org.integratedmodelling.kim.Kim.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMODEL_TYPE
entryRuleMODEL_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMODEL_TYPERule()); }
	iv_ruleMODEL_TYPE=ruleMODEL_TYPE
	{ $current=$iv_ruleMODEL_TYPE.current.getText(); }
	EOF;

// Rule MODEL_TYPE
ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='model'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
		}
		    |
		kw='learn'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
		}
		    |
		kw='object'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
		}
		    |
		kw='text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
		}
	)
;

// Entry rule entryRuleVALUE_OPERATOR
entryRuleVALUE_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); }
	iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR
	{ $current=$iv_ruleVALUE_OPERATOR.current.getText(); }
	EOF;

// Rule VALUE_OPERATOR
ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
		}
		    |
		kw='where'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
		}
		    |
		kw='only'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOnlyKeyword_7());
		}
		    |
		kw='without'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_8());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_9());
		}
		    |
		kw='plus'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_10());
		}
		    |
		kw='minus'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_11());
		}
		    |
		kw='times'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_12());
		}
		    |
		kw='over'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_13());
		}
		    |
		kw='by'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_14());
		}
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
	);
}:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule Namespace
ruleNamespace returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
					}
					lv_annotations_0_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamespaceRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_0_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
					}
					lv_annotations_1_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamespaceRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_1_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									(
										lv_projectPrivate_3_0='project'
										{
											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNamespaceRule());
											}
											setWithLastConsumed($current, "projectPrivate", lv_projectPrivate_3_0 != null, "project");
										}
									)
								)?
								(
									(
										lv_private_4_0='private'
										{
											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNamespaceRule());
											}
											setWithLastConsumed($current, "private", lv_private_4_0 != null, "private");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									lv_inactive_5_0='void'
									{
										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getNamespaceRule());
										}
										setWithLastConsumed($current, "inactive", lv_inactive_5_0 != null, "void");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
				}
		)
		(
			otherlv_6='namespace'
			{
				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
			}
			    |
			(
				(
					lv_scenario_7_0='scenario'
					{
						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamespaceRule());
						}
						setWithLastConsumed($current, "scenario", lv_scenario_7_0 != null, "scenario");
					}
				)
			)
			    |
			(
				(
					lv_worldviewBound_8_0='worldview'
					{
						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamespaceRule());
						}
						setWithLastConsumed($current, "worldviewBound", lv_worldviewBound_8_0 != null, "worldview");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
				}
				lv_name_9_0=rulePathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceRule());
					}
					set(
						$current,
						"name",
						lv_name_9_0,
						"org.integratedmodelling.kim.Kim.PathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_docstring_10_0=RULE_STRING
				{
					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNamespaceRule());
					}
					setWithLastConsumed(
						$current,
						"docstring",
						lv_docstring_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
					}
								({true}?=>(otherlv_12='using'
								{
									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
								}
								otherlv_13='language'
								{
									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
								}
								(
									(
										lv_language_14_0=RULE_UPPERCASE_ID
										{
											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNamespaceRule());
											}
											setWithLastConsumed(
												$current,
												"language",
												lv_language_14_0,
												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
					}
								({true}?=>(otherlv_15='using'
								{
									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
										}
										lv_imported_16_0=ruleImport
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNamespaceRule());
											}
											add(
												$current,
												"imported",
												lv_imported_16_0,
												"org.integratedmodelling.kim.Kim.Import");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										(',')=>
										otherlv_17=','
										{
											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
										}
									)
									(
										(
											{
												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
											}
											lv_imported_18_0=ruleImport
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNamespaceRule());
												}
												add(
													$current,
													"imported",
													lv_imported_18_0,
													"org.integratedmodelling.kim.Kim.Import");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
					}
								({true}?=>(otherlv_19='imports'
								{
									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
										}
										lv_owlImports_20_0=ruleOwlImport
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNamespaceRule());
											}
											add(
												$current,
												"owlImports",
												lv_owlImports_20_0,
												"org.integratedmodelling.kim.Kim.OwlImport");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_21=','
									{
										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
											}
											lv_owlImports_22_0=ruleOwlImport
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNamespaceRule());
												}
												add(
													$current,
													"owlImports",
													lv_owlImports_22_0,
													"org.integratedmodelling.kim.Kim.OwlImport");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
					}
								({true}?=>(otherlv_23='covering'
								{
									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
										}
										lv_coverage_24_0=ruleFunction
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNamespaceRule());
											}
											add(
												$current,
												"coverage",
												lv_coverage_24_0,
												"org.integratedmodelling.kim.Kim.Function");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										(',')=>
										otherlv_25=','
										{
											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
										}
									)
									(
										(
											{
												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
											}
											lv_coverage_26_0=ruleFunction
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNamespaceRule());
												}
												add(
													$current,
													"coverage",
													lv_coverage_26_0,
													"org.integratedmodelling.kim.Kim.Function");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
					}
								({true}?=>(otherlv_27='in'
								{
									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
								}
								otherlv_28='domain'
								{
									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
								}
								(
									(
										(
											lv_rootDomain_29_0='root'
											{
												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getNamespaceRule());
												}
												setWithLastConsumed($current, "rootDomain", lv_rootDomain_29_0 != null, "root");
											}
										)
									)
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
											}
											lv_domainConcept_30_0=ruleConcept
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNamespaceRule());
												}
												set(
													$current,
													"domainConcept",
													lv_domainConcept_30_0,
													"org.integratedmodelling.kim.Kim.Concept");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
					}
								({true}?=>(otherlv_31='disjoint'
								{
									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
								}
								otherlv_32='with'
								{
									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
										}
										lv_disjointNamespaces_33_0=rulePathName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNamespaceRule());
											}
											add(
												$current,
												"disjointNamespaces",
												lv_disjointNamespaces_33_0,
												"org.integratedmodelling.kim.Kim.PathName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_34=','
									{
										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
											}
											lv_disjointNamespaces_35_0=rulePathName
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNamespaceRule());
												}
												add(
													$current,
													"disjointNamespaces",
													lv_disjointNamespaces_35_0,
													"org.integratedmodelling.kim.Kim.PathName");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
					}
								({true}?=>(otherlv_36='version'
								{
									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
										}
										lv_version_37_0=ruleVersionNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNamespaceRule());
											}
											set(
												$current,
												"version",
												lv_version_37_0,
												"org.integratedmodelling.kim.Kim.VersionNumber");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
					}
								({true}?=>((
									{ 
									  getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
									}
									(
										(
								(
									{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)}?=>(
										{
											getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
										}
													({true}?=>(otherlv_39='resolve'
													{
														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
													}
													(
														otherlv_40='from'
														{
															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
														}
														(
															(
																{
																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
																}
																lv_lookupNamespace_41_0=rulePathName
																{
																	if ($current==null) {
																		$current = createModelElementForParent(grammarAccess.getNamespaceRule());
																	}
																	add(
																		$current,
																		"lookupNamespace",
																		lv_lookupNamespace_41_0,
																		"org.integratedmodelling.kim.Kim.PathName");
																	afterParserOrEnumRuleCall();
																}
															)
														)*
													)?
													))
										{ 
											getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
										}
									)
								)|
								(
									{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)}?=>(
										{
											getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
										}
													({true}?=>(otherlv_42='outside'
													{
														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
													}
													(
														(
															{
																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
															}
															lv_blacklistNamespace_43_0=rulePathName
															{
																if ($current==null) {
																	$current = createModelElementForParent(grammarAccess.getNamespaceRule());
																}
																add(
																	$current,
																	"blacklistNamespace",
																	lv_blacklistNamespace_43_0,
																	"org.integratedmodelling.kim.Kim.PathName");
																afterParserOrEnumRuleCall();
															}
														)
													)*
													))
										{ 
											getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
										}
									)
								)|
								(
									{getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)}?=>(
										{
											getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
										}
													({true}?=>(otherlv_44='using'
													{
														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
													}
													(
														(
															{
																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
															}
															lv_weights_45_0=ruleMap
															{
																if ($current==null) {
																	$current = createModelElementForParent(grammarAccess.getNamespaceRule());
																}
																set(
																	$current,
																	"weights",
																	lv_weights_45_0,
																	"org.integratedmodelling.kim.Kim.Map");
																afterParserOrEnumRuleCall();
															}
														)
													)
													))
										{ 
											getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
										}
									)
								)
										)+
										{getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())}?
									)
								)
									{ 
									  getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
									}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
				}
		)
		(
			otherlv_46='parameters'
			{
				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMapParserRuleCall_6_1_0());
					}
					lv_parameters_47_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamespaceRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_47_0,
							"org.integratedmodelling.kim.Kim.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_48='metadata'
			{
				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMapParserRuleCall_7_1_0());
					}
					lv_metadata_49_0=ruleMap
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamespaceRule());
						}
						set(
							$current,
							"metadata",
							lv_metadata_49_0,
							"org.integratedmodelling.kim.Kim.Map");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_50=';'
		{
			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
		}
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleOwlImport
entryRuleOwlImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwlImportRule()); }
	iv_ruleOwlImport=ruleOwlImport
	{ $current=$iv_ruleOwlImport.current; }
	EOF;

// Rule OwlImport
ruleOwlImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_STRING
					{
						newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOwlImportRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_1='as'
				{
					newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_0_1_0());
				}
				(
					(
						lv_prefix_2_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOwlImportRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_2_0,
								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOwlImportAccess().getSinglePathNameParserRuleCall_1_0_0_0());
						}
						lv_single_3_0=rulePathName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOwlImportRule());
							}
							set(
								$current,
								"single",
								lv_single_3_0,
								"org.integratedmodelling.kim.Kim.PathName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getOwlImportAccess().getImportsListParserRuleCall_1_0_1_0());
						}
						lv_imports_4_0=ruleList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOwlImportRule());
							}
							set(
								$current,
								"imports",
								lv_imports_4_0,
								"org.integratedmodelling.kim.Kim.List");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_5='from'
			{
				newLeafNode(otherlv_5, grammarAccess.getOwlImportAccess().getFromKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOwlImportAccess().getUrnUrnIdParserRuleCall_1_2_0());
					}
					lv_urn_6_0=ruleUrnId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOwlImportRule());
						}
						set(
							$current,
							"urn",
							lv_urn_6_0,
							"org.integratedmodelling.kim.Kim.UrnId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
						}
						lv_imports_0_0=ruleList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportRule());
							}
							set(
								$current,
								"imports",
								lv_imports_0_0,
								"org.integratedmodelling.kim.Kim.List");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_star_1_0='*'
						{
							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportRule());
							}
							setWithLastConsumed($current, "star", lv_star_1_0 != null, "*");
						}
					)
				)
			)
			otherlv_2='from'
			{
				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
				}
				lv_name_3_0=rulePathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.integratedmodelling.kim.Kim.PathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUrnId
entryRuleUrnId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUrnIdRule()); }
	iv_ruleUrnId=ruleUrnId
	{ $current=$iv_ruleUrnId.current.getText(); }
	EOF;

// Rule UrnId
ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='urn:klab:'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
		}
		this_PathName_1=rulePathName
		{
			$current.merge(this_PathName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
		}
		this_PathName_3=rulePathName
		{
			$current.merge(this_PathName_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
		}
		this_PathName_5=rulePathName
		{
			$current.merge(this_PathName_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
		}
		(
			{
				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
			}
			this_Path_7=rulePath
			{
				$current.merge(this_Path_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_INT_8=RULE_INT
			{
				$current.merge(this_INT_8);
			}
			{
				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
			}
		)
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
			}
			{
				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
			}
			this_VersionNumber_10=ruleVersionNumber
			{
				$current.merge(this_VersionNumber_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
				}
				this_Path_12=rulePath
				{
					$current.merge(this_Path_12);
				}
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
				}
				this_UrnKvp_13=ruleUrnKvp
				{
					$current.merge(this_UrnKvp_13);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			(
				kw='&'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
					}
					this_Path_15=rulePath
					{
						$current.merge(this_Path_15);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
					}
					this_UrnKvp_16=ruleUrnKvp
					{
						$current.merge(this_UrnKvp_16);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleWellFormedUrnIdWithFragment
entryRuleWellFormedUrnIdWithFragment returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentRule()); }
	iv_ruleWellFormedUrnIdWithFragment=ruleWellFormedUrnIdWithFragment
	{ $current=$iv_ruleWellFormedUrnIdWithFragment.current.getText(); }
	EOF;

// Rule WellFormedUrnIdWithFragment
ruleWellFormedUrnIdWithFragment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_2());
		}
		this_PathName_2=rulePathName
		{
			$current.merge(this_PathName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_4());
		}
		this_PathName_4=rulePathName
		{
			$current.merge(this_PathName_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_5());
		}
		{
			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_6());
		}
		this_PathName_6=rulePathName
		{
			$current.merge(this_PathName_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_7_0());
			}
			{
				newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getVersionNumberParserRuleCall_7_1());
			}
			this_VersionNumber_8=ruleVersionNumber
			{
				$current.merge(this_VersionNumber_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getNumberSignKeyword_8());
		}
		(
			this_LOWERCASE_ID_10=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_10);
			}
			{
				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getLOWERCASE_IDTerminalRuleCall_9_0());
			}
			    |
			this_UPPERCASE_ID_11=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_11);
			}
			{
				newLeafNode(this_UPPERCASE_ID_11, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getUPPERCASE_IDTerminalRuleCall_9_1());
			}
			    |
			this_INT_12=RULE_INT
			{
				$current.merge(this_INT_12);
			}
			{
				newLeafNode(this_INT_12, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getINTTerminalRuleCall_9_2());
			}
			    |
			this_STRING_13=RULE_STRING
			{
				$current.merge(this_STRING_13);
			}
			{
				newLeafNode(this_STRING_13, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getSTRINGTerminalRuleCall_9_3());
			}
		)
	)
;

// Entry rule entryRuleUrnKvp
entryRuleUrnKvp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUrnKvpRule()); }
	iv_ruleUrnKvp=ruleUrnKvp
	{ $current=$iv_ruleUrnKvp.current.getText(); }
	EOF;

// Rule UrnKvp
ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
			}
			this_Path_2=rulePath
			{
				$current.merge(this_Path_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleLocalFilePath
entryRuleLocalFilePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLocalFilePathRule()); }
	iv_ruleLocalFilePath=ruleLocalFilePath
	{ $current=$iv_ruleLocalFilePath.current.getText(); }
	EOF;

// Rule LocalFilePath
ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_CAMELCASE_ID_0=RULE_CAMELCASE_ID
			{
				$current.merge(this_CAMELCASE_ID_0);
			}
			{
				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_LOWERCASE_ID_1=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_1);
			}
			{
				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
			}
			    |
			this_LOWERCASE_DASHID_2=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_2);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
			}
		)
		(
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
			}
			(
				this_CAMELCASE_ID_4=RULE_CAMELCASE_ID
				{
					$current.merge(this_CAMELCASE_ID_4);
				}
				{
					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_LOWERCASE_ID_5=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_5);
				}
				{
					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
				}
				    |
				this_LOWERCASE_DASHID_6=RULE_LOWERCASE_DASHID
				{
					$current.merge(this_LOWERCASE_DASHID_6);
				}
				{
					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
				}
			)
		)*
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
			}
			this_LOWERCASE_ID_8=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_8);
			}
			{
				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
			}
		)?
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
			}
			this_LOWERCASE_ID_10=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_10);
			}
			{
				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
			}
		)?
	)
;

// Entry rule entryRuleObserveStatement
entryRuleObserveStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObserveStatementRule()); }
	iv_ruleObserveStatement=ruleObserveStatement
	{ $current=$iv_ruleObserveStatement.current; }
	EOF;

// Rule ObserveStatement
ruleObserveStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
					}
					lv_annotations_0_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObserveStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_0_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
					}
					lv_annotations_1_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObserveStatementRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_1_0,
							"org.integratedmodelling.kim.Kim.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_2='observe'
		{
			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
				}
				lv_body_3_0=ruleObserveStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObserveStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObserveStatementBody
entryRuleObserveStatementBody returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
	);
}:
	{ newCompositeNode(grammarAccess.getObserveStatementBodyRule()); }
	iv_ruleObserveStatementBody=ruleObserveStatementBody
	{ $current=$iv_ruleObserveStatementBody.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ObserveStatementBody
ruleObserveStatementBody returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
	);
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								(
									(
										{
											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
										}
										lv_urn_1_0=ruleUrn
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
											}
											set(
												$current,
												"urn",
												lv_urn_1_0,
												"org.integratedmodelling.kim.Kim.Urn");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_2='as'
								{
									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
									}
									lv_concept_3_0=ruleNamedObservableSemantics
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
										}
										set(
											$current,
											"concept",
											lv_concept_3_0,
											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								(
									lv_docstring_4_0=RULE_STRING
									{
										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getObserveStatementBodyRule());
										}
										setWithLastConsumed(
											$current,
											"docstring",
											lv_docstring_4_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)?
							(
								otherlv_5='extends'
								{
									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
										}
										lv_parents_6_0=rulePathName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
											}
											add(
												$current,
												"parents",
												lv_parents_6_0,
												"org.integratedmodelling.kim.Kim.PathName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_7=','
									{
										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
											}
											lv_parents_8_0=rulePathName
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
												}
												add(
													$current,
													"parents",
													lv_parents_8_0,
													"org.integratedmodelling.kim.Kim.PathName");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
							)?
							(
								(
									{ 
									  getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
									}
									(
										(
								(
									{getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)}?=>(
										{
											getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
										}
													({true}?=>(otherlv_10='observing'
													{
														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
													}
													(
														(
															{
																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
															}
															lv_states_11_0=ruleObservableSemantics
															{
																if ($current==null) {
																	$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
																}
																add(
																	$current,
																	"states",
																	lv_states_11_0,
																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
																afterParserOrEnumRuleCall();
															}
														)
													)
													(
														otherlv_12=','
														{
															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
														}
														(
															(
																{
																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
																}
																lv_states_13_0=ruleObservableSemantics
																{
																	if ($current==null) {
																		$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
																	}
																	add(
																		$current,
																		"states",
																		lv_states_13_0,
																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
																	afterParserOrEnumRuleCall();
																}
															)
														)
													)*
													))
										{ 
											getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
										}
									)
								)|
								(
									{getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)}?=>(
										{
											getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
										}
													({true}?=>(otherlv_14='children'
													{
														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
													}
													(
														otherlv_15='('
														{
															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
														}
														(
															(
																{
																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
																}
																lv_observations_16_0=ruleObserveStatementBody
																{
																	if ($current==null) {
																		$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
																	}
																	add(
																		$current,
																		"observations",
																		lv_observations_16_0,
																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
																	afterParserOrEnumRuleCall();
																}
															)
														)
														otherlv_17=')'
														{
															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
														}
													)
													(
														otherlv_18=','
														{
															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
														}
														otherlv_19='('
														{
															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
														}
														(
															(
																{
																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
																}
																lv_observations_20_0=ruleObserveStatementBody
																{
																	if ($current==null) {
																		$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
																	}
																	add(
																		$current,
																		"observations",
																		lv_observations_20_0,
																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
																	afterParserOrEnumRuleCall();
																}
															)
														)
														otherlv_21=')'
														{
															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
														}
													)*
													))
										{ 
											getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
										}
									)
								)
										)*
									)
								)
									{ 
									  getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
									}
							)
							(
								(
									{
										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
									}
									lv_actions_22_0=ruleActionSpecification
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
										}
										add(
											$current,
											"actions",
											lv_actions_22_0,
											"org.integratedmodelling.kim.Kim.ActionSpecification");
										afterParserOrEnumRuleCall();
									}
								)
							)*
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_23='using'
							{
								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
									}
									lv_accessor_24_0=ruleFunction
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
										}
										set(
											$current,
											"accessor",
											lv_accessor_24_0,
											"org.integratedmodelling.kim.Kim.Function");
										afterParserOrEnumRuleCall();
									}
								)
							)?
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
				}
							({true}?=>(otherlv_25='metadata'
							{
								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
									}
									lv_metadata_26_0=ruleMap
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
										}
										set(
											$current,
											"metadata",
											lv_metadata_26_0,
											"org.integratedmodelling.kim.Kim.Map");
										afterParserOrEnumRuleCall();
									}
								)
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
			}
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleObservableSemantics
entryRuleObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getObservableSemanticsRule()); }
	iv_ruleObservableSemantics=ruleObservableSemantics
	{ $current=$iv_ruleObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ObservableSemantics
ruleObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
					}
					lv_value_0_0=ruleLiteralValueWithConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
						}
						set(
							$current,
							"value",
							lv_value_0_0,
							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
			}
		)?
		(
			(
				lv_generic_2_0='any'
				{
					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObservableSemanticsRule());
					}
					setWithLastConsumed($current, "generic", lv_generic_2_0 != null, "any");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
				}
				lv_declaration_3_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_5='according'
								{
									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
								}
								otherlv_6='to'
								{
									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
										}
										lv_accordingTo_7_0=rulePropertyId
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"accordingTo",
												lv_accordingTo_7_0,
												"org.integratedmodelling.kim.Kim.PropertyId");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									(
										('in')=>
										otherlv_8='in'
										{
											newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
										}
									)
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
												}
												lv_unit_9_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_9_0,
														"org.integratedmodelling.kim.Kim.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
												}
												lv_currency_10_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_10_0,
														"org.integratedmodelling.kim.Kim.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									(
										('per')=>
										otherlv_11='per'
										{
											newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
										}
									)
									(
										(
											{
												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
											}
											lv_unit_12_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_12_0,
													"org.integratedmodelling.kim.Kim.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									((
										ruleValueOperator
									)
									)=>
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
										}
										lv_valueOperators_13_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_13_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
										}
										lv_valueOperators_14_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_14_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>((
									(
										lv_optional_15_0='optional'
										{
											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getObservableSemanticsRule());
											}
											setWithLastConsumed($current, "optional", lv_optional_15_0 != null, "optional");
										}
									)
								)
								    |
								otherlv_16='required'
								{
									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
										}
										lv_from_17_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_17_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_18='to'
								{
									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
										}
										lv_to_19_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_19_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_20='named'
								{
									newLeafNode(otherlv_20, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_5_0());
								}
								(
									(
										(
											lv_name_21_1=RULE_LOWERCASE_ID
											{
												newLeafNode(lv_name_21_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_21_1,
													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
											}
											    |
											lv_name_21_2=RULE_STRING
											{
												newLeafNode(lv_name_21_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_21_2,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleSimpleObservableSemantics
entryRuleSimpleObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
	);
}:
	{ newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); }
	iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics
	{ $current=$iv_ruleSimpleObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule SimpleObservableSemantics
ruleSimpleObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_generic_0_0='any'
					{
						newLeafNode(lv_generic_0_0, grammarAccess.getSimpleObservableSemanticsAccess().getGenericAnyKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
						}
						setWithLastConsumed($current, "generic", lv_generic_0_0 != null, "any");
					}
				)
			)
			    |
			(
				(
					lv_global_1_0='all'
					{
						newLeafNode(lv_global_1_0, grammarAccess.getSimpleObservableSemanticsAccess().getGlobalAllKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
						}
						setWithLastConsumed($current, "global", lv_global_1_0 != null, "all");
					}
				)
			)
			    |
			(
				(
					lv_exclusive_2_0='only'
					{
						newLeafNode(lv_exclusive_2_0, grammarAccess.getSimpleObservableSemanticsAccess().getExclusiveOnlyKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
						}
						setWithLastConsumed($current, "exclusive", lv_exclusive_2_0 != null, "only");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_1_0());
				}
				lv_declaration_3_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									(
										((
											(
												('in')=>
												'in'
											)
											(
												(
													(
														ruleUnit
													)
												)
												    |
												(
													(
														ruleCurrency
													)
												)
											)
										)
										)=>
										(
											(
												('in')=>
												otherlv_5='in'
												{
													newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_2_0_0_0_0_0());
												}
											)
											(
												(
													(
														{
															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
														}
														lv_unit_6_0=ruleUnit
														{
															if ($current==null) {
																$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
															}
															set(
																$current,
																"unit",
																lv_unit_6_0,
																"org.integratedmodelling.kim.Kim.Unit");
															afterParserOrEnumRuleCall();
														}
													)
												)
												    |
												(
													(
														{
															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
														}
														lv_currency_7_0=ruleCurrency
														{
															if ($current==null) {
																$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
															}
															set(
																$current,
																"currency",
																lv_currency_7_0,
																"org.integratedmodelling.kim.Kim.Currency");
															afterParserOrEnumRuleCall();
														}
													)
												)
											)
										)
									)
									    |
									(
										(
											('per')=>
											otherlv_8='per'
											{
												newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_2_0_0_1_0());
											}
										)
										(
											(
												{
													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
												}
												lv_unit_9_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_9_0,
														"org.integratedmodelling.kim.Kim.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									((
										ruleValueOperator
									)
									)=>
									(
										{
											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
										}
										lv_valueOperators_10_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_10_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
										}
										lv_valueOperators_11_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_11_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
										}
										lv_from_12_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_12_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_13='to'
								{
									newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_2_2_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
										}
										lv_to_14_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_14_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleValueOperator
entryRuleValueOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueOperatorRule()); }
	iv_ruleValueOperator=ruleValueOperator
	{ $current=$iv_ruleValueOperator.current; }
	EOF;

// Rule ValueOperator
ruleValueOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
						}
						lv_modifier_0_0=ruleVALUE_OPERATOR
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"modifier",
								lv_modifier_0_0,
								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							lv_downTo_1_0='down'
							{
								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getValueOperatorRule());
								}
								setWithLastConsumed($current, "downTo", lv_downTo_1_0, "down");
							}
						)
					)
					otherlv_2='to'
					{
						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
						}
						lv_comparisonValue_3_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"comparisonValue",
								lv_comparisonValue_3_0,
								"org.integratedmodelling.kim.Kim.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
						}
						lv_comparisonQuantity_4_0=ruleQuantity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							set(
								$current,
								"comparisonQuantity",
								lv_comparisonQuantity_4_0,
								"org.integratedmodelling.kim.Kim.Quantity");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
						}
						lv_comparisonConcept_5_0=ruleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
							}
							add(
								$current,
								"comparisonConcept",
								lv_comparisonConcept_5_0,
								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_6='('
					{
						newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
							}
							lv_comparisonObservable_7_0=ruleObservableSemantics
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueOperatorRule());
								}
								set(
									$current,
									"comparisonObservable",
									lv_comparisonObservable_7_0,
									"org.integratedmodelling.kim.Kim.ObservableSemantics");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_8=')'
					{
						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
					}
				)
			)
		)
		    |
		(
			(
				lv_total_9_0='total'
				{
					newLeafNode(lv_total_9_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "total", lv_total_9_0, "total");
				}
			)
		)
		    |
		(
			(
				lv_averaged_10_0='averaged'
				{
					newLeafNode(lv_averaged_10_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "averaged", lv_averaged_10_0, "averaged");
				}
			)
		)
		    |
		(
			(
				lv_summed_11_0='summed'
				{
					newLeafNode(lv_summed_11_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueOperatorRule());
					}
					setWithLastConsumed($current, "summed", lv_summed_11_0, "summed");
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotatedObservableSemantics
entryRuleAnnotatedObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
	);
}:
	{ newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); }
	iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics
	{ $current=$iv_ruleAnnotatedObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule AnnotatedObservableSemantics
ruleAnnotatedObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"org.integratedmodelling.kim.Kim.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
					}
					lv_value_1_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
						}
						set(
							$current,
							"value",
							lv_value_1_0,
							"org.integratedmodelling.kim.Kim.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='as'
			{
				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
			}
		)?
		(
			(
				lv_generic_3_0='any'
				{
					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
					}
					setWithLastConsumed($current, "generic", lv_generic_3_0 != null, "any");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
				}
				lv_declaration_4_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_4_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
					}
								({true}?=>(otherlv_6='according'
								{
									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
								}
								otherlv_7='to'
								{
									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
										}
										lv_accordingTo_8_0=rulePropertyId
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											set(
												$current,
												"accordingTo",
												lv_accordingTo_8_0,
												"org.integratedmodelling.kim.Kim.PropertyId");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
					}
								({true}?=>((
									otherlv_9='in'
									{
										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
									}
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
												}
												lv_unit_10_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_10_0,
														"org.integratedmodelling.kim.Kim.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
												}
												lv_currency_11_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_11_0,
														"org.integratedmodelling.kim.Kim.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									otherlv_12='per'
									{
										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
											}
											lv_unit_13_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_13_0,
													"org.integratedmodelling.kim.Kim.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
										}
										lv_valueOperators_14_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_14_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
										}
										lv_valueOperators_15_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_15_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
					}
								({true}?=>((
									(
										lv_optional_16_0='optional'
										{
											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											setWithLastConsumed($current, "optional", lv_optional_16_0 != null, "optional");
										}
									)
								)
								    |
								otherlv_17='required'
								{
									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
										}
										lv_from_18_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_18_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_19='to'
								{
									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
										}
										lv_to_20_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_20_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
					}
								({true}?=>(otherlv_21='named'
								{
									newLeafNode(otherlv_21, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_5_0());
								}
								(
									(
										(
											lv_name_22_1=RULE_LOWERCASE_ID
											{
												newLeafNode(lv_name_22_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_5_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_22_1,
													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
											}
											    |
											lv_name_22_2=RULE_STRING
											{
												newLeafNode(lv_name_22_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_5_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_22_2,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
	);
}:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependencyRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"org.integratedmodelling.kim.Kim.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					(
						(
							lv_modelReference_1_1=RULE_LOWERCASE_ID
							{
								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDependencyRule());
								}
								setWithLastConsumed(
									$current,
									"modelReference",
									lv_modelReference_1_1,
									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
							}
							    |
							{
								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
							}
							lv_modelReference_1_2=rulePathName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDependencyRule());
								}
								set(
									$current,
									"modelReference",
									lv_modelReference_1_2,
									"org.integratedmodelling.kim.Kim.PathName");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
							}
							lv_modelReference_1_3=ruleUrnId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDependencyRule());
								}
								set(
									$current,
									"modelReference",
									lv_modelReference_1_3,
									"org.integratedmodelling.kim.Kim.UrnId");
								afterParserOrEnumRuleCall();
							}
							    |
							lv_modelReference_1_4=RULE_STRING
							{
								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDependencyRule());
								}
								setWithLastConsumed(
									$current,
									"modelReference",
									lv_modelReference_1_4,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0_0());
							}
							lv_observable_2_0=ruleDependencyObservableSemantics
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDependencyRule());
								}
								set(
									$current,
									"observable",
									lv_observable_2_0,
									"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_0_0());
								}
								lv_options_3_0=ruleOption
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDependencyRule());
									}
									add(
										$current,
										"options",
										lv_options_3_0,
										"org.integratedmodelling.kim.Kim.Option");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getDependencyAccess().getOptionsOptionParserRuleCall_1_0_1_1_1_0());
								}
								lv_options_4_0=ruleOption
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDependencyRule());
									}
									add(
										$current,
										"options",
										lv_options_4_0,
										"org.integratedmodelling.kim.Kim.Option");
									afterParserOrEnumRuleCall();
								}
							)
						)*
					)?
				)
			)
			    |
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
						}
									({true}?=>(otherlv_6='('
									{
										newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
											}
											lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getDependencyRule());
												}
												add(
													$current,
													"alternativeObservables",
													lv_alternativeObservables_7_0,
													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										otherlv_8=','
										{
											newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
												}
												lv_alternativeObservables_9_0=ruleAlternativeDependencyObservableSemantics
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getDependencyRule());
													}
													add(
														$current,
														"alternativeObservables",
														lv_alternativeObservables_9_0,
														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)*
									otherlv_10=')'
									{
										newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
									}
									(
										(
											(
												lv_optional_11_0='optional'
												{
													newLeafNode(lv_optional_11_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getDependencyRule());
													}
													setWithLastConsumed($current, "optional", lv_optional_11_0 != null, "optional");
												}
											)
										)
										    |
										otherlv_12='required'
										{
											newLeafNode(otherlv_12, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
										}
									)?
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
						}
									({true}?=>(otherlv_13='named'
									{
										newLeafNode(otherlv_13, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_1_0());
									}
									(
										(
											(
												lv_name_14_1=RULE_LOWERCASE_ID
												{
													newLeafNode(lv_name_14_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_1_1_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getDependencyRule());
													}
													setWithLastConsumed(
														$current,
														"name",
														lv_name_14_1,
														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
												}
												    |
												lv_name_14_2=RULE_STRING
												{
													newLeafNode(lv_name_14_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_1_1_0_1());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getDependencyRule());
													}
													setWithLastConsumed(
														$current,
														"name",
														lv_name_14_2,
														"org.eclipse.xtext.common.Terminals.STRING");
												}
											)
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
						}
					)
				)
						)+
						{getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())}?
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
					}
			)
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleConceptDeclaration
entryRuleConceptDeclaration returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getConceptDeclarationRule()); }
	iv_ruleConceptDeclaration=ruleConceptDeclaration
	{ $current=$iv_ruleConceptDeclaration.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConceptDeclaration
ruleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
				}
				lv_main_0_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_0_0,
						"org.integratedmodelling.kim.Kim.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									otherlv_2='of'
									{
										newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0_0());
									}
									(
										(
											(
												lv_distributedOfInherency_3_0='each'
												{
													newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_0_1_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getConceptDeclarationRule());
													}
													setWithLastConsumed($current, "distributedOfInherency", lv_distributedOfInherency_3_0 != null, "each");
												}
											)
										)?
										(
											(
												{
													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
												}
												lv_inherency_4_0=ruleSimpleConceptDeclaration
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
													}
													set(
														$current,
														"inherency",
														lv_inherency_4_0,
														"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_5='for'
								{
									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
								}
								(
									(
										(
											lv_distributedForInherency_6_0='each'
											{
												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedForInherency", lv_distributedForInherency_6_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
											}
											lv_motivation_7_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"motivation",
													lv_motivation_7_0,
													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_8='with'
								{
									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
										}
										lv_compresent_9_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"compresent",
												lv_compresent_9_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_10='caused'
								{
									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
								}
								otherlv_11='by'
								{
									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
										}
										lv_causant_12_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"causant",
												lv_causant_12_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_13='adjacent'
								{
									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
								}
								otherlv_14='to'
								{
									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
										}
										lv_adjacent_15_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"adjacent",
												lv_adjacent_15_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
					}
								({true}?=>(otherlv_16='contained'
								{
									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
								}
								otherlv_17='in'
								{
									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
										}
										lv_container_18_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"container",
												lv_container_18_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
					}
								({true}?=>(otherlv_19='containing'
								{
									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
										}
										lv_contained_20_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"contained",
												lv_contained_20_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
					}
								({true}?=>(otherlv_21='causing'
								{
									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
										}
										lv_caused_22_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"caused",
												lv_caused_22_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
					}
								({true}?=>(otherlv_23='during'
								{
									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
								}
								(
									(
										(
											lv_distributedTemporalInherency_24_0='each'
											{
												newLeafNode(lv_distributedTemporalInherency_24_0, grammarAccess.getConceptDeclarationAccess().getDistributedTemporalInherencyEachKeyword_1_8_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedTemporalInherency", lv_distributedTemporalInherency_24_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
											}
											lv_during_25_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"during",
													lv_during_25_0,
													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
					}
								({true}?=>(otherlv_26='within'
								{
									newLeafNode(otherlv_26, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
								}
								(
									(
										(
											lv_distributedWithinInherency_27_0='each'
											{
												newLeafNode(lv_distributedWithinInherency_27_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptDeclarationRule());
												}
												setWithLastConsumed($current, "distributedWithinInherency", lv_distributedWithinInherency_27_0 != null, "each");
											}
										)
									)?
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
											}
											lv_context_28_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
												}
												set(
													$current,
													"context",
													lv_context_28_0,
													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
					}
								({true}?=>(otherlv_29='linking'
								{
									newLeafNode(otherlv_29, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
										}
										lv_relationshipSource_30_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"relationshipSource",
												lv_relationshipSource_30_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_31='to'
								{
									newLeafNode(otherlv_31, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
										}
										lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
											}
											set(
												$current,
												"relationshipTarget",
												lv_relationshipTarget_32_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
				}
		)?
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleConceptReference
entryRuleConceptReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptReferenceRule()); }
	iv_ruleConceptReference=ruleConceptReference
	{ $current=$iv_ruleConceptReference.current; }
	EOF;

// Rule ConceptReference
ruleConceptReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameAuthorityIdParserRuleCall_0_0());
				}
				lv_name_0_0=ruleAuthorityId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kim.Kim.AuthorityId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_name_1_0=RULE_CAMELCASE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConceptReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_2_0());
				}
				lv_name_2_0=ruleNamespaceId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.integratedmodelling.kim.Kim.NamespaceId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					(
						lv_templateType_3_1='${'
						{
							newLeafNode(lv_templateType_3_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptReferenceRule());
							}
							setWithLastConsumed($current, "templateType", lv_templateType_3_1, null);
						}
						    |
						lv_templateType_3_2='#{'
						{
							newLeafNode(lv_templateType_3_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_3_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptReferenceRule());
							}
							setWithLastConsumed($current, "templateType", lv_templateType_3_2, null);
						}
					)
				)
			)
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_0_0());
							}
							lv_extends_4_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_4_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=':'
					{
						newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_0_1());
					}
					(
						(
							lv_name_6_0='context'
							{
								newLeafNode(lv_name_6_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_3_1_0_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_6_0, "context");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_0_0());
							}
							lv_extends_7_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_7_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_8=':'
					{
						newLeafNode(otherlv_8, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_1_1());
					}
					(
						(
							lv_name_9_0='inherent'
							{
								newLeafNode(lv_name_9_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_3_1_1_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_9_0, "inherent");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_0_0());
							}
							lv_extends_10_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_10_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_11=':'
					{
						newLeafNode(otherlv_11, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_2_1());
					}
					(
						(
							lv_name_12_0='compresent'
							{
								newLeafNode(lv_name_12_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_3_1_2_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_12_0, "compresent");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_0_0());
							}
							lv_extends_13_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_13_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_14=':'
					{
						newLeafNode(otherlv_14, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_3_1());
					}
					(
						(
							lv_name_15_0='adjacent'
							{
								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_3_1_3_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_15_0, "adjacent");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_0_0());
							}
							lv_extends_16_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_16_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_17=':'
					{
						newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_4_1());
					}
					(
						(
							lv_name_18_0='container'
							{
								newLeafNode(lv_name_18_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_3_1_4_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_18_0, "container");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_0_0());
							}
							lv_extends_19_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_19_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_20=':'
					{
						newLeafNode(otherlv_20, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_5_1());
					}
					(
						(
							lv_name_21_0='contained'
							{
								newLeafNode(lv_name_21_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_3_1_5_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_21_0, "contained");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_0_0());
							}
							lv_extends_22_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_22_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_23=':'
					{
						newLeafNode(otherlv_23, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_6_1());
					}
					(
						(
							lv_name_24_0='purpose'
							{
								newLeafNode(lv_name_24_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_3_1_6_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_24_0, "purpose");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_0_0());
							}
							lv_extends_25_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_25_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_26=':'
					{
						newLeafNode(otherlv_26, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_7_1());
					}
					(
						(
							lv_name_27_0='causant'
							{
								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_3_1_7_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_27_0, "causant");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_0_0());
							}
							lv_extends_28_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_28_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_29=':'
					{
						newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_8_1());
					}
					(
						(
							lv_name_30_0='caused'
							{
								newLeafNode(lv_name_30_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_3_1_8_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_30_0, "caused");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_9_0_0());
							}
							lv_extends_31_0=ruleConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
								}
								set(
									$current,
									"extends",
									lv_extends_31_0,
									"org.integratedmodelling.kim.Kim.Concept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_32=':'
					{
						newLeafNode(otherlv_32, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_9_1());
					}
					(
						(
							lv_name_33_0='cooccurrent'
							{
								newLeafNode(lv_name_33_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_3_1_9_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptReferenceRule());
								}
								setWithLastConsumed($current, "name", lv_name_33_0, "cooccurrent");
							}
						)
					)
				)
			)
			(
				(
					lv_template_34_0='}'
					{
						newLeafNode(lv_template_34_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptReferenceRule());
						}
						setWithLastConsumed($current, "template", lv_template_34_0 != null, "}");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOPERATOR_TARGET
entryRuleOPERATOR_TARGET returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); }
	iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET
	{ $current=$iv_ruleOPERATOR_TARGET.current.getText(); }
	EOF;

// Rule OPERATOR_TARGET
ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='context'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
		}
		    |
		kw='inherent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
		}
		    |
		kw='compresent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
		}
		    |
		kw='adjacent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
		}
		    |
		kw='container'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
		}
		    |
		kw='contained'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
		}
		    |
		kw='purpose'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
		}
		    |
		kw='causant'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
		}
		    |
		kw='caused'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
		}
		    |
		kw='cooccurrent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
		}
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_negated_0_1='not'
						{
							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "negated", lv_negated_0_1 != null, null);
						}
						    |
						lv_negated_0_2='no'
						{
							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "negated", lv_negated_0_2 != null, null);
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleConceptReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.integratedmodelling.kim.Kim.ConceptReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_authConcept_2_0='identified'
						{
							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "authConcept", lv_authConcept_2_0 != null, "identified");
						}
					)
				)
				otherlv_3='as'
				{
					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
				}
				(
					(
						(
							(
								lv_stringIdentifier_4_1=RULE_ID
								{
									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_1,
										"org.eclipse.xtext.common.Terminals.ID");
								}
								    |
								lv_stringIdentifier_4_2=RULE_STRING
								{
									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_2,
										"org.eclipse.xtext.common.Terminals.STRING");
								}
								    |
								lv_stringIdentifier_4_3=RULE_UPPERCASE_ID
								{
									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_3,
										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
								}
								    |
								lv_stringIdentifier_4_4=RULE_CAMELCASE_ID
								{
									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_4,
										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
								}
							)
						)
					)
					    |
					(
						(
							lv_intIdentifier_5_0=RULE_INT
							{
								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"intIdentifier",
									lv_intIdentifier_5_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)
				otherlv_6='by'
				{
					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
				}
				(
					(
						(
							lv_authority_7_1=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_1,
									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
							}
							    |
							lv_authority_7_2=RULE_UPPERCASE_PATH
							{
								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_2,
									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_presence_8_0='presence'
					{
						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "presence", lv_presence_8_0 != null, "presence");
					}
				)
			)
			otherlv_9='of'
			{
				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
					}
					lv_concept_10_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_10_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_count_11_0='count'
					{
						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "count", lv_count_11_0 != null, "count");
					}
				)
			)
			otherlv_12='of'
			{
				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
					}
					lv_concept_13_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_13_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_distance_14_0='distance'
					{
						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "distance", lv_distance_14_0 != null, "distance");
					}
				)
			)
			(
				otherlv_15='to'
				{
					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
				}
				    |
				otherlv_16='from'
				{
					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
					}
					lv_concept_17_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_17_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_probability_18_0='probability'
					{
						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "probability", lv_probability_18_0 != null, "probability");
					}
				)
			)
			otherlv_19='of'
			{
				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
					}
					lv_concept_20_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_20_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_assessment_21_0='assessment'
					{
						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "assessment", lv_assessment_21_0 != null, "assessment");
					}
				)
			)
			otherlv_22='of'
			{
				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
					}
					lv_concept_23_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_23_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_24='change'
			{
				newLeafNode(otherlv_24, grammarAccess.getConceptAccess().getChangeKeyword_6_0());
			}
			(
				(
					(
						lv_change_25_0='in'
						{
							newLeafNode(lv_change_25_0, grammarAccess.getConceptAccess().getChangeInKeyword_6_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptRule());
							}
							setWithLastConsumed($current, "change", lv_change_25_0 != null, "in");
						}
					)
				)
				    |
				(
					(
						(
							lv_rate_26_0='rate'
							{
								newLeafNode(lv_rate_26_0, grammarAccess.getConceptAccess().getRateRateKeyword_6_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed($current, "rate", lv_rate_26_0 != null, "rate");
							}
						)
					)
					otherlv_27='of'
					{
						newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getOfKeyword_6_1_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
					}
					lv_concept_28_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_28_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_changed_29_0='changed'
					{
						newLeafNode(lv_changed_29_0, grammarAccess.getConceptAccess().getChangedChangedKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "changed", lv_changed_29_0 != null, "changed");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_1_0());
					}
					lv_concept_30_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_30_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('from')=>
					otherlv_31='from'
					{
						newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getFromKeyword_7_2_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getChangedFromSimpleConceptDeclarationParserRuleCall_7_2_1_0());
						}
						lv_changedFrom_32_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"changedFrom",
								lv_changedFrom_32_0,
								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_33='to'
				{
					newLeafNode(otherlv_33, grammarAccess.getConceptAccess().getToKeyword_7_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getChangedToSimpleConceptDeclarationParserRuleCall_7_2_3_0());
						}
						lv_changedTo_34_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"changedTo",
								lv_changedTo_34_0,
								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_uncertainty_35_0='uncertainty'
					{
						newLeafNode(lv_uncertainty_35_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "uncertainty", lv_uncertainty_35_0 != null, "uncertainty");
					}
				)
			)
			otherlv_36='of'
			{
				newLeafNode(otherlv_36, grammarAccess.getConceptAccess().getOfKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
					}
					lv_concept_37_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_37_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_magnitude_38_0='magnitude'
					{
						newLeafNode(lv_magnitude_38_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "magnitude", lv_magnitude_38_0 != null, "magnitude");
					}
				)
			)
			otherlv_39='of'
			{
				newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getOfKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
					}
					lv_concept_40_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_40_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_level_41_0='level'
					{
						newLeafNode(lv_level_41_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "level", lv_level_41_0 != null, "level");
					}
				)
			)
			otherlv_42='of'
			{
				newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getOfKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
					}
					lv_concept_43_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_43_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_type_44_0='type'
					{
						newLeafNode(lv_type_44_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "type", lv_type_44_0 != null, "type");
					}
				)
			)
			otherlv_45='of'
			{
				newLeafNode(otherlv_45, grammarAccess.getConceptAccess().getOfKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
					}
					lv_concept_46_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_46_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_observability_47_0='observability'
					{
						newLeafNode(lv_observability_47_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_12_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "observability", lv_observability_47_0 != null, "observability");
					}
				)
			)
			otherlv_48='of'
			{
				newLeafNode(otherlv_48, grammarAccess.getConceptAccess().getOfKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
					}
					lv_concept_49_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_49_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_proportion_50_0='proportion'
					{
						newLeafNode(lv_proportion_50_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_13_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "proportion", lv_proportion_50_0 != null, "proportion");
					}
				)
			)
			otherlv_51='of'
			{
				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getOfKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
					}
					lv_concept_52_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_52_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('in')=>
					otherlv_53='in'
					{
						newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
						}
						lv_other_54_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_54_0,
								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_percentage_55_0='percentage'
					{
						newLeafNode(lv_percentage_55_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_14_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "percentage", lv_percentage_55_0 != null, "percentage");
					}
				)
			)
			otherlv_56='of'
			{
				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
					}
					lv_concept_57_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_57_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('in')=>
					otherlv_58='in'
					{
						newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getInKeyword_14_3_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_3_1_0());
						}
						lv_other_59_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_59_0,
								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_ratio_60_0='ratio'
					{
						newLeafNode(lv_ratio_60_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_15_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "ratio", lv_ratio_60_0 != null, "ratio");
					}
				)
			)
			otherlv_61='of'
			{
				newLeafNode(otherlv_61, grammarAccess.getConceptAccess().getOfKeyword_15_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_2_0());
					}
					lv_concept_62_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_62_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_63='to'
				{
					newLeafNode(otherlv_63, grammarAccess.getConceptAccess().getToKeyword_15_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_0());
					}
					lv_other_64_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"other",
							lv_other_64_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_monetary_65_0='monetary'
					{
						newLeafNode(lv_monetary_65_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_16_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "monetary", lv_monetary_65_0 != null, "monetary");
					}
				)
			)?
			(
				(
					lv_value_66_0='value'
					{
						newLeafNode(lv_value_66_0, grammarAccess.getConceptAccess().getValueValueKeyword_16_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "value", lv_value_66_0 != null, "value");
					}
				)
			)
			otherlv_67='of'
			{
				newLeafNode(otherlv_67, grammarAccess.getConceptAccess().getOfKeyword_16_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_3_0());
					}
					lv_concept_68_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_68_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('over')=>
					otherlv_69='over'
					{
						newLeafNode(otherlv_69, grammarAccess.getConceptAccess().getOverKeyword_16_4_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_16_4_1_0());
						}
						lv_other_70_0=ruleSimpleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConceptRule());
							}
							set(
								$current,
								"other",
								lv_other_70_0,
								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_occurrence_71_0='occurrence'
					{
						newLeafNode(lv_occurrence_71_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_17_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "occurrence", lv_occurrence_71_0 != null, "occurrence");
					}
				)
			)
			otherlv_72='of'
			{
				newLeafNode(otherlv_72, grammarAccess.getConceptAccess().getOfKeyword_17_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_17_2_0());
					}
					lv_concept_73_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_73_0,
							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_74='('
			{
				newLeafNode(otherlv_74, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_18_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_18_1_0());
					}
					lv_declaration_75_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"declaration",
							lv_declaration_75_0,
							"org.integratedmodelling.kim.Kim.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_76=')'
			{
				newLeafNode(otherlv_76, grammarAccess.getConceptAccess().getRightParenthesisKeyword_18_2());
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
	}
	this_Term_0=ruleTerm
	{
		$current = $this_Term_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					lv_operators_1_0='or'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.integratedmodelling.kim.Kim.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
		}
		this_ConceptDeclaration_0=ruleConceptDeclaration
		{
			$current = $this_ConceptDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						lv_operators_1_1='and'
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFactorRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='follows'
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFactorRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.integratedmodelling.kim.Kim.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSimpleConceptDeclaration
entryRuleSimpleConceptDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); }
	iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration
	{ $current=$iv_ruleSimpleConceptDeclaration.current; }
	EOF;

// Rule SimpleConceptDeclaration
ruleSimpleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
				}
				lv_main_1_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_1_0,
						"org.integratedmodelling.kim.Kim.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleUpperOntologyDefinition
entryRuleUpperOntologyDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); }
	iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition
	{ $current=$iv_ruleUpperOntologyDefinition.current; }
	EOF;

// Rule UpperOntologyDefinition
ruleUpperOntologyDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
		}
		(
			(
				(
					(
						(
							(
								(
									lv_agentSpecifier_1_1='deliberative'
									{
										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
										}
										setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_1_1, null);
									}
									    |
									lv_agentSpecifier_1_2='interactive'
									{
										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
										}
										setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_1_2, null);
									}
									    |
									lv_agentSpecifier_1_3='reactive'
									{
										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
										}
										setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_1_3, null);
									}
								)
							)
						)
						(
							(
								lv_concept_2_0='agent'
								{
									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
									}
									setWithLastConsumed($current, "concept", lv_concept_2_0, "agent");
								}
							)
						)
					)
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
								}
								lv_propertySpecifiers_3_0=rulePROPERTY_TYPE
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
									}
									add(
										$current,
										"propertySpecifiers",
										lv_propertySpecifiers_3_0,
										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
								}
								lv_propertySpecifiers_4_0=rulePROPERTY_TYPE
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
									}
									add(
										$current,
										"propertySpecifiers",
										lv_propertySpecifiers_4_0,
										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
									afterParserOrEnumRuleCall();
								}
							)
						)*
						(
							(
								lv_concept_5_0='relationship'
								{
									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
									}
									setWithLastConsumed($current, "concept", lv_concept_5_0, "relationship");
								}
							)
						)
					)?
				)
				otherlv_6='using'
				{
					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
							}
							lv_coreconcept_7_1=ruleNamespaceId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
								}
								set(
									$current,
									"coreconcept",
									lv_coreconcept_7_1,
									"org.integratedmodelling.kim.Kim.NamespaceId");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
							}
							lv_coreconcept_7_2=rulePropertyId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
								}
								set(
									$current,
									"coreconcept",
									lv_coreconcept_7_2,
									"org.integratedmodelling.kim.Kim.PropertyId");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
						}
						lv_operand_8_0=ruleOPERATOR_TARGET
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
							}
							set(
								$current,
								"operand",
								lv_operand_8_0,
								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='using'
				{
					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
							}
							lv_property_10_1=rulePropertyId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
								}
								set(
									$current,
									"property",
									lv_property_10_1,
									"org.integratedmodelling.kim.Kim.PropertyId");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
							}
							lv_property_10_2=ruleNamespaceId
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
								}
								set(
									$current,
									"property",
									lv_property_10_2,
									"org.integratedmodelling.kim.Kim.NamespaceId");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleConceptStatement
entryRuleConceptStatement returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getConceptStatementRule()); }
	iv_ruleConceptStatement=ruleConceptStatement
	{ $current=$iv_ruleConceptStatement.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConceptStatement
ruleConceptStatement returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"org.integratedmodelling.kim.Kim.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									lv_abstract_2_0='abstract'
									{
										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementRule());
										}
										setWithLastConsumed($current, "abstract", lv_abstract_2_0 != null, "abstract");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									lv_deniable_3_0='deniable'
									{
										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementRule());
										}
										setWithLastConsumed($current, "deniable", lv_deniable_3_0 != null, "deniable");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>((
									lv_subjective_4_0='subjective'
									{
										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementRule());
										}
										setWithLastConsumed($current, "subjective", lv_subjective_4_0 != null, "subjective");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>((
									(
										(
											lv_agentSpecifier_5_1='deliberative'
											{
												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementRule());
												}
												setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_5_1, null);
											}
											    |
											lv_agentSpecifier_5_2='interactive'
											{
												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementRule());
												}
												setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_5_2, null);
											}
											    |
											lv_agentSpecifier_5_3='reactive'
											{
												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementRule());
												}
												setWithLastConsumed($current, "agentSpecifier", lv_agentSpecifier_5_3, null);
											}
										)
									)
								)
								    |
								(
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
											}
											lv_propertySpecifiers_6_0=rulePROPERTY_TYPE
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
												}
												add(
													$current,
													"propertySpecifiers",
													lv_propertySpecifiers_6_0,
													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
											}
											lv_propertySpecifiers_7_0=rulePROPERTY_TYPE
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
												}
												add(
													$current,
													"propertySpecifiers",
													lv_propertySpecifiers_7_0,
													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
												afterParserOrEnumRuleCall();
											}
										)
									)*
								)
								    |
								(
									(
										lv_attributeSpecifier_8_0='rescaling'
										{
											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getConceptStatementRule());
											}
											setWithLastConsumed($current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
				}
				lv_concept_9_0=ruleCONCEPT_TYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
					}
					set(
						$current,
						"concept",
						lv_concept_9_0,
						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
				}
				lv_body_10_0=ruleConceptStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_10_0,
						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='named'
			{
				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
					}
					lv_name_12_0=ruleNamespaceId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptStatementRule());
						}
						set(
							$current,
							"name",
							lv_name_12_0,
							"org.integratedmodelling.kim.Kim.NamespaceId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleConceptStatementBody
entryRuleConceptStatementBody returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getConceptStatementBodyRule()); }
	iv_ruleConceptStatementBody=ruleConceptStatementBody
	{ $current=$iv_ruleConceptStatementBody.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConceptStatementBody
ruleConceptStatementBody returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"org.integratedmodelling.kim.Kim.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_abstract_1_0='abstract'
				{
					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
					}
					setWithLastConsumed($current, "abstract", lv_abstract_1_0 != null, "abstract");
				}
			)
		)?
		(
			(
				(
					lv_root_2_0='root'
					{
						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
						}
						setWithLastConsumed($current, "root", lv_root_2_0 != null, "root");
					}
				)
			)
			    |
			(
				(
					(
						lv_name_3_0=RULE_CAMELCASE_ID
						{
							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
						}
					)
				)
				(
					otherlv_4='identified'
					{
						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
					}
					otherlv_5='as'
					{
						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
					}
					(
						(
							(
								(
									lv_stringIdentifier_6_1=RULE_ID
									{
										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
										}
										setWithLastConsumed(
											$current,
											"stringIdentifier",
											lv_stringIdentifier_6_1,
											"org.eclipse.xtext.common.Terminals.ID");
									}
									    |
									lv_stringIdentifier_6_2=RULE_STRING
									{
										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
										}
										setWithLastConsumed(
											$current,
											"stringIdentifier",
											lv_stringIdentifier_6_2,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
						)
						    |
						(
							(
								lv_intIdentifier_7_0=RULE_INT
								{
									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
									}
									setWithLastConsumed(
										$current,
										"intIdentifier",
										lv_intIdentifier_7_0,
										"org.eclipse.xtext.common.Terminals.INT");
								}
							)
						)
					)
					otherlv_8='by'
					{
						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
					}
					(
						(
							(
								lv_authority_9_1=RULE_UPPERCASE_ID
								{
									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
									}
									setWithLastConsumed(
										$current,
										"authority",
										lv_authority_9_1,
										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
								}
								    |
								lv_authority_9_2=RULE_UPPERCASE_PATH
								{
									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
									}
									setWithLastConsumed(
										$current,
										"authority",
										lv_authority_9_2,
										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
								}
							)
						)
					)
				)?
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_docstring_11_0=RULE_STRING
									{
										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
										}
										setWithLastConsumed(
											$current,
											"docstring",
											lv_docstring_11_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									(
										otherlv_12='is'
										{
											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
										}
										    |
										(
											(
												lv_alias_13_0='equals'
												{
													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
													}
													setWithLastConsumed($current, "alias", lv_alias_13_0 != null, "equals");
												}
											)
										)
									)
									(
										(
											lv_coreConcept_14_0='core'
											{
												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
												}
												setWithLastConsumed($current, "coreConcept", lv_coreConcept_14_0 != null, "core");
											}
										)
									)?
								)
								(
									(
										(
											lv_nothing_15_0='nothing'
											{
												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
												}
												setWithLastConsumed($current, "nothing", lv_nothing_15_0 != null, "nothing");
											}
										)
									)
									    |
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
												}
												lv_parents_16_0=ruleConceptDeclaration
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
													}
													add(
														$current,
														"parents",
														lv_parents_16_0,
														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
													afterParserOrEnumRuleCall();
												}
											)
										)
										(
											(
												(
													(
														lv_connectors_17_1=','
														{
															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
														}
														{
															if ($current==null) {
																$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
															}
															addWithLastConsumed($current, "connectors", lv_connectors_17_1, null);
														}
														    |
														lv_connectors_17_2='or'
														{
															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
														}
														{
															if ($current==null) {
																$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
															}
															addWithLastConsumed($current, "connectors", lv_connectors_17_2, null);
														}
														    |
														lv_connectors_17_3='and'
														{
															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
														}
														{
															if ($current==null) {
																$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
															}
															addWithLastConsumed($current, "connectors", lv_connectors_17_3, null);
														}
													)
												)
											)
											(
												(
													{
														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
													}
													lv_parents_18_0=ruleConceptDeclaration
													{
														if ($current==null) {
															$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
														}
														add(
															$current,
															"parents",
															lv_parents_18_0,
															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
														afterParserOrEnumRuleCall();
													}
												)
											)
										)*
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_19='defines'
								{
									newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_2_0());
								}
								(
									(
										otherlv_20='authority'
										{
											newLeafNode(otherlv_20, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_2_1_0_0());
										}
										(
											(
												(
													lv_definedAuthority_21_1=RULE_UPPERCASE_ID
													{
														newLeafNode(lv_definedAuthority_21_1, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_IDTerminalRuleCall_3_2_1_0_1_0_0());
													}
													{
														if ($current==null) {
															$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
														}
														setWithLastConsumed(
															$current,
															"definedAuthority",
															lv_definedAuthority_21_1,
															"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
													}
													    |
													lv_definedAuthority_21_2=RULE_UPPERCASE_PATH
													{
														newLeafNode(lv_definedAuthority_21_2, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_2_1_0_1_0_1());
													}
													{
														if ($current==null) {
															$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
														}
														setWithLastConsumed(
															$current,
															"definedAuthority",
															lv_definedAuthority_21_2,
															"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
													}
												)
											)
										)
									)
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_2_1_1_0());
											}
											lv_upperConcept_22_0=ruleConcept
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												set(
													$current,
													"upperConcept",
													lv_upperConcept_22_0,
													"org.integratedmodelling.kim.Kim.Concept");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_23='requires'
								{
									newLeafNode(otherlv_23, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_1_0());
										}
										lv_requirements_24_0=ruleIdentityRequirement
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"requirements",
												lv_requirements_24_0,
												"org.integratedmodelling.kim.Kim.IdentityRequirement");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_25=','
									{
										newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_3_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_2_1_0());
											}
											lv_requirements_26_0=ruleIdentityRequirement
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"requirements",
													lv_requirements_26_0,
													"org.integratedmodelling.kim.Kim.IdentityRequirement");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_27='describes'
								{
									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_4_1_0());
										}
										lv_describedQuality_28_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"describedQuality",
												lv_describedQuality_28_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_29='as'
									{
										newLeafNode(otherlv_29, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_3_4_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescriptionConstraintsDescriptionConstraintsParserRuleCall_3_4_2_1_0());
											}
											lv_descriptionConstraints_30_0=ruleDescriptionConstraints
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												set(
													$current,
													"descriptionConstraints",
													lv_descriptionConstraints_30_0,
													"org.integratedmodelling.kim.Kim.DescriptionConstraints");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_31='increases'
								{
									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_5_0());
								}
								otherlv_32='with'
								{
									newLeafNode(otherlv_32, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_5_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_5_2_0());
										}
										lv_describedProportionality_33_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"describedProportionality",
												lv_describedProportionality_33_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
					}
								({true}?=>(otherlv_34='decreases'
								{
									newLeafNode(otherlv_34, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_6_0());
								}
								otherlv_35='with'
								{
									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_6_2_0());
										}
										lv_describedInverseProportionalityQuality_36_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"describedInverseProportionalityQuality",
												lv_describedInverseProportionalityQuality_36_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
					}
								({true}?=>(otherlv_37='marks'
								{
									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_7_1_0());
										}
										lv_describedNonzeroQuality_38_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"describedNonzeroQuality",
												lv_describedNonzeroQuality_38_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
					}
								({true}?=>(otherlv_39='classifies'
								{
									newLeafNode(otherlv_39, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_8_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_8_1_0());
										}
										lv_classifiesQuality_40_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"classifiesQuality",
												lv_classifiesQuality_40_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
					}
								({true}?=>(otherlv_41='discretizes'
								{
									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_9_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_9_1_0());
										}
										lv_discretizesQuality_42_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"discretizesQuality",
												lv_discretizesQuality_42_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
					}
								({true}?=>(otherlv_43='inherits'
								{
									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_1_0());
										}
										lv_actuallyInheritedTraits_44_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"actuallyInheritedTraits",
												lv_actuallyInheritedTraits_44_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_45=','
									{
										newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_10_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_2_1_0());
											}
											lv_actuallyInheritedTraits_46_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"actuallyInheritedTraits",
													lv_actuallyInheritedTraits_46_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
					}
								({true}?=>(otherlv_47='has'
								{
									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_11_0());
								}
								otherlv_48='role'
								{
									newLeafNode(otherlv_48, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_11_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_2_0());
										}
										lv_roles_49_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"roles",
												lv_roles_49_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_50=','
									{
										newLeafNode(otherlv_50, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_3_1_0());
											}
											lv_roles_51_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"roles",
													lv_roles_51_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								(
									otherlv_52='targeting'
									{
										newLeafNode(otherlv_52, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_11_4_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_1_0());
											}
											lv_targetObservables_53_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"targetObservables",
													lv_targetObservables_53_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										otherlv_54=','
										{
											newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_4_2_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_2_1_0());
												}
												lv_targetObservables_55_0=ruleConceptDeclaration
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
													}
													add(
														$current,
														"targetObservables",
														lv_targetObservables_55_0,
														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)*
								)?
								(
									otherlv_56='in'
									{
										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_11_5_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_1_0());
											}
											lv_restrictedObservables_57_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"restrictedObservables",
													lv_restrictedObservables_57_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										otherlv_58=','
										{
											newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_5_2_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_2_1_0());
												}
												lv_restrictedObservables_59_0=ruleConceptDeclaration
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
													}
													add(
														$current,
														"restrictedObservables",
														lv_restrictedObservables_59_0,
														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)*
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
					}
								({true}?=>(otherlv_60='confers'
								{
									newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_12_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_1_0());
										}
										lv_conferredTraits_61_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"conferredTraits",
												lv_conferredTraits_61_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_62=','
									{
										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_2_1_0());
											}
											lv_conferredTraits_63_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"conferredTraits",
													lv_conferredTraits_63_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								(
									otherlv_64='to'
									{
										newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_12_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_1_0());
											}
											lv_conferredTargets_65_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"conferredTargets",
													lv_conferredTargets_65_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										otherlv_66=','
										{
											newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_2_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_2_1_0());
												}
												lv_conferredTargets_67_0=ruleConceptDeclaration
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
													}
													add(
														$current,
														"conferredTargets",
														lv_conferredTargets_67_0,
														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)*
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
					}
								({true}?=>(otherlv_68='emerges'
								{
									newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getEmergesKeyword_3_13_0());
								}
								otherlv_69='from'
								{
									newLeafNode(otherlv_69, grammarAccess.getConceptStatementBodyAccess().getFromKeyword_3_13_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_2_0());
										}
										lv_emergenceTriggers_70_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"emergenceTriggers",
												lv_emergenceTriggers_70_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_71=','
									{
										newLeafNode(otherlv_71, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_3_1_0());
											}
											lv_emergenceTriggers_72_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"emergenceTriggers",
													lv_emergenceTriggers_72_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
					}
								({true}?=>(otherlv_73='creates'
								{
									newLeafNode(otherlv_73, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_14_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_1_0());
										}
										lv_creates_74_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"creates",
												lv_creates_74_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_75=','
									{
										newLeafNode(otherlv_75, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_14_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_2_1_0());
											}
											lv_creates_76_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"creates",
													lv_creates_76_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
					}
								({true}?=>(otherlv_77='applies'
								{
									newLeafNode(otherlv_77, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_15_0());
								}
								otherlv_78='to'
								{
									newLeafNode(otherlv_78, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_15_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_2_0());
										}
										lv_traitTargets_79_0=ruleApplicableTarget
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"traitTargets",
												lv_traitTargets_79_0,
												"org.integratedmodelling.kim.Kim.ApplicableTarget");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_80=','
									{
										newLeafNode(otherlv_80, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_3_1_0());
											}
											lv_traitTargets_81_0=ruleApplicableTarget
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"traitTargets",
													lv_traitTargets_81_0,
													"org.integratedmodelling.kim.Kim.ApplicableTarget");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
					}
								({true}?=>(otherlv_82='links'
								{
									newLeafNode(otherlv_82, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_16_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_1_0());
										}
										lv_domains_83_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"domains",
												lv_domains_83_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									('to')=>
									otherlv_84='to'
									{
										newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_2());
									}
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_3_0());
										}
										lv_ranges_85_0=ruleSimpleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"ranges",
												lv_ranges_85_0,
												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_86=','
									{
										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_4_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_4_1_0());
											}
											lv_domains_87_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"domains",
													lv_domains_87_0,
													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
									(
										('to')=>
										otherlv_88='to'
										{
											newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_4_2());
										}
									)
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_4_3_0());
											}
											lv_ranges_89_0=ruleSimpleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"ranges",
													lv_ranges_89_0,
													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
					}
								({true}?=>(otherlv_90='affects'
								{
									newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_17_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_1_0());
										}
										lv_qualitiesAffected_91_0=ruleConceptDeclaration
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"qualitiesAffected",
												lv_qualitiesAffected_91_0,
												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_92=','
									{
										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_2_1_0());
											}
											lv_qualitiesAffected_93_0=ruleConceptDeclaration
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"qualitiesAffected",
													lv_qualitiesAffected_93_0,
													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
					}
								({true}?=>(otherlv_94='has'
								{
									newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_18_0());
								}
								(
									(
										lv_disjoint_95_0='disjoint'
										{
											newLeafNode(lv_disjoint_95_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_18_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
											}
											setWithLastConsumed($current, "disjoint", lv_disjoint_95_0 != null, "disjoint");
										}
									)
								)?
								otherlv_96='children'
								{
									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_18_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_3_0());
										}
										lv_children_97_0=ruleChildConcept
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"children",
												lv_children_97_0,
												"org.integratedmodelling.kim.Kim.ChildConcept");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_98=','
									{
										newLeafNode(otherlv_98, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_18_4_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_4_1_0());
											}
											lv_children_99_0=ruleChildConcept
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"children",
													lv_children_99_0,
													"org.integratedmodelling.kim.Kim.ChildConcept");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
					}
								({true}?=>(otherlv_100='implies'
								{
									newLeafNode(otherlv_100, grammarAccess.getConceptStatementBodyAccess().getImpliesKeyword_3_19_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_1_0());
										}
										lv_implications_101_0=ruleImplication
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											add(
												$current,
												"implications",
												lv_implications_101_0,
												"org.integratedmodelling.kim.Kim.Implication");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_102=','
									{
										newLeafNode(otherlv_102, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_2_1_0());
											}
											lv_implications_103_0=ruleImplication
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
												}
												add(
													$current,
													"implications",
													lv_implications_103_0,
													"org.integratedmodelling.kim.Kim.Implication");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
					}
								({true}?=>(otherlv_104='uses'
								{
									newLeafNode(otherlv_104, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_20_0());
								}
								otherlv_105='authority'
								{
									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_20_1());
								}
								(
									(
										(
											lv_authorities_106_1=RULE_UPPERCASE_ID
											{
												newLeafNode(lv_authorities_106_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_20_2_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
												}
												addWithLastConsumed(
													$current,
													"authorities",
													lv_authorities_106_1,
													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
											}
											    |
											lv_authorities_106_2=RULE_UPPERCASE_PATH
											{
												newLeafNode(lv_authorities_106_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_20_2_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getConceptStatementBodyRule());
												}
												addWithLastConsumed(
													$current,
													"authorities",
													lv_authorities_106_2,
													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
					}
								({true}?=>(otherlv_107='metadata'
								{
									newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_21_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_21_1_0());
										}
										lv_metadata_108_0=ruleMap
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
											}
											set(
												$current,
												"metadata",
												lv_metadata_108_0,
												"org.integratedmodelling.kim.Kim.Map");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
									}
									lv_properties_109_0=rulePropertyStatement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
										}
										add(
											$current,
											"properties",
											lv_properties_109_0,
											"org.integratedmodelling.kim.Kim.PropertyStatement");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleDescriptionConstraints
entryRuleDescriptionConstraints returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionConstraintsRule()); }
	iv_ruleDescriptionConstraints=ruleDescriptionConstraints
	{ $current=$iv_ruleDescriptionConstraints.current; }
	EOF;

// Rule DescriptionConstraints
ruleDescriptionConstraints returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getLowerNumberParserRuleCall_0_0_0());
					}
					lv_lower_0_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
						}
						set(
							$current,
							"lower",
							lv_lower_0_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='to'
				{
					newLeafNode(otherlv_1, grammarAccess.getDescriptionConstraintsAccess().getToKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getHigherNumberParserRuleCall_0_1_1_0());
						}
						lv_higher_2_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
							}
							set(
								$current,
								"higher",
								lv_higher_2_0,
								"org.integratedmodelling.kim.Kim.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_3='in'
				{
					newLeafNode(otherlv_3, grammarAccess.getDescriptionConstraintsAccess().getInKeyword_0_2_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getCurrencyCurrencyParserRuleCall_0_2_1_0_0());
							}
							lv_currency_4_0=ruleCurrency
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
								}
								set(
									$current,
									"currency",
									lv_currency_4_0,
									"org.integratedmodelling.kim.Kim.Currency");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getUnitUnitParserRuleCall_0_2_1_1_0());
							}
							lv_unit_5_0=ruleUnit
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
								}
								set(
									$current,
									"unit",
									lv_unit_5_0,
									"org.integratedmodelling.kim.Kim.Unit");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_0());
				}
				lv_concept_6_0=ruleSimpleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
					}
					set(
						$current,
						"concept",
						lv_concept_6_0,
						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImplication
entryRuleImplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicationRule()); }
	iv_ruleImplication=ruleImplication
	{ $current=$iv_ruleImplication.current; }
	EOF;

// Rule Implication
ruleImplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
				}
				lv_quantifier_0_0=ruleQuantification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationRule());
					}
					set(
						$current,
						"quantifier",
						lv_quantifier_0_0,
						"org.integratedmodelling.kim.Kim.Quantification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationAccess().getConceptConceptDeclarationParserRuleCall_1_0());
				}
				lv_concept_1_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationRule());
					}
					set(
						$current,
						"concept",
						lv_concept_1_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='as'
			{
				newLeafNode(otherlv_2, grammarAccess.getImplicationAccess().getAsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImplicationAccess().getTargetConceptDeclarationParserRuleCall_2_1_0());
					}
					lv_target_3_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplicationRule());
						}
						set(
							$current,
							"target",
							lv_target_3_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleQuantification
entryRuleQuantification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantificationRule()); }
	iv_ruleQuantification=ruleQuantification
	{ $current=$iv_ruleQuantification.current; }
	EOF;

// Rule Quantification
ruleQuantification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getQuantificationAccess().getQuantificationAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_only_1_0='only'
					{
						newLeafNode(lv_only_1_0, grammarAccess.getQuantificationAccess().getOnlyOnlyKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuantificationRule());
						}
						setWithLastConsumed($current, "only", lv_only_1_0 != null, "only");
					}
				)
			)
			    |
			(
				(
					(
						(
							lv_exactly_2_0='exactly'
							{
								newLeafNode(lv_exactly_2_0, grammarAccess.getQuantificationAccess().getExactlyExactlyKeyword_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getQuantificationRule());
								}
								setWithLastConsumed($current, "exactly", lv_exactly_2_0 != null, "exactly");
							}
						)
					)
					    |
					(
						otherlv_3='at'
						{
							newLeafNode(otherlv_3, grammarAccess.getQuantificationAccess().getAtKeyword_1_1_0_1_0());
						}
						(
							(
								(
									lv_atLeast_4_0='least'
									{
										newLeafNode(lv_atLeast_4_0, grammarAccess.getQuantificationAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getQuantificationRule());
										}
										setWithLastConsumed($current, "atLeast", lv_atLeast_4_0 != null, "least");
									}
								)
							)
							    |
							(
								(
									lv_atMost_5_0='most'
									{
										newLeafNode(lv_atMost_5_0, grammarAccess.getQuantificationAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getQuantificationRule());
										}
										setWithLastConsumed($current, "atMost", lv_atMost_5_0 != null, "most");
									}
								)
							)
						)
					)
				)?
				(
					(
						lv_cardinality_6_0=RULE_INT
						{
							newLeafNode(lv_cardinality_6_0, grammarAccess.getQuantificationAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getQuantificationRule());
							}
							setWithLastConsumed(
								$current,
								"cardinality",
								lv_cardinality_6_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_7='or'
					{
						newLeafNode(otherlv_7, grammarAccess.getQuantificationAccess().getOrKeyword_1_1_2_0());
					}
					(
						(
							lv_orMore_8_0='more'
							{
								newLeafNode(lv_orMore_8_0, grammarAccess.getQuantificationAccess().getOrMoreMoreKeyword_1_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getQuantificationRule());
								}
								setWithLastConsumed($current, "orMore", lv_orMore_8_0 != null, "more");
							}
						)
					)
				)?
			)
		)?
	)
;

// Entry rule entryRulePropertyStatement
entryRulePropertyStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyStatementRule()); }
	iv_rulePropertyStatement=rulePropertyStatement
	{ $current=$iv_rulePropertyStatement.current; }
	EOF;

// Rule PropertyStatement
rulePropertyStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
						}
						lv_property_0_1=rulePropertyId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
							}
							set(
								$current,
								"property",
								lv_property_0_1,
								"org.integratedmodelling.kim.Kim.PropertyId");
							afterParserOrEnumRuleCall();
						}
						    |
						lv_property_0_2=RULE_BACKCASE_ID
						{
							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPropertyStatementRule());
							}
							setWithLastConsumed(
								$current,
								"property",
								lv_property_0_2,
								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
						}
					)
				)
			)
			    |
			(
				(
					lv_has_1_0='has'
					{
						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyStatementRule());
						}
						setWithLastConsumed($current, "has", lv_has_1_0 != null, "has");
					}
				)
			)
			    |
			(
				(
					lv_contains_2_0='contains'
					{
						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyStatementRule());
						}
						setWithLastConsumed($current, "contains", lv_contains_2_0 != null, "contains");
					}
				)
			)
			    |
			(
				(
					lv_uses_3_0='uses'
					{
						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyStatementRule());
						}
						setWithLastConsumed($current, "uses", lv_uses_3_0 != null, "uses");
					}
				)
			)
		)
		(
			(
				(
					lv_only_4_0='only'
					{
						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyStatementRule());
						}
						setWithLastConsumed($current, "only", lv_only_4_0 != null, "only");
					}
				)
			)
			    |
			(
				(
					(
						(
							lv_exactly_5_0='exactly'
							{
								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPropertyStatementRule());
								}
								setWithLastConsumed($current, "exactly", lv_exactly_5_0 != null, "exactly");
							}
						)
					)
					    |
					(
						otherlv_6='at'
						{
							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
						}
						(
							(
								(
									lv_atLeast_7_0='least'
									{
										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPropertyStatementRule());
										}
										setWithLastConsumed($current, "atLeast", lv_atLeast_7_0 != null, "least");
									}
								)
							)
							    |
							(
								(
									lv_atMost_8_0='most'
									{
										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPropertyStatementRule());
										}
										setWithLastConsumed($current, "atMost", lv_atMost_8_0 != null, "most");
									}
								)
							)
						)
					)
				)?
				(
					(
						lv_cardinality_9_0=RULE_INT
						{
							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPropertyStatementRule());
							}
							setWithLastConsumed(
								$current,
								"cardinality",
								lv_cardinality_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_10='or'
					{
						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
					}
					(
						(
							lv_orMore_11_0='more'
							{
								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPropertyStatementRule());
								}
								setWithLastConsumed($current, "orMore", lv_orMore_11_0 != null, "more");
							}
						)
					)
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
				}
				lv_propertyTarget_12_0=ruleSimpleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
					}
					set(
						$current,
						"propertyTarget",
						lv_propertyTarget_12_0,
						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleApplicableTarget
entryRuleApplicableTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicableTargetRule()); }
	iv_ruleApplicableTarget=ruleApplicableTarget
	{ $current=$iv_ruleApplicableTarget.current; }
	EOF;

// Rule ApplicableTarget
ruleApplicableTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
				}
				lv_target_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
					}
					set(
						$current,
						"target",
						lv_target_0_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='between'
			{
				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
					}
					lv_linkFrom_2_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
						}
						set(
							$current,
							"linkFrom",
							lv_linkFrom_2_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
					}
					lv_linkTo_4_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
						}
						set(
							$current,
							"linkTo",
							lv_linkTo_4_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleChildConcept
entryRuleChildConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChildConceptRule()); }
	iv_ruleChildConcept=ruleChildConcept
	{ $current=$iv_ruleChildConcept.current; }
	EOF;

// Rule ChildConcept
ruleChildConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_abstract_0_0='abstract'
					{
						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChildConceptRule());
						}
						setWithLastConsumed($current, "abstract", lv_abstract_0_0 != null, "abstract");
					}
				)
			)?
			(
				(
					lv_name_1_0=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChildConceptRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
			}
			this_ConceptStatementBody_3=ruleConceptStatementBody
			{
				$current = $this_ConceptStatementBody_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleIdentityRequirement
entryRuleIdentityRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentityRequirementRule()); }
	iv_ruleIdentityRequirement=ruleIdentityRequirement
	{ $current=$iv_ruleIdentityRequirement.current; }
	EOF;

// Rule IdentityRequirement
ruleIdentityRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_type_0_1='identity'
						{
							newLeafNode(lv_type_0_1, grammarAccess.getIdentityRequirementAccess().getTypeIdentityKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed($current, "type", lv_type_0_1, null);
						}
						    |
						lv_type_0_2='attribute'
						{
							newLeafNode(lv_type_0_2, grammarAccess.getIdentityRequirementAccess().getTypeAttributeKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed($current, "type", lv_type_0_2, null);
						}
						    |
						lv_type_0_3='realm'
						{
							newLeafNode(lv_type_0_3, grammarAccess.getIdentityRequirementAccess().getTypeRealmKeyword_0_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed($current, "type", lv_type_0_3, null);
						}
						    |
						lv_type_0_4='extent'
						{
							newLeafNode(lv_type_0_4, grammarAccess.getIdentityRequirementAccess().getTypeExtentKeyword_0_0_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed($current, "type", lv_type_0_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
					}
					lv_identities_1_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
						}
						add(
							$current,
							"identities",
							lv_identities_1_0,
							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
						}
						lv_identities_3_0=ruleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
							}
							add(
								$current,
								"identities",
								lv_identities_3_0,
								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			otherlv_4='authority'
			{
				newLeafNode(otherlv_4, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
			}
			(
				(
					(
						lv_authority_5_1=RULE_UPPERCASE_ID
						{
							newLeafNode(lv_authority_5_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed(
								$current,
								"authority",
								lv_authority_5_1,
								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
						}
						    |
						lv_authority_5_2=RULE_UPPERCASE_PATH
						{
							newLeafNode(lv_authority_5_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIdentityRequirementRule());
							}
							setWithLastConsumed(
								$current,
								"authority",
								lv_authority_5_2,
								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ANNOTATION_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
				}
			)
		)
		(
			(
				('(')=>
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotationRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.kim.Kim.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getListAccess().getListAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleValueWithIdAndConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_3_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_3_1_0());
					}
					lv_contents_4_0=ruleValueWithIdAndConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListRule());
						}
						add(
							$current,
							"contents",
							lv_contents_4_0,
							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getListAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
					}
					lv_from_0_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"from",
							lv_from_0_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_1='to'
				{
					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
					}
					lv_to_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"to",
							lv_to_2_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
				}
				lv_number_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"number",
						lv_number_3_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_4_0=RULE_STRING
				{
					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_5_1='true'
					{
						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_1, null);
					}
					    |
					lv_boolean_5_2='false'
					{
						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteralOrIdOrComma
entryRuleLiteralOrIdOrComma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); }
	iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma
	{ $current=$iv_ruleLiteralOrIdOrComma.current; }
	EOF;

// Rule LiteralOrIdOrComma
ruleLiteralOrIdOrComma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
					}
					lv_from_0_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						set(
							$current,
							"from",
							lv_from_0_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_1='to'
				{
					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
					}
					lv_to_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						set(
							$current,
							"to",
							lv_to_2_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
				}
				lv_number_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					set(
						$current,
						"number",
						lv_number_3_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_4_0=RULE_STRING
				{
					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_5_1='true'
					{
						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_1, null);
					}
					    |
					lv_boolean_5_2='false'
					{
						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_2, null);
					}
				)
			)
		)
		    |
		(
			(
				lv_id_6_0=RULE_ID
				{
					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				lv_comma_7_0=','
				{
					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed($current, "comma", lv_comma_7_0 != null, ",");
				}
			)
		)
	)
;

// Entry rule entryRuleMap
entryRuleMap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapRule()); }
	iv_ruleMap=ruleMap
	{ $current=$iv_ruleMap.current; }
	EOF;

// Rule Map
ruleMap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapAccess().getMapAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
					}
					lv_entries_2_0=ruleMapEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						add(
							$current,
							"entries",
							lv_entries_2_0,
							"org.integratedmodelling.kim.Kim.MapEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(','
					)=>
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
						}
						lv_entries_4_0=ruleMapEntry
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapRule());
							}
							add(
								$current,
								"entries",
								lv_entries_4_0,
								"org.integratedmodelling.kim.Kim.MapEntry");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapEntry
entryRuleMapEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryRule()); }
	iv_ruleMapEntry=ruleMapEntry
	{ $current=$iv_ruleMapEntry.current; }
	EOF;

// Rule MapEntry
ruleMapEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdNoSetParserRuleCall_0_0());
				}
				lv_classifier_0_0=ruleClassifierRHSWithIdNoSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryRule());
					}
					set(
						$current,
						"classifier",
						lv_classifier_0_0,
						"org.integratedmodelling.kim.Kim.ClassifierRHSWithIdNoSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValueWithIdAndConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
					}
					lv_name_0_1=rulePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
						}
						set(
							$current,
							"name",
							lv_name_0_1,
							"org.integratedmodelling.kim.Kim.PathName");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_0_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeyValuePairRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_2,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_name_0_3='value'
					{
						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeyValuePairRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_3, null);
					}
				)
			)
		)
		(
			(
				(
					lv_interactive_1_0='?='
					{
						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeyValuePairRule());
						}
						setWithLastConsumed($current, "interactive", lv_interactive_1_0 != null, "?=");
					}
				)
			)
			    |
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
				}
				lv_value_3_0=ruleValueWithIdAndConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
					}
					lv_pairs_0_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"pairs",
							lv_pairs_0_0,
							"org.integratedmodelling.kim.Kim.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_1=','
					{
						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
						}
						lv_pairs_2_0=ruleKeyValuePair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"pairs",
								lv_pairs_2_0,
								"org.integratedmodelling.kim.Kim.KeyValuePair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
					}
					lv_singleValue_3_0=ruleValueWithIdAndConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"singleValue",
							lv_singleValue_3_0,
							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
					}
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0_0());
							}
							lv_singleValue_5_0=ruleValueWithIdAndConcept
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getParameterListRule());
								}
								add(
									$current,
									"singleValue",
									lv_singleValue_5_0,
									"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_1_0());
							}
							lv_pairs_6_0=ruleKeyValuePair
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getParameterListRule());
								}
								add(
									$current,
									"pairs",
									lv_pairs_6_0,
									"org.integratedmodelling.kim.Kim.KeyValuePair");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleValueWithIdAndConcept
entryRuleValueWithIdAndConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); }
	iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept
	{ $current=$iv_ruleValueWithIdAndConcept.current; }
	EOF;

// Rule ValueWithIdAndConcept
ruleValueWithIdAndConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_0_0());
				}
				lv_map_0_0=ruleMap
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"map",
						lv_map_0_0,
						"org.integratedmodelling.kim.Kim.Map");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0());
				}
				lv_concept_1_0=ruleSimpleObservableSemantics
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"concept",
						lv_concept_1_0,
						"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_2_0());
				}
				lv_function_2_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"function",
						lv_function_2_0,
						"org.integratedmodelling.kim.Kim.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_3_0());
				}
				lv_date_3_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"date",
						lv_date_3_0,
						"org.integratedmodelling.kim.Kim.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_4_0());
				}
				lv_literal_4_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"literal",
						lv_literal_4_0,
						"org.integratedmodelling.kim.Kim.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_expr_5_0=RULE_EXPR
				{
					newLeafNode(lv_expr_5_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
					}
					setWithLastConsumed(
						$current,
						"expr",
						lv_expr_5_0,
						"org.integratedmodelling.kim.Kim.EXPR");
				}
			)
		)
		    |
		(
			(
				lv_templatevar_6_0=RULE_TEMPLATE_VAR
				{
					newLeafNode(lv_templatevar_6_0, grammarAccess.getValueWithIdAndConceptAccess().getTemplatevarTEMPLATE_VARTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
					}
					setWithLastConsumed(
						$current,
						"templatevar",
						lv_templatevar_6_0,
						"org.integratedmodelling.kim.Kim.TEMPLATE_VAR");
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
					}
					lv_id_7_1=rulePathName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
						}
						set(
							$current,
							"id",
							lv_id_7_1,
							"org.integratedmodelling.kim.Kim.PathName");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_id_7_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_7_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_7_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_7_2,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_7_3=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_7_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_7_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_7_3,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_id_7_4=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_7_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_7_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_7_4,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_8_0());
				}
				lv_table_8_0=ruleLookupTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"table",
						lv_table_8_0,
						"org.integratedmodelling.kim.Kim.LookupTable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_9_0());
				}
				lv_list_9_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"list",
						lv_list_9_0,
						"org.integratedmodelling.kim.Kim.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_10_0());
				}
				lv_quantity_10_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_10_0,
						"org.integratedmodelling.kim.Kim.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getOpREL_OPERATORParserRuleCall_11_0_0());
					}
					lv_op_11_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
						}
						set(
							$current,
							"op",
							lv_op_11_0,
							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getExpressionNumberParserRuleCall_11_1_0());
					}
					lv_expression_12_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
						}
						set(
							$current,
							"expression",
							lv_expression_12_0,
							"org.integratedmodelling.kim.Kim.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_null_13_0='unknown'
				{
					newLeafNode(lv_null_13_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
					}
					setWithLastConsumed($current, "null", lv_null_13_0 != null, "unknown");
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteralOrIdOrComma
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.integratedmodelling.kim.Kim.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_expr_2_0=RULE_EXPR
					{
						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_2_0,
							"org.integratedmodelling.kim.Kim.EXPR");
					}
				)
			)
			(
				otherlv_3='in'
				{
					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
				}
				(
					(
						lv_language_4_0=RULE_UPPERCASE_ID
						{
							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValueRule());
							}
							setWithLastConsumed(
								$current,
								"language",
								lv_language_4_0,
								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_id_5_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_5_2=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_2,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_id_5_3=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_5_3,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
				}
				lv_list_6_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"list",
						lv_list_6_0,
						"org.integratedmodelling.kim.Kim.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
				}
				lv_table_7_0=ruleLookupTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"table",
						lv_table_7_0,
						"org.integratedmodelling.kim.Kim.LookupTable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
				}
				lv_quantity_8_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_8_0,
						"org.integratedmodelling.kim.Kim.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
				}
				lv_date_9_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"date",
						lv_date_9_0,
						"org.integratedmodelling.kim.Kim.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
				}
				lv_map_10_0=ruleMap
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"map",
						lv_map_10_0,
						"org.integratedmodelling.kim.Kim.Map");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_null_11_0='unknown'
				{
					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed($current, "null", lv_null_11_0 != null, "unknown");
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralValueWithConcept
entryRuleLiteralValueWithConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); }
	iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept
	{ $current=$iv_ruleLiteralValueWithConcept.current; }
	EOF;

// Rule LiteralValueWithConcept
ruleLiteralValueWithConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"org.integratedmodelling.kim.Kim.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
				}
				lv_concept_1_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
					}
					set(
						$current,
						"concept",
						lv_concept_1_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
				}
				lv_function_2_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
					}
					set(
						$current,
						"function",
						lv_function_2_0,
						"org.integratedmodelling.kim.Kim.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_expr_3_0=RULE_EXPR
				{
					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
					}
					setWithLastConsumed(
						$current,
						"expr",
						lv_expr_3_0,
						"org.integratedmodelling.kim.Kim.EXPR");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
				}
				lv_quantity_4_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_4_0,
						"org.integratedmodelling.kim.Kim.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
				}
				lv_date_5_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
					}
					set(
						$current,
						"date",
						lv_date_5_0,
						"org.integratedmodelling.kim.Kim.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_id_6_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_6_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_6_2=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_6_2,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_id_6_3=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_6_3,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
				}
				lv_name_0_0=rulePathName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kim.Kim.PathName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.integratedmodelling.kim.Kim.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_OPTION_KEY
				{
					newLeafNode(lv_key_0_0, grammarAccess.getOptionAccess().getKeyOPTION_KEYTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptionRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.integratedmodelling.kim.Kim.OPTION_KEY");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionAccess().getValueValueWithIdAndConceptParserRuleCall_1_0());
				}
				lv_value_1_0=ruleValueWithIdAndConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCONCEPT_TYPE
entryRuleCONCEPT_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); }
	iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE
	{ $current=$iv_ruleCONCEPT_TYPE.current.getText(); }
	EOF;

// Rule CONCEPT_TYPE
ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='quality'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
		}
		this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE
		{
			$current.merge(this_DECLARABLE_TYPE_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDECLARABLE_TYPE
entryRuleDECLARABLE_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); }
	iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE
	{ $current=$iv_ruleDECLARABLE_TYPE.current.getText(); }
	EOF;

// Rule DECLARABLE_TYPE
ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='class'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
		}
		    |
		kw='quantity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
		}
		    |
		kw='configuration'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
		}
		    |
		kw='relationship'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
		}
		    |
		kw='bond'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
		}
		    |
		kw='extent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
		}
		    |
		{
			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
		}
		this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY
		{
			$current.merge(this_EXTENSIVE_PROPERTY_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
		}
		this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY
		{
			$current.merge(this_INTENSIVE_PROPERTY_7);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
		}
		this_AGENT_TYPE_8=ruleAGENT_TYPE
		{
			$current.merge(this_AGENT_TYPE_8);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
		}
		this_TRAIT_9=ruleTRAIT
		{
			$current.merge(this_TRAIT_9);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTRAIT
entryRuleTRAIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTRAITRule()); }
	iv_ruleTRAIT=ruleTRAIT
	{ $current=$iv_ruleTRAIT.current.getText(); }
	EOF;

// Rule TRAIT
ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ordering'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
		}
		    |
		kw='attribute'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
		}
		    |
		kw='identity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
		}
		    |
		kw='role'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
		}
		    |
		kw='realm'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
		}
		    |
		kw='domain'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
		}
	)
;

// Entry rule entryRuleEXTENSIVE_PROPERTY
entryRuleEXTENSIVE_PROPERTY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); }
	iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY
	{ $current=$iv_ruleEXTENSIVE_PROPERTY.current.getText(); }
	EOF;

// Rule EXTENSIVE_PROPERTY
ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='amount'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
		}
		    |
		kw='length'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
		}
		    |
		kw='mass'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
		}
		    |
		kw='volume'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
		}
		    |
		kw='weight'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
		}
		    |
		kw='money'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
		}
		    |
		kw='duration'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
		}
		    |
		kw='area'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
		}
	)
;

// Entry rule entryRuleINTENSIVE_PROPERTY
entryRuleINTENSIVE_PROPERTY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); }
	iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY
	{ $current=$iv_ruleINTENSIVE_PROPERTY.current.getText(); }
	EOF;

// Rule INTENSIVE_PROPERTY
ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='acceleration'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
		}
		    |
		kw='energy'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
		}
		    |
		kw='entropy'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
		}
		    |
		kw='priority'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
		}
		    |
		kw='electric-potential'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
		}
		    |
		kw='charge'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
		}
		    |
		kw='resistance'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
		}
		    |
		kw='resistivity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
		}
		    |
		kw='pressure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
		}
		    |
		kw='angle'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
		}
		    |
		kw='velocity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
		}
		    |
		kw='temperature'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
		}
		    |
		kw='viscosity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
		}
	)
;

// Entry rule entryRuleAGENT_TYPE
entryRuleAGENT_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAGENT_TYPERule()); }
	iv_ruleAGENT_TYPE=ruleAGENT_TYPE
	{ $current=$iv_ruleAGENT_TYPE.current.getText(); }
	EOF;

// Rule AGENT_TYPE
ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='thing'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
		}
		    |
		kw='process'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
		}
		    |
		kw='agent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
		}
		    |
		kw='event'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
		}
	)
;

// Entry rule entryRulePROPERTY_TYPE
entryRulePROPERTY_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); }
	iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE
	{ $current=$iv_rulePROPERTY_TYPE.current.getText(); }
	EOF;

// Rule PROPERTY_TYPE
rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='functional'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
		}
		    |
		kw='structural'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
		}
	)
;

// Entry rule entryRuleDependencyObservableSemantics
entryRuleDependencyObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); }
	iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics
	{ $current=$iv_ruleDependencyObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule DependencyObservableSemantics
ruleDependencyObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
					}
					lv_value_0_0=ruleLiteralValueWithConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
						}
						set(
							$current,
							"value",
							lv_value_0_0,
							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
			}
		)?
		(
			(
				lv_generic_2_0='any'
				{
					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
					}
					setWithLastConsumed($current, "generic", lv_generic_2_0 != null, "any");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
				}
				lv_declaration_3_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_5='according'
								{
									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
								}
								otherlv_6='to'
								{
									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
										}
										lv_accordingTo_7_0=rulePropertyId
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"accordingTo",
												lv_accordingTo_7_0,
												"org.integratedmodelling.kim.Kim.PropertyId");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									otherlv_8='in'
									{
										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
									}
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
												}
												lv_unit_9_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_9_0,
														"org.integratedmodelling.kim.Kim.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
												}
												lv_currency_10_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_10_0,
														"org.integratedmodelling.kim.Kim.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									otherlv_11='per'
									{
										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
											}
											lv_unit_12_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_12_0,
													"org.integratedmodelling.kim.Kim.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
										}
										lv_from_13_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_13_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_14='to'
								{
									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
										}
										lv_to_15_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_15_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
										}
										lv_valueOperators_16_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_16_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
										}
										lv_valueOperators_17_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_17_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>((
									(
										lv_optional_18_0='optional'
										{
											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
											}
											setWithLastConsumed($current, "optional", lv_optional_18_0 != null, "optional");
										}
									)
								)
								    |
								otherlv_19='required'
								{
									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_20='named'
								{
									newLeafNode(otherlv_20, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_5_0());
								}
								(
									(
										(
											lv_name_21_1=RULE_LOWERCASE_ID
											{
												newLeafNode(lv_name_21_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_21_1,
													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
											}
											    |
											lv_name_21_2=RULE_STRING
											{
												newLeafNode(lv_name_21_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"name",
													lv_name_21_2,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleAlternativeDependencyObservableSemantics
entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); }
	iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics
	{ $current=$iv_ruleAlternativeDependencyObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule AlternativeDependencyObservableSemantics
ruleAlternativeDependencyObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
					}
					lv_value_0_0=ruleLiteralValueWithConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
						}
						set(
							$current,
							"value",
							lv_value_0_0,
							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
			}
		)?
		(
			(
				lv_generic_2_0='any'
				{
					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
					}
					setWithLastConsumed($current, "generic", lv_generic_2_0 != null, "any");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
				}
				lv_declaration_3_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_5='according'
								{
									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
								}
								otherlv_6='to'
								{
									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
										}
										lv_accordingTo_7_0=rulePropertyId
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"accordingTo",
												lv_accordingTo_7_0,
												"org.integratedmodelling.kim.Kim.PropertyId");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									otherlv_8='in'
									{
										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
									}
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
												}
												lv_unit_9_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_9_0,
														"org.integratedmodelling.kim.Kim.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
												}
												lv_currency_10_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_10_0,
														"org.integratedmodelling.kim.Kim.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									otherlv_11='per'
									{
										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
											}
											lv_unit_12_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_12_0,
													"org.integratedmodelling.kim.Kim.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
										}
										lv_from_13_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_13_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_14='to'
								{
									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
										}
										lv_to_15_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_15_0,
												"org.integratedmodelling.kim.Kim.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
										}
										lv_valueOperators_16_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_16_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
										}
										lv_valueOperators_17_0=ruleValueOperator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
											}
											add(
												$current,
												"valueOperators",
												lv_valueOperators_17_0,
												"org.integratedmodelling.kim.Kim.ValueOperator");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
				}
		)
		(
			otherlv_18='if'
			{
				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
			}
			(
				(
					lv_condition_19_0=RULE_EXPR
					{
						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
						}
						setWithLastConsumed(
							$current,
							"condition",
							lv_condition_19_0,
							"org.integratedmodelling.kim.Kim.EXPR");
					}
				)
			)
		)?
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleNamedObservableSemantics
entryRuleNamedObservableSemantics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); }
	iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics
	{ $current=$iv_ruleNamedObservableSemantics.current; }
	EOF;

// Rule NamedObservableSemantics
ruleNamedObservableSemantics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='named'
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
		}
		(
			(
				(
					lv_name_2_1=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_1,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_name_2_2=RULE_LOWERCASE_DASHID
					{
						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_2,
							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
					}
					    |
					lv_name_2_3=RULE_STRING
					{
						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_3,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleREL_OPERATOR
entryRuleREL_OPERATOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getREL_OPERATORRule()); }
	iv_ruleREL_OPERATOR=ruleREL_OPERATOR
	{ $current=$iv_ruleREL_OPERATOR.current; }
	EOF;

// Rule REL_OPERATOR
ruleREL_OPERATOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_gt_0_0='>'
				{
					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "gt", lv_gt_0_0 != null, ">");
				}
			)
		)
		    |
		(
			(
				lv_lt_1_0='<'
				{
					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "lt", lv_lt_1_0 != null, "<");
				}
			)
		)
		    |
		(
			(
				lv_eq_2_0='='
				{
					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "eq", lv_eq_2_0 != null, "=");
				}
			)
		)
		    |
		(
			(
				lv_ne_3_0='!='
				{
					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ne", lv_ne_3_0 != null, "!=");
				}
			)
		)
		    |
		(
			(
				lv_le_4_0='<='
				{
					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "le", lv_le_4_0 != null, "<=");
				}
			)
		)
		    |
		(
			(
				lv_ge_5_0='>='
				{
					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ge", lv_ge_5_0 != null, ">=");
				}
			)
		)
	)
;

// Entry rule entryRuleUnitElement
entryRuleUnitElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitElementRule()); }
	iv_ruleUnitElement=ruleUnitElement
	{ $current=$iv_ruleUnitElement.current; }
	EOF;

// Rule UnitElement
ruleUnitElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_1=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_1,
							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
					}
					    |
					lv_id_0_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_2,
							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
					}
					    |
					lv_id_0_3=RULE_UPPERCASE_ID
					{
						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_3,
							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
					}
					    |
					lv_id_0_4=RULE_BACKCASE_ID
					{
						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_4,
							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
					}
				)
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
					}
					lv_unit_2_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitElementRule());
						}
						set(
							$current,
							"unit",
							lv_unit_2_0,
							"org.integratedmodelling.kim.Kim.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
				}
				lv_root_1_0=ruleUnitElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"root",
						lv_root_1_0,
						"org.integratedmodelling.kim.Kim.UnitElement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				((
					(
						ruleUnitOp
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
						}
						lv_connectors_2_0=ruleUnitOp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnitRule());
							}
							add(
								$current,
								"connectors",
								lv_connectors_2_0,
								"org.integratedmodelling.kim.Kim.UnitOp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
					}
					lv_units_3_0=ruleUnitElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitRule());
						}
						add(
							$current,
							"units",
							lv_units_3_0,
							"org.integratedmodelling.kim.Kim.UnitElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCurrency
entryRuleCurrency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurrencyRule()); }
	iv_ruleCurrency=ruleCurrency
	{ $current=$iv_ruleCurrency.current; }
	EOF;

// Rule Currency
ruleCurrency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_UPPERCASE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCurrencyRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
				}
			)
		)
		(
			otherlv_1='@'
			{
				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
			}
			(
				(
					lv_year_2_0=RULE_INT
					{
						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCurrencyRule());
						}
						setWithLastConsumed(
							$current,
							"year",
							lv_year_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			(
				('/')=>
				otherlv_3='/'
				{
					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
					}
					lv_units_4_0=ruleUnitElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCurrencyRule());
						}
						add(
							$current,
							"units",
							lv_units_4_0,
							"org.integratedmodelling.kim.Kim.UnitElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='+'
			{
				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
			}
			    |
			(
				(
					lv_negative_1_0='-'
					{
						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberRule());
						}
						setWithLastConsumed($current, "negative", lv_negative_1_0 != null, "-");
					}
				)
			)
		)?
		(
			((
				RULE_INT
			)
			)=>
			(
				lv_real_2_0=RULE_INT
				{
					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"real",
						lv_real_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			((
				'l'
			)
			)=>
			(
				lv_long_3_0='l'
				{
					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed($current, "long", lv_long_3_0 != null, "l");
				}
			)
		)?
		(
			((
				(
					(
						'.'
					)
				)
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						lv_decimal_4_0='.'
						{
							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed($current, "decimal", lv_decimal_4_0 != null, ".");
						}
					)
				)
				(
					(
						lv_decimalPart_5_0=RULE_INT
						{
							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"decimalPart",
								lv_decimalPart_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
		(
			((
				(
					(
						(
							'e'
							    |
							'E'
						)
					)
				)
				(
					'+'
					    |
					(
						(
							'-'
						)
					)
				)?
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						(
							lv_exponential_6_1='e'
							{
								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", lv_exponential_6_1 != null, null);
							}
							    |
							lv_exponential_6_2='E'
							{
								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", lv_exponential_6_2 != null, null);
							}
						)
					)
				)
				(
					otherlv_7='+'
					{
						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
					}
					    |
					(
						(
							lv_expNegative_8_0='-'
							{
								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "expNegative", lv_expNegative_8_0 != null, "-");
							}
						)
					)
				)?
				(
					(
						lv_exp_9_0=RULE_INT
						{
							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"exp",
								lv_exp_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleQuantity
entryRuleQuantity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantityRule()); }
	iv_ruleQuantity=ruleQuantity
	{ $current=$iv_ruleQuantity.current; }
	EOF;

// Rule Quantity
ruleQuantity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
				}
				lv_value_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantityRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"org.integratedmodelling.kim.Kim.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_over_1_0='/'
					{
						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuantityRule());
						}
						setWithLastConsumed($current, "over", lv_over_1_0 != null, "/");
					}
				)
			)
			    |
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuantityRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"org.integratedmodelling.kim.Kim.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
					}
					lv_currency_4_0=ruleCurrency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuantityRule());
						}
						set(
							$current,
							"currency",
							lv_currency_4_0,
							"org.integratedmodelling.kim.Kim.Currency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_year_0_0=RULE_INT
				{
					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_1='AD'
			{
				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
			}
			    |
			otherlv_2='CE'
			{
				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
			}
			    |
			(
				(
					lv_bc_3_0='BC'
					{
						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed($current, "bc", lv_bc_3_0 != null, "BC");
					}
				)
			)
		)?
		otherlv_4='-'
		{
			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
		}
		(
			(
				lv_month_5_0=RULE_INT
				{
					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='-'
		{
			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
		}
		(
			(
				lv_day_7_0=RULE_INT
				{
					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_hour_8_0=RULE_INT
					{
						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"hour",
							lv_hour_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
			}
			(
				(
					lv_min_10_0=RULE_INT
					{
						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"min",
							lv_min_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
				}
				(
					(
						lv_sec_12_0=RULE_INT
						{
							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDateRule());
							}
							setWithLastConsumed(
								$current,
								"sec",
								lv_sec_12_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_13='.'
					{
						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
					}
					(
						(
							lv_ms_14_0=RULE_INT
							{
								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDateRule());
								}
								setWithLastConsumed(
									$current,
									"ms",
									lv_ms_14_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)?
			)?
		)?
	)
;

// Entry rule entryRulePathName
entryRulePathName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathNameRule()); }
	iv_rulePathName=rulePathName
	{ $current=$iv_rulePathName.current.getText(); }
	EOF;

// Rule PathName
rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_0);
			}
			{
				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_UPPERCASE_ID_1=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_1);
			}
			{
				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
			}
			    |
			this_LOWERCASE_DASHID_2=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_2);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
			}
		)
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
			}
			(
				this_LOWERCASE_ID_4=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_4);
				}
				{
					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_UPPERCASE_ID_5=RULE_UPPERCASE_ID
				{
					$current.merge(this_UPPERCASE_ID_5);
				}
				{
					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
				}
				    |
				this_LOWERCASE_DASHID_6=RULE_LOWERCASE_DASHID
				{
					$current.merge(this_LOWERCASE_DASHID_6);
				}
				{
					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
				}
			)
		)*
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_0);
			}
			{
				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_UPPERCASE_ID_1=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_1);
			}
			{
				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
			}
			    |
			this_LOWERCASE_DASHID_2=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_2);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
			}
		)
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
				}
			)
			(
				this_LOWERCASE_ID_5=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_5);
				}
				{
					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_UPPERCASE_ID_6=RULE_UPPERCASE_ID
				{
					$current.merge(this_UPPERCASE_ID_6);
				}
				{
					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
				}
				    |
				this_LOWERCASE_DASHID_7=RULE_LOWERCASE_DASHID
				{
					$current.merge(this_LOWERCASE_DASHID_7);
				}
				{
					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
				}
			)
		)*
	)
;

// Entry rule entryRuleNamespaceId
entryRuleNamespaceId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceIdRule()); }
	iv_ruleNamespaceId=ruleNamespaceId
	{ $current=$iv_ruleNamespaceId.current.getText(); }
	EOF;

// Rule NamespaceId
ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
		}
		this_CAMELCASE_ID_2=RULE_CAMELCASE_ID
		{
			$current.merge(this_CAMELCASE_ID_2);
		}
		{
			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleAuthorityId
entryRuleAuthorityId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAuthorityIdRule()); }
	iv_ruleAuthorityId=ruleAuthorityId
	{ $current=$iv_ruleAuthorityId.current.getText(); }
	EOF;

// Rule AuthorityId
ruleAuthorityId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_UPPERCASE_PATH_0=RULE_UPPERCASE_PATH
				{
					$current.merge(this_UPPERCASE_PATH_0);
				}
				{
					newLeafNode(this_UPPERCASE_PATH_0, grammarAccess.getAuthorityIdAccess().getUPPERCASE_PATHTerminalRuleCall_0_0_0());
				}
				    |
				this_UPPERCASE_ID_1=RULE_UPPERCASE_ID
				{
					$current.merge(this_UPPERCASE_ID_1);
				}
				{
					newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_0_1());
				}
			)
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getColonKeyword_0_1());
			}
			(
				this_LOWERCASE_ID_3=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_3);
				}
				{
					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_2_0());
				}
				    |
				this_UPPERCASE_ID_4=RULE_UPPERCASE_ID
				{
					$current.merge(this_UPPERCASE_ID_4);
				}
				{
					newLeafNode(this_UPPERCASE_ID_4, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_2_1());
				}
				    |
				this_INT_5=RULE_INT
				{
					$current.merge(this_INT_5);
				}
				{
					newLeafNode(this_INT_5, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_2_2());
				}
				    |
				this_STRING_6=RULE_STRING
				{
					$current.merge(this_STRING_6);
				}
				{
					newLeafNode(this_STRING_6, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_2_3());
				}
			)
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getFullStopKeyword_0_3_0());
				}
				(
					this_LOWERCASE_ID_8=RULE_LOWERCASE_ID
					{
						$current.merge(this_LOWERCASE_ID_8);
					}
					{
						newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_3_1_0());
					}
					    |
					this_UPPERCASE_ID_9=RULE_UPPERCASE_ID
					{
						$current.merge(this_UPPERCASE_ID_9);
					}
					{
						newLeafNode(this_UPPERCASE_ID_9, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_3_1_1());
					}
					    |
					this_INT_10=RULE_INT
					{
						$current.merge(this_INT_10);
					}
					{
						newLeafNode(this_INT_10, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_3_1_2());
					}
					    |
					this_STRING_11=RULE_STRING
					{
						$current.merge(this_STRING_11);
					}
					{
						newLeafNode(this_STRING_11, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_3_1_3());
					}
				)
			)*
		)
		    |
		{
			newCompositeNode(grammarAccess.getAuthorityIdAccess().getWellFormedUrnIdWithFragmentParserRuleCall_1());
		}
		this_WellFormedUrnIdWithFragment_12=ruleWellFormedUrnIdWithFragment
		{
			$current.merge(this_WellFormedUrnIdWithFragment_12);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePropertyId
entryRulePropertyId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPropertyIdRule()); }
	iv_rulePropertyId=rulePropertyId
	{ $current=$iv_rulePropertyId.current.getText(); }
	EOF;

// Rule PropertyId
rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
			}
			this_PathName_0=rulePathName
			{
				$current.merge(this_PathName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_LOWERCASE_ID_1=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_1);
			}
			{
				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
			}
		)
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
		}
		(
			this_LOWERCASE_ID_3=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_3);
			}
			{
				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
			}
			    |
			this_BACKCASE_ID_4=RULE_BACKCASE_ID
			{
				$current.merge(this_BACKCASE_ID_4);
			}
			{
				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
			}
			    |
			this_LOWERCASE_DASHID_5=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_5);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
			}
		)
	)
;

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionNumberRule()); }
	iv_ruleVersionNumber=ruleVersionNumber
	{ $current=$iv_ruleVersionNumber.current.getText(); }
	EOF;

// Rule VersionNumber
ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
			}
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
				}
				this_INT_4=RULE_INT
				{
					$current.merge(this_INT_4);
				}
				{
					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
				}
			)?
		)?
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
			}
		)?
		(
			this_LOWERCASE_ID_6=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_6);
			}
			{
				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
			}
			    |
			this_UPPERCASE_ID_7=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_7);
			}
			{
				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
			}
		)?
	)
;

// Rule UnitOp
ruleUnitOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='/'
			{
				$current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='^'
			{
				$current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_EXPR : ('['|'#[') ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|']'|'\\')|~(('\\'|']')))* ']';

RULE_OPTION_KEY : '?' 'a'..'z' ('a'..'z'|'0'..'9')*;

RULE_ANNOTATION_ID : '@' RULE_LOWERCASE_ID;

RULE_TEMPLATE_VAR : '%' 'a'..'z' ('a'..'z'|'0'..'9'|'_')* '%';

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_LOWERCASE_DASHID : 'a'..'z' ('a'..'z'|'0'..'9'|'-')*;

RULE_SEPARATOR : '---' '-'*;

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z'|'0'..'9'|'_')+;

RULE_UPPERCASE_PATH : RULE_UPPERCASE_ID ('.' (RULE_UPPERCASE_ID|RULE_INT))*;

RULE_CAMELCASE_ID : 'A'..'Z' ('A'..'z'|'0'..'9')*;

RULE_BACKCASE_ID : 'a'..'z' ('A'..'z'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
