/**
 * generated by Xtext 2.9.1
 */
package org.integratedmodelling.kim.ui.contentassist;

import java.util.Collection;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.integratedmodelling.kim.kim.Function;
import org.integratedmodelling.kim.ui.elink.ConceptHelper;
import org.integratedmodelling.kim.ui.elink.FunctionParameterHelper;

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class KimProposalProvider extends AbstractKimProposalProvider {
  private static FunctionParameterHelper functionHelper;

  private static ConceptHelper conceptHelper;

  public static void setFunctionParameterHelper(final FunctionParameterHelper functionHelper) {
    KimProposalProvider.functionHelper = functionHelper;
  }

  public static void setConceptHelper(final ConceptHelper functionHelper) {
    KimProposalProvider.conceptHelper = functionHelper;
  }

  @Override
  public void complete_Function(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    if ((model instanceof Function)) {
      String function = ((Function) model).getName();
      if ((KimProposalProvider.functionHelper != null)) {
        Collection<Collection<String>> _parameterProposals = KimProposalProvider.functionHelper.getParameterProposals(function);
        for (final Collection<String> parameter : _parameterProposals) {
          acceptor.accept(this.createCompletionProposal(((String[])Conversions.unwrapArray(parameter, String.class))[0], ((String[])Conversions.unwrapArray(parameter, String.class))[1], null, context));
        }
      }
    }
  }
}
