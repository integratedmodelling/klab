/**
 * generated by Xtext 2.27.0
 */
package org.integratedmodelling.kdl.kdl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kdl.kdl.ActorDefinition;
import org.integratedmodelling.kdl.kdl.Define;
import org.integratedmodelling.kdl.kdl.Function;
import org.integratedmodelling.kdl.kdl.KdlPackage;
import org.integratedmodelling.kdl.kdl.Model;
import org.integratedmodelling.kdl.kdl.Parameter;
import org.integratedmodelling.kdl.kdl.Urn;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getConstants <em>Constants</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getAuthors <em>Authors</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getKlabVersion <em>Klab Version</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getWorldview <em>Worldview</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getGeometry <em>Geometry</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getEndpoint <em>Endpoint</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getPackage <em>Package</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getScale <em>Scale</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getContextUrn <em>Context Urn</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getDefines <em>Defines</em>}</li>
 *   <li>{@link org.integratedmodelling.kdl.kdl.impl.ModelImpl#getActors <em>Actors</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected EList<Parameter> variables;

  /**
   * The cached value of the '{@link #getConstants() <em>Constants</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstants()
   * @generated
   * @ordered
   */
  protected EList<Parameter> constants;

  /**
   * The cached value of the '{@link #getAuthors() <em>Authors</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthors()
   * @generated
   * @ordered
   */
  protected EList<String> authors;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getKlabVersion() <em>Klab Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKlabVersion()
   * @generated
   * @ordered
   */
  protected static final String KLAB_VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKlabVersion() <em>Klab Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKlabVersion()
   * @generated
   * @ordered
   */
  protected String klabVersion = KLAB_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getWorldview() <em>Worldview</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorldview()
   * @generated
   * @ordered
   */
  protected static final String WORLDVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWorldview() <em>Worldview</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorldview()
   * @generated
   * @ordered
   */
  protected String worldview = WORLDVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getGeometry() <em>Geometry</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeometry()
   * @generated
   * @ordered
   */
  protected static final String GEOMETRY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGeometry() <em>Geometry</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeometry()
   * @generated
   * @ordered
   */
  protected String geometry = GEOMETRY_EDEFAULT;

  /**
   * The default value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndpoint()
   * @generated
   * @ordered
   */
  protected static final String ENDPOINT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndpoint()
   * @generated
   * @ordered
   */
  protected String endpoint = ENDPOINT_EDEFAULT;

  /**
   * The default value of the '{@link #getPackage() <em>Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackage()
   * @generated
   * @ordered
   */
  protected static final String PACKAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPackage() <em>Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackage()
   * @generated
   * @ordered
   */
  protected String package_ = PACKAGE_EDEFAULT;

  /**
   * The cached value of the '{@link #getScale() <em>Scale</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScale()
   * @generated
   * @ordered
   */
  protected EList<Function> scale;

  /**
   * The cached value of the '{@link #getContextUrn() <em>Context Urn</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextUrn()
   * @generated
   * @ordered
   */
  protected Urn contextUrn;

  /**
   * The cached value of the '{@link #getDefines() <em>Defines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefines()
   * @generated
   * @ordered
   */
  protected EList<Define> defines;

  /**
   * The cached value of the '{@link #getActors() <em>Actors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActors()
   * @generated
   * @ordered
   */
  protected EList<ActorDefinition> actors;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KdlPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getVariables()
  {
    if (variables == null)
    {
      variables = new EObjectContainmentEList<Parameter>(Parameter.class, this, KdlPackage.MODEL__VARIABLES);
    }
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getConstants()
  {
    if (constants == null)
    {
      constants = new EObjectContainmentEList<Parameter>(Parameter.class, this, KdlPackage.MODEL__CONSTANTS);
    }
    return constants;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getAuthors()
  {
    if (authors == null)
    {
      authors = new EDataTypeEList<String>(String.class, this, KdlPackage.MODEL__AUTHORS);
    }
    return authors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKlabVersion()
  {
    return klabVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKlabVersion(String newKlabVersion)
  {
    String oldKlabVersion = klabVersion;
    klabVersion = newKlabVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__KLAB_VERSION, oldKlabVersion, klabVersion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWorldview()
  {
    return worldview;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWorldview(String newWorldview)
  {
    String oldWorldview = worldview;
    worldview = newWorldview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__WORLDVIEW, oldWorldview, worldview));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGeometry()
  {
    return geometry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGeometry(String newGeometry)
  {
    String oldGeometry = geometry;
    geometry = newGeometry;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__GEOMETRY, oldGeometry, geometry));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEndpoint()
  {
    return endpoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndpoint(String newEndpoint)
  {
    String oldEndpoint = endpoint;
    endpoint = newEndpoint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__ENDPOINT, oldEndpoint, endpoint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPackage()
  {
    return package_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPackage(String newPackage)
  {
    String oldPackage = package_;
    package_ = newPackage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__PACKAGE, oldPackage, package_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Function> getScale()
  {
    if (scale == null)
    {
      scale = new EObjectContainmentEList<Function>(Function.class, this, KdlPackage.MODEL__SCALE);
    }
    return scale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Urn getContextUrn()
  {
    return contextUrn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContextUrn(Urn newContextUrn, NotificationChain msgs)
  {
    Urn oldContextUrn = contextUrn;
    contextUrn = newContextUrn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__CONTEXT_URN, oldContextUrn, newContextUrn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContextUrn(Urn newContextUrn)
  {
    if (newContextUrn != contextUrn)
    {
      NotificationChain msgs = null;
      if (contextUrn != null)
        msgs = ((InternalEObject)contextUrn).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdlPackage.MODEL__CONTEXT_URN, null, msgs);
      if (newContextUrn != null)
        msgs = ((InternalEObject)newContextUrn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdlPackage.MODEL__CONTEXT_URN, null, msgs);
      msgs = basicSetContextUrn(newContextUrn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdlPackage.MODEL__CONTEXT_URN, newContextUrn, newContextUrn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Define> getDefines()
  {
    if (defines == null)
    {
      defines = new EObjectContainmentEList<Define>(Define.class, this, KdlPackage.MODEL__DEFINES);
    }
    return defines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ActorDefinition> getActors()
  {
    if (actors == null)
    {
      actors = new EObjectContainmentEList<ActorDefinition>(ActorDefinition.class, this, KdlPackage.MODEL__ACTORS);
    }
    return actors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KdlPackage.MODEL__VARIABLES:
        return ((InternalEList<?>)getVariables()).basicRemove(otherEnd, msgs);
      case KdlPackage.MODEL__CONSTANTS:
        return ((InternalEList<?>)getConstants()).basicRemove(otherEnd, msgs);
      case KdlPackage.MODEL__SCALE:
        return ((InternalEList<?>)getScale()).basicRemove(otherEnd, msgs);
      case KdlPackage.MODEL__CONTEXT_URN:
        return basicSetContextUrn(null, msgs);
      case KdlPackage.MODEL__DEFINES:
        return ((InternalEList<?>)getDefines()).basicRemove(otherEnd, msgs);
      case KdlPackage.MODEL__ACTORS:
        return ((InternalEList<?>)getActors()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KdlPackage.MODEL__NAME:
        return getName();
      case KdlPackage.MODEL__VARIABLES:
        return getVariables();
      case KdlPackage.MODEL__CONSTANTS:
        return getConstants();
      case KdlPackage.MODEL__AUTHORS:
        return getAuthors();
      case KdlPackage.MODEL__VERSION:
        return getVersion();
      case KdlPackage.MODEL__KLAB_VERSION:
        return getKlabVersion();
      case KdlPackage.MODEL__WORLDVIEW:
        return getWorldview();
      case KdlPackage.MODEL__GEOMETRY:
        return getGeometry();
      case KdlPackage.MODEL__ENDPOINT:
        return getEndpoint();
      case KdlPackage.MODEL__PACKAGE:
        return getPackage();
      case KdlPackage.MODEL__SCALE:
        return getScale();
      case KdlPackage.MODEL__CONTEXT_URN:
        return getContextUrn();
      case KdlPackage.MODEL__DEFINES:
        return getDefines();
      case KdlPackage.MODEL__ACTORS:
        return getActors();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KdlPackage.MODEL__NAME:
        setName((String)newValue);
        return;
      case KdlPackage.MODEL__VARIABLES:
        getVariables().clear();
        getVariables().addAll((Collection<? extends Parameter>)newValue);
        return;
      case KdlPackage.MODEL__CONSTANTS:
        getConstants().clear();
        getConstants().addAll((Collection<? extends Parameter>)newValue);
        return;
      case KdlPackage.MODEL__AUTHORS:
        getAuthors().clear();
        getAuthors().addAll((Collection<? extends String>)newValue);
        return;
      case KdlPackage.MODEL__VERSION:
        setVersion((String)newValue);
        return;
      case KdlPackage.MODEL__KLAB_VERSION:
        setKlabVersion((String)newValue);
        return;
      case KdlPackage.MODEL__WORLDVIEW:
        setWorldview((String)newValue);
        return;
      case KdlPackage.MODEL__GEOMETRY:
        setGeometry((String)newValue);
        return;
      case KdlPackage.MODEL__ENDPOINT:
        setEndpoint((String)newValue);
        return;
      case KdlPackage.MODEL__PACKAGE:
        setPackage((String)newValue);
        return;
      case KdlPackage.MODEL__SCALE:
        getScale().clear();
        getScale().addAll((Collection<? extends Function>)newValue);
        return;
      case KdlPackage.MODEL__CONTEXT_URN:
        setContextUrn((Urn)newValue);
        return;
      case KdlPackage.MODEL__DEFINES:
        getDefines().clear();
        getDefines().addAll((Collection<? extends Define>)newValue);
        return;
      case KdlPackage.MODEL__ACTORS:
        getActors().clear();
        getActors().addAll((Collection<? extends ActorDefinition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KdlPackage.MODEL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case KdlPackage.MODEL__VARIABLES:
        getVariables().clear();
        return;
      case KdlPackage.MODEL__CONSTANTS:
        getConstants().clear();
        return;
      case KdlPackage.MODEL__AUTHORS:
        getAuthors().clear();
        return;
      case KdlPackage.MODEL__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case KdlPackage.MODEL__KLAB_VERSION:
        setKlabVersion(KLAB_VERSION_EDEFAULT);
        return;
      case KdlPackage.MODEL__WORLDVIEW:
        setWorldview(WORLDVIEW_EDEFAULT);
        return;
      case KdlPackage.MODEL__GEOMETRY:
        setGeometry(GEOMETRY_EDEFAULT);
        return;
      case KdlPackage.MODEL__ENDPOINT:
        setEndpoint(ENDPOINT_EDEFAULT);
        return;
      case KdlPackage.MODEL__PACKAGE:
        setPackage(PACKAGE_EDEFAULT);
        return;
      case KdlPackage.MODEL__SCALE:
        getScale().clear();
        return;
      case KdlPackage.MODEL__CONTEXT_URN:
        setContextUrn((Urn)null);
        return;
      case KdlPackage.MODEL__DEFINES:
        getDefines().clear();
        return;
      case KdlPackage.MODEL__ACTORS:
        getActors().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KdlPackage.MODEL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case KdlPackage.MODEL__VARIABLES:
        return variables != null && !variables.isEmpty();
      case KdlPackage.MODEL__CONSTANTS:
        return constants != null && !constants.isEmpty();
      case KdlPackage.MODEL__AUTHORS:
        return authors != null && !authors.isEmpty();
      case KdlPackage.MODEL__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case KdlPackage.MODEL__KLAB_VERSION:
        return KLAB_VERSION_EDEFAULT == null ? klabVersion != null : !KLAB_VERSION_EDEFAULT.equals(klabVersion);
      case KdlPackage.MODEL__WORLDVIEW:
        return WORLDVIEW_EDEFAULT == null ? worldview != null : !WORLDVIEW_EDEFAULT.equals(worldview);
      case KdlPackage.MODEL__GEOMETRY:
        return GEOMETRY_EDEFAULT == null ? geometry != null : !GEOMETRY_EDEFAULT.equals(geometry);
      case KdlPackage.MODEL__ENDPOINT:
        return ENDPOINT_EDEFAULT == null ? endpoint != null : !ENDPOINT_EDEFAULT.equals(endpoint);
      case KdlPackage.MODEL__PACKAGE:
        return PACKAGE_EDEFAULT == null ? package_ != null : !PACKAGE_EDEFAULT.equals(package_);
      case KdlPackage.MODEL__SCALE:
        return scale != null && !scale.isEmpty();
      case KdlPackage.MODEL__CONTEXT_URN:
        return contextUrn != null;
      case KdlPackage.MODEL__DEFINES:
        return defines != null && !defines.isEmpty();
      case KdlPackage.MODEL__ACTORS:
        return actors != null && !actors.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", authors: ");
    result.append(authors);
    result.append(", version: ");
    result.append(version);
    result.append(", klabVersion: ");
    result.append(klabVersion);
    result.append(", worldview: ");
    result.append(worldview);
    result.append(", geometry: ");
    result.append(geometry);
    result.append(", endpoint: ");
    result.append(endpoint);
    result.append(", package: ");
    result.append(package_);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
