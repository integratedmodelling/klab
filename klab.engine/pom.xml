<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.integratedmodelling</groupId>
		<artifactId>klab</artifactId>
		<version>0.11.0-SNAPSHOT</version>
	</parent>
	<artifactId>klab.engine</artifactId>

	<!-- wanted by jgrasstools and osm4j. Would be lovely to avoid these. -->
	<repositories>
		<repository>
			<id>slimjars</id>
			<url>https://mvn.slimjars.com</url>
		</repository>
		<!-- Another old library hosting its news builds on its own repo -->
		<repository>
			<id>topobyte</id>
			<url>https://mvn.topobyte.de</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>osgeo-snapshot</id>
			<name>OSGeo Snapshot Repository</name>
			<url>https://repo.osgeo.org/repository/snapshot/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>groovy-plugins-release</id>
      <url>https://groovy.jfrog.io/artifactory/plugins-release</url>
    </pluginRepository>
  </pluginRepositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<configuration>
						<!-- we don't want jib to execute on this module -->
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- 2.8.0-01 and later require maven-compiler-plugin 3.1 or higher -->
					<version>3.8.1</version>
					<configuration>
						<compilerId>groovy-eclipse-compiler</compilerId>
						<!-- <compilerArguments> <indy /> </compilerArguments> -->
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-compiler</artifactId>
							<version>3.8.0</version>
						</dependency>
						<!-- for 2.8.0-01 and later you must have an explicit dependency on
							groovy-eclipse-batch -->
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-batch</artifactId>
							<version>3.0.11-03</version>
							<!-- <version>2.5.9-01</version> -->
							<!-- or choose a different compiler version -->
							<!-- <version>2.5.14-02</version> -->
							<!-- <version>1.7.10-06</version> -->
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
	
		<!-- testing a possible GraphQL interface for the runtime system
		<dependency>
			<groupId>io.leangen.graphql</groupId>
			<artifactId>spqr</artifactId>
			<version>0.11.2</version>
		</dependency>-->

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>

		<!-- for debugging: visualize jgrapht graphs -->
		<dependency>
			<groupId>com.github.vlsi.mxgraph</groupId>
			<artifactId>jgraphx</artifactId>
			<version>4.2.2</version>
		</dependency>

		<!-- xChart for the charting extension of the table view -->
		<dependency>
			<groupId>org.knowm.xchart</groupId>
			<artifactId>xchart</artifactId>
			<version>3.6.5</version>
		</dependency>

		<!-- Unirest, while redundant with Spring templates, removes a lot of pain
			when doing quick REST interactions -->
		<dependency>
			<groupId>com.konghq</groupId>
			<artifactId>unirest-java</artifactId>
			<version>3.13.6</version>
		</dependency>
		<dependency>
			<groupId>com.konghq</groupId>
			<artifactId>unirest-objectmapper-jackson</artifactId>
			<version>3.13.6</version>
		</dependency>

		<!-- POI for Excel -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.1</version>
		</dependency>

		<!-- tiny Jar to pluralize subject names for folder IDs -->
		<dependency>
			<groupId>org.atteo</groupId>
			<artifactId>evo-inflector</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- velocity-engine-core for dataflow doc templates -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- gexf4j to export networks as GEXF -->
		<dependency>
			<groupId>it.uniroma1.dis.wsngroup.gexf4j</groupId>
			<artifactId>gexf4j</artifactId>
			<version>0.4.3-BETA</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- MapDB for various persistent caches. Simple, used it a lot, never
			a problem. -->
		<dependency>
			<groupId>org.mapdb</groupId>
			<artifactId>mapdb</artifactId>
			<version>3.0.7</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>

		<!-- flexmark for Markdown processing in report generation -->
		<dependency>
			<groupId>com.vladsch.flexmark</groupId>
			<artifactId>flexmark-all</artifactId>
			<version>0.34.28</version>
		</dependency>

		<!-- osm4j suite -->
		<dependency>
			<groupId>de.topobyte</groupId>
			<artifactId>osm4j-core</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.measure</groupId>
					<artifactId>jsr-275</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech.jts</groupId>
					<artifactId>jts-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>de.topobyte</groupId>
			<artifactId>osm4j-xml</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.measure</groupId>
					<artifactId>jsr-275</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech.jts</groupId>
					<artifactId>jts-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>de.topobyte</groupId>
			<artifactId>osm4j-geometry</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech</groupId>
					<artifactId>jts</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.measure</groupId>
					<artifactId>jsr-275</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech.jts</groupId>
					<artifactId>jts-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>de.topobyte</groupId>
			<artifactId>osm4j-utils</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech</groupId>
					<artifactId>jts</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.measure</groupId>
					<artifactId>jsr-275</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.locationtech.jts</groupId>
					<artifactId>jts-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- all of a sudden, WCS parsing stops working unless this is added. -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>

		<!-- Elk core for dataflow diagramming -->
		<dependency>
			<groupId>org.eclipse.elk</groupId>
			<artifactId>org.eclipse.elk.core</artifactId>
			<version>0.8.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.elk</groupId>
			<artifactId>org.eclipse.elk.graph.json</artifactId>
			<version>0.8.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.elk</groupId>
			<artifactId>org.eclipse.elk.core.meta</artifactId>
			<version>0.8.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.elk</groupId>
			<artifactId>org.eclipse.elk.alg.layered</artifactId>
			<version>0.8.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>org.eclipse.xtext.xbase</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- zip resources for publishing -->
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- Lucene for indexing -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>7.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-suggest</artifactId>
			<version>7.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-spatial</artifactId>
			<version>7.4.0</version>
		</dependency>
		<!-- query parser is just for testing at the moment -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>7.4.0</version>
		</dependency>

		<!-- JUNG for network analysis, generation and I/O. Visualization only
			included in test scope. -->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>${jung.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>${jung.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-io</artifactId>
			<version>${jung.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>${jung.version}</version>
			<!-- TODO reintegrate! <scope>test</scope> -->
		</dependency>
		<!-- TODO temporary! Just to learn the API -->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-samples</artifactId>
			<version>${jung.version}</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.14.0-GA</version>
			<type>jar</type>
		</dependency>

		<!-- Websockets support -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Kotlin support <dependency> <groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId> <version>${kotlin.version}</version>
			</dependency> <dependency> <groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId> <version>2.9.5</version> </dependency> -->

		<!-- JSON schema extraction -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jsonSchema</artifactId>
			<version>${jackson-version}</version>
			<exclusions>
				<exclusion>
					<!-- uses 1.1.0, which messes up Spring -->
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>org.integratedmodelling.klab.api</artifactId>
			<version>${klab.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time-version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple </artifactId>
			<version>4.6</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.eclipse.xtext/org.eclipse.xtext -->
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext</artifactId>
			<version>${xtextVersion}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.xtext/org.eclipse.xtext.util -->
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.util</artifactId>
			<version>${xtextVersion}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.xtext/org.eclipse.xtext.testing
			Used in compile scope to provide simple, reentrant parser injector for repeated
			calls to declaration parser. -->
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.testing</artifactId>
			<version>${xtextVersion}</version>
		</dependency>


		<!-- classpath scanning; this can be removed in favor of Spring's PathMatchingResourcePatternResolver,
			but Spring shouldn't be needed in the embedded engine and the API is better
			here. -->
		<!-- <dependency> -->
		<!-- <groupId>org.reflections</groupId> -->
		<!-- <artifactId>reflections</artifactId> -->
		<!-- <version>0.9.11</version> -->
		<!-- </dependency> -->

		<!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.10.2</version>
		</dependency>

		<!-- Groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<!-- <version>2.5.0-beta-2</version> -->
			<version>3.0.11</version>
			<!-- <classifier>indy</classifier> -->
		</dependency>

		<!-- basic graph API -->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core </artifactId>
			<version>1.5.2</version>
		</dependency>
		
		<!-- graph I/O -->
		<dependency>
    		<groupId>org.jgrapht</groupId>
    		<artifactId>jgrapht-io</artifactId>
    		<version>1.5.2</version>
		</dependency>

		<!-- OWL and DL reasoning -->
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-distribution </artifactId>
			<version>3.4.10</version>
		</dependency>
		<dependency>
			<groupId>com.hermit-reasoner</groupId>
			<artifactId>org.semanticweb.hermit</artifactId>
			<version>1.3.8.4</version>
		</dependency>

		<!-- spatial H2 database for kboxes -->
		<dependency>
			<groupId>org.orbisgis</groupId>
			<artifactId>h2gis</artifactId>
			<version>2.1.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/args4j/args4j startup options parser -->
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.33</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.20.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java-util -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java-util</artifactId>
			<version>3.20.3</version>
		</dependency>

		<dependency>
			<groupId>net.postgis</groupId>
			<artifactId>postgis-geometry</artifactId>
			<version>2.5.0</version>
		</dependency>

		<!-- GEOTOOLS mess starts -->
		<!-- <dependency> <groupId>org.geotools</groupId> <artifactId>gt-metadata</artifactId>
			<version>${geotools.version}</version> </dependency> -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-referencing</artifactId>
			<version>${geotools.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax</groupId>
					<artifactId>javaee-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geojson</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geotiff</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-extension</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-brewer</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-process</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-process-raster</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-process-feature</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools.jdbc</groupId>
			<artifactId>gt-jdbc-postgis</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geojson-core</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<!-- <dependency> <groupId>org.geotools</groupId> <artifactId>gt-netcdf</artifactId>
			<version>${geotools.version}</version> </dependency> -->
		<!-- GEOTOOLS mess ends -->

		<!-- Actor system (for the default runtime provider). Use 2_12 or the Json
			schema generator won't find scala.Serializable. -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor-typed_2.12</artifactId>
			<!-- ACHTUNG 2.7.0 throws "Unsupported access to ActorContext" exceptions when spawning UI component actors, which do not seem right -->
			<version>2.6.3</version>
		</dependency>

		<!-- ENGINE DEBUGGING/VISUALIZATION DEPS -->

		<!-- for map display with JMapFrame/MapDisplay -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-render</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-swing</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jgrapht/jgrapht-ext -->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-ext</artifactId>
			<version>1.5.2</version>
		</dependency>

		<dependency>
			<groupId>com.kjetland</groupId>
			<artifactId>mbknor-jackson-jsonschema_2.12</artifactId>
			<version>1.0.36</version>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- swagger for API docs -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.0-jre</version>
		</dependency>

		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>org.integratedmodelling.kim</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>org.integratedmodelling.kactors</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>org.integratedmodelling.kdl</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.authentication</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.verhas/license3j -->
		<dependency>
			<groupId>com.verhas</groupId>
			<artifactId>license3j</artifactId>
			<version>2.0.0-JVM8</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec </groupId>
			<artifactId>commons-codec </artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>


		<!-- for @Nullable and the like -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit -->
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>4.4.0.201606070830-r</version>
		</dependency>

		<!-- CLIENT DEPENDENCIES -->
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker </artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.2</version>
		</dependency>

	</dependencies>
</project>
