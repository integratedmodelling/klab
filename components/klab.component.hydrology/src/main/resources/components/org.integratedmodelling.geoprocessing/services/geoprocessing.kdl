/**
 * Interface contextualizers for various standard geoprocessing operations.
 */
@klab 0.10.0
@version 0.10.0
@namespace im.geoprocessing

filter object buffer
	"Transforms or creates spatial objects by adding a buffer to their spatial extent."
	 label 'Distance buffering'
{
	number radius
		"The distance to add to each spatial feature in meters"
		
	optional import object artifact 
		"The artifact to use to produce the objects. If not passed, the target artifact is modified." 
		default ""
		
	optional boolean subtract 
		"If passed, only the buffer area is retained in the final result, removing the original 
		 feature to form a hole. It has no effect if the original feature is 0-dimensional (point
		 or multipoint)." 
		default false
	
	optional number simplify 
		"If passed, the original shape is simplified by the passed factor before buffering." 
		default 0
	
	class org.integratedmodelling.geoprocessing.core.FeatureBufferingInstantiator
}

export number kriging
	"Interpolates values of point features using the semivariogram method."
	 label 'Kriging'
{
	import object artifact 
		"The object artifact to use to produce the source points. Should identify point features; if not points,
		 the centroid will be used and the states will be aggregated."
		
	concept state 
		"The semantics for the state to use in the source points or features." 

	optional number radius
		"The distance in m at which the value of two points become spatially uncorrelated. Must be specified if mode is
		 Gaussian."
		default 0.0

	optional number sill
		"The semivariance when distance >= range. If not specified, the variance of the input values is used."
		default 0.0
		
	optional number nugget
		"The initial semivariance at distance near 0. If not specified it is set to 0."
		default 0.0
		
	optional boolean exponential
		"Use an exponential semivariogram instead of the default exponential one. If true , integral scale and
		 variance parameters must be passed."
		default false
		
	optional boolean includezero
		"Include zero values in the semivariogram computation. Default is true."
		default true
		
	optional boolean logarithmic
		"Use log-transformed input data when computing the semivariogram. Default false."
		default false
		
	optional import number elevation 
		"If passed, elevation is used as a covariate for prediction. Useful in elevation-dependent predictions
		 such as precipitation or temperature."
	
	geometry S2
	
	class org.integratedmodelling.geoprocessing.core.KrigingResolver
}

export number viewshed 
    "Create a raster map of viewshed, based on multiple view source points."
    label 'Viewshed'
{
    import object viewpoints
        "The viewpoint observations. If the features are not points, the
         centroid will be used."
         
    import number elevation
        "A DEM observation."
    
    optional number height
        "The height of the source view points in meters over the terrain."
        default 100.0
    
    geometry S2
    
    class org.integratedmodelling.geoprocessing.viewshed.ViewshedResolver
}
 
export number fillvalues
    "Fill the missing values of a raster by interpolation of nearby valid cells."
    label 'RasterMissingValuesFiller'
{
    import number raster
        "The raster containing novalue holes that need tobe filled."
         
    optional number validcellsbuffer
        "The maximum buffer in cells, within which valid cells are used to contribute to the interpolation of the missing value."
        default 10.0
    
    optional enum interpolationmode
        "The interpolation mode to use. Valid options are: IDW, TPS, AVERAGING, CATEGORIES"
        default IDW
    
    geometry S2
    
    class org.integratedmodelling.geoprocessing.core.RasterMissingValuesFillerResolver
}

export number sentinel
    "Download sentinel data."
    label 'SentinelDownloader'
{
    optional enum band
        "The band to extract. Valid options are: red, green, blue, nir1, nir2, nir3, swir1, swir2"
        default red
    
    geometry S2
    
    class org.integratedmodelling.geoprocessing.remotesensing.SentinelResolver
}

export number barnesinterpolator
	"Interpolates values of point features using the Barnes Surface Interpolation method"
	 label 'BarnesInterpolator'
{
	import object artifact 
		"The object artifact to use to produce the source points. Should identify point features; if not points,
		 the centroid will be used and the states will be aggregated."
		
	concept state 
		"The semantics for the state to use in the source points or features." 
		
	optional number "scale"
	    "Sets the length scale in m for the interpolation weighting function. 
	    The length scale should be determined from the distance between the observation points, 
	    as well as the scale of the phenomena. Default is 1 km"
	    
	optional number "iterations"
	    "Sets the number of passes performed during interpolation. Default is 1"

	optional number "maxdist"
		"Sets the maximum distance from an observation for a grid point to be supported by that observation,
		 If the value is 0  (default), all grid points are considered to be supported."
		
	optional number "minobs"
	    "Sets the minimum number of in-range observations which are required for a grid point to be supported. 
	    Default is 2."
	    
	optional number "convergence"
	    "Sets the convergence factor used during refinement passes. The value should be in the range [0,1].Default is 0.3"

	geometry S2
	
	class org.integratedmodelling.geoprocessing.core.BarnesSurfaceResolver
}
